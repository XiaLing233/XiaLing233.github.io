<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自动部署 HTTPS 证书</title>
      <link href="//2025/03/auto-ssl-cert/"/>
      <url>//2025/03/auto-ssl-cert/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>之前使用腾讯云的证书，只有 90 天的有效期，每次到期了就要手动部署，下载 <code>.crt</code> 和 <code>.pri</code> 文件（或者是 <code>.key</code> ，吧，记不清了），然后手动移动到对应的文件夹。一个域名就要花好几分钟，效率很低。</p><p>因此问了问 AI，有什么更好的方案。最终决定采用 Let’s Encrypt 和 Certbot 结合的自动化方案。</p><h3 id="哪个证书"><a href="#哪个证书" class="headerlink" title="哪个证书"></a>哪个证书</h3><p>这里需要澄清一个问题。Cloudflare 有一个 Edge Certficate 的方案，可以自动化地续期证书，这个证书是浏览器访问域名时用到的证书。</p><p>然而在 Cloudflare 的服务器和源服务器之间，仍然需要自动化处理证书。本文要解决的是后者。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户 -- Edge Certificate --&gt; CF 代理服务器 -- 本文要解决的证书 --&gt; 源服务器</span><br></pre></td></tr></table></figure><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="安装-snapd"><a href="#安装-snapd" class="headerlink" title="安装 snapd"></a>安装 snapd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install snapd -y</span><br></pre></td></tr></table></figure><h3 id="安装-Certbot"><a href="#安装-Certbot" class="headerlink" title="安装 Certbot"></a>安装 Certbot</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo snap install core  <span class="comment"># 确保 snap 运行环境是最新的</span></span><br><span class="line">sudo snap refresh core</span><br><span class="line">sudo snap install --classic certbot  <span class="comment"># 安装 Certbot</span></span><br></pre></td></tr></table></figure><h3 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a>创建软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /snap/bin/certbot /usr/bin/certbot</span><br></pre></td></tr></table></figure><p>一番操作下来，Azure 的网络是最好的，aws 还是慢。但 Azure 好贵啊，额度用完后估计要迁移到 aws 了，又是一番折腾。</p><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx -d example.com -d www.example.com</span><br></pre></td></tr></table></figure><p>理想很丰满，实际上会报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Certbot failed to authenticate some domains (authenticator: nginx). The Certificate Authority reported these problems:</span><br><span class="line">  Domain: 1.xialing.icu</span><br><span class="line">  Type:   unauthorized</span><br><span class="line">  Detail: 【ipv6 地址】: Invalid response from http://1.xialing.icu/.well-known/acme-challenge/XXD52kwolPjOLvUbELt9FrNr2FM</span><br><span class="line"></span><br><span class="line">  Domain: xk.xialing.icu</span><br><span class="line">  Type:   unauthorized</span><br><span class="line">  Detail: 【ipv6 地址】: Invalid response from http://xk.xialing.icu/.well-known/acme-challenge/K0Y6JWQN4OKW0fB9-ZjBp3jKRL</span><br><span class="line"></span><br><span class="line">Hint: The Certificate Authority failed to verify the temporary nginx configuration changes made by Certbot. Ensure the listed domains er and that it is accessible from the internet.</span><br></pre></td></tr></table></figure><p>原因是因为我的服务器走了 Cloudflare 的代理，导致域名解析到的不是源服务器，而是 Cloudflare 的代理服务器。</p><p>难不成每次都要关闭代理？肯定有更好的方案。</p><h3 id="使用-Cloudflare-API-进行-DNS-方式验证"><a href="#使用-Cloudflare-API-进行-DNS-方式验证" class="headerlink" title="使用 Cloudflare API 进行 DNS 方式验证"></a>使用 Cloudflare API 进行 DNS 方式验证</h3><h4 id="获取-Cloudflare-API-令牌"><a href="#获取-Cloudflare-API-令牌" class="headerlink" title="获取 Cloudflare API 令牌"></a>获取 Cloudflare API 令牌</h4><p>在<a href="https://dash.cloudflare.com/profile/api-tokens">令牌管理页面</a>，新建一个 API 令牌。</p><p>使用“编辑 DNS”权限（只修改 DNS 记录，不影响其他功能）</p><p>这里需要注意的就是，限制一下允许调用这个 API 的 IP 范围，设置为自己的服务器 IP 即可。不设置的话，不允许前进。</p><h4 id="安装-Cloudflare-DNS-插件"><a href="#安装-Cloudflare-DNS-插件" class="headerlink" title="安装 Cloudflare DNS 插件"></a>安装 Cloudflare DNS 插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python3-certbot-dns-cloudflare</span><br></pre></td></tr></table></figure><h4 id="配置-API-令牌"><a href="#配置-API-令牌" class="headerlink" title="配置 API 令牌"></a>配置 API 令牌</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.secrets/certbot</span><br><span class="line">nano ~/.secrets/certbot/cloudflare.ini</span><br></pre></td></tr></table></figure><p>添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dns_cloudflare_api_token = YOUR_CLOUDFLARE_API_TOKEN</span><br></pre></td></tr></table></figure><p>设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 ~/.secrets/certbot/cloudflare.ini</span><br></pre></td></tr></table></figure><h4 id="申请证书-1"><a href="#申请证书-1" class="headerlink" title="申请证书"></a>申请证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot certonly --dns-cloudflare --dns-cloudflare-credentials ~/.secrets/certbot/cloudflare.ini -d example.com -d www.example.com</span><br></pre></td></tr></table></figure><p>这里注意，有可能失败，报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Certbot failed to authenticate some domains (authenticator: dns-cloudflare). The Certificate Authority reported these problems:</span><br><span class="line">  Domain: tongji.xialing.icu</span><br><span class="line">  Type:   dns</span><br><span class="line">  Detail: DNS problem: NXDOMAIN looking up TXT <span class="keyword">for</span> _acme-challenge.tongji.xialing.icu - check that a DNS record exists <span class="keyword">for</span> this domain</span><br><span class="line"></span><br><span class="line">  Domain: www.xialing.icu</span><br><span class="line">  Type:   dns</span><br><span class="line">  Detail: DNS problem: NXDOMAIN looking up TXT <span class="keyword">for</span> _acme-challenge.www.xialing.icu - check that a DNS record exists <span class="keyword">for</span> this domain</span><br><span class="line"></span><br><span class="line">  Domain: xialing.icu</span><br><span class="line">  Type:   dns</span><br><span class="line">  Detail: DNS problem: NXDOMAIN looking up TXT <span class="keyword">for</span> _acme-challenge.xialing.icu - check that a DNS record exists <span class="keyword">for</span> this domain</span><br><span class="line"></span><br><span class="line">Hint: The Certificate Authority failed to verify the DNS TXT records created by --dns-cloudflare. Ensure the above domains are hosted by this DNS provider, or try increasing --dns-cloudflare-propagation-seconds (currently 10 seconds).</span><br></pre></td></tr></table></figure><p>Hint 中提示的很清晰了，可以尝试增大等待时间，对我来说，25 秒可行。</p><p>最后返回的成功信息是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Successfully received certificate.</span><br><span class="line">Certificate is saved at: /etc/letsencrypt/live/www.xialing.icu/fullchain.pem</span><br><span class="line">Key is saved at:         /etc/letsencrypt/live/www.xialing.icu/privkey.pem</span><br><span class="line">This certificate expires on 2025-06-25.</span><br><span class="line">These files will be updated when the certificate renews.</span><br><span class="line">Certbot has <span class="built_in">set</span> up a scheduled task to automatically renew this certificate <span class="keyword">in</span> the background.</span><br></pre></td></tr></table></figure><h4 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h4><p>接下来需要在 nginx 中配置使用的证书：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> example.com www.example.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/example.com/fullchain.pem;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/example.com/privkey.pem;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /var/www/html;</span><br><span class="line">        <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为这里可能要多次复制粘贴，所以分享几个 vim 的使用技巧：</p><ul><li>复制两行：<code>2yy</code>；</li><li>粘贴：<code>p</code>；</li><li>打开新文件：<code>:tabe</code>；</li><li>切换到下一个文件：<code>:tabn</code>；</li><li>切换到上一个文件：<code>:tabp</code>。</li></ul><p>然后测试一下配置是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>最后重启 <code>nginx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart nginx</span><br></pre></td></tr></table></figure><h4 id="设置自动续期"><a href="#设置自动续期" class="headerlink" title="设置自动续期"></a>设置自动续期</h4><p>Certbot 会自动续期：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Certbot has set up a scheduled task to automatically renew this certificate in the background.</span><br></pre></td></tr></table></figure><p>不过它并不会自动重启 <code>nginx</code>，所以导致 <code>nginx</code> 可能使用的仍然是旧证书。</p><p>为此，设置一个钩子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh</span><br></pre></td></tr></table></figure><p>写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><p>然后赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> +x /etc/letsencrypt/renewal-hooks/post/nginx-reload.sh</span><br></pre></td></tr></table></figure><p>終わり。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计组 | 浮点数的运算</title>
      <link href="//2025/03/computer-architecture-floating-arithmetic/"/>
      <url>//2025/03/computer-architecture-floating-arithmetic/</url>
      
        <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>浮点数的运算步骤比较多，而且种类也比较多。</p><p>运算数的不同会影响运算进行多少步；而运算数的表示方式（原码、补码、移码）会影响具体问题的分析。</p><h2 id="浮点数的加减法"><a href="#浮点数的加减法" class="headerlink" title="浮点数的加减法"></a>浮点数的加减法</h2><p>加减法大概需要这样几步：</p><ol><li>对阶。小阶向大阶对齐，否则大阶的高位被舍去，误差太大；</li><li>尾数的相加；</li><li>规格化；<ul><li>左规</li><li>右规</li></ul></li><li>舍入处理；<ul><li>截断；</li><li>末尾恒置 1；</li><li>0 舍 1  入。</li></ul></li></ol><p>看看流程图吧：</p><p><img src="https://static.xialing.icu/img/202503281031109.webp" alt="浮点加法 - 西电车向泉老师 ppt"></p><p>所以如果理解了这一个过程，就会明白，为什么浮点数中，一个很大的数加很小的数会损失精度了。</p><h2 id="浮点数的乘除法"><a href="#浮点数的乘除法" class="headerlink" title="浮点数的乘除法"></a>浮点数的乘除法</h2><p>浮点数的乘除法，要经历如下的阶段。不用文字了，直接展示流程图：</p><p><img src="https://static.xialing.icu/img/202503281110579.webp" alt="浮点乘法 - 西电车向泉老师 ppt"></p><p><img src="https://static.xialing.icu/img/202503281111836.webp" alt="浮点除法 - 西电车向泉老师 ppt"></p><p>这里常考的一类题目是到底需要规格化几次，需要明白原码或补码表示时，数值的范围。</p><p>有时候是 0 次，不过最多是一次。</p><p>说明的是，在加减法和乘除法的过程中，如果使用更大的扩展位，可以提高精度。例如，Intel 在实现浮点数运算的时候，采用 80 位扩展，等保存结果的时候，再截断到 <code>float</code> 或者 <code>double</code> 的长度。</p>]]></content>
      
      
      <categories>
          
          <category> 计组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CS50AI - 第 3 章 - 优化</title>
      <link href="//2025/03/cs50ai-chap3/"/>
      <url>//2025/03/cs50ai-chap3/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>这节讲优化问题，怎样找到最优解。</p><p>大概分成三种问题：爬山问题、线性规划问题，以及约束问题。</p><h2 id="爬山问题"><a href="#爬山问题" class="headerlink" title="爬山问题"></a>爬山问题</h2><p>爬山问题比较经典，解决的问题是：如何在一群状态中找到最值。</p><p>什么叫状态呢？状态就是一种方案。比如说，在哪里建医院可以让附近的居民区到达各自最近医院的路径开销最小；再比如，外卖平台怎样安排送餐顺序才能让所用路径最短等等。</p><p>有的时候，追求最大值，这种函数叫 <em>Optimal Function</em>，有时候追求最小值，这种函数叫 <em>Cost Function</em>。总而言之就是寻找最值。</p><p>解决这种问题最经典的思路是（以找最大值为例），从一个点开始，环顾四周（邻居），有更高的，则向上前进，否则就到了一个极值点。</p><p>注意我说的，这里到了一个<strong>极值点</strong>，而不是最值点。找到的只是一个相对优的解，但并不是最好的，总结来讲，有如下的问题：</p><ol><li>找到的是极值点，是局部最值，而不是全局；</li><li>遇到大片相等的值时，会卡住，无路可走（因为是严格大于）；</li><li>贪心，有时候走些弯路会爬的更高。</li></ol><h3 id="修改后的爬山算法"><a href="#修改后的爬山算法" class="headerlink" title="修改后的爬山算法"></a>修改后的爬山算法</h3><p>要对算法进行优化，有许多思路。有一些地方可以做文章：</p><ul><li><em>Steepest-ascent</em> 选爬升最多的邻居（其实就是刚刚的思路）；</li><li><em>Stochastic</em> 随机选一个邻居；</li><li><em>First-choice</em> 选第一个升高的；</li><li><em>Random-restart</em> 从不同的地方开始；</li><li><em>Local Beam Search</em> 维护许多更高的邻居。</li></ul><p>整体看下来，我比较喜欢的是 <em>Random-restart</em> 算法，它可以打破局部最值的界限，放眼全局。</p><p>不过这些算法还是只解决了上文提到的第一个问题，后面的问题没有解决，因为本质上还是在选取更大的值，不愿意走弯路。</p><p>说到这，我又想起来之前班主任对我们说过的：</p><blockquote><p>你们在学算法，不知道你们学没学到「贪心算法」。贪心，嗯，贪心一定是最好的吗？好，我们开始上课。</p></blockquote><p>所以有另外一个算法，应该是从其他学科那里借鉴的经验，叫模拟退火。</p><h3 id="模拟退火"><a href="#模拟退火" class="headerlink" title="模拟退火"></a>模拟退火</h3><p>什么意思呢，这个算法模拟了一个淬炼的过程。一开始，温度很高，算法更倾向于选择那些可能会走弯路的邻居。每次操作，温度都会降低，就更倾向于选择那些提升更大的邻居。说起来，怎么有点像少年老成的感觉呢？</p><p>不过不管怎么说，这种模拟的算法，就可以解决不愿意走弯路的问题。它会根据当前的温度，以及选择这个邻居导致的能量变化，根据一个公式来抉择到底是否走弯路。</p><h3 id="旅行商问题"><a href="#旅行商问题" class="headerlink" title="旅行商问题"></a>旅行商问题</h3><p>说到这，就不得不提大名鼎鼎的旅行商问题。学图论、学组合数学的时候已经听说过了，这是一个 NP-难问题，什么是 NP-难，我不想深究定义。但感性上认识，这是一个很难的问题，需要很多运算才能找到最优解，而且复杂度不可接受。</p><p>因此，可以通过爬山算法来找到相对比较好的解。因为有时候，我们只是在意一个不错的解，而不是最优的解。所以可以把旅行商问题进行解释与转换，转换为爬山问题，比如关于邻居的定义、对于高度的定义等等。</p><p>转变为熟悉的问题之后，就可以用已知的库来解决了。</p><h2 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h2><p>有时候，会遇到找<strong>线性</strong>表达式的最优值的题目。线性，看到了吗，就像线性代数一样，其实生活中的许多问题都是线性的。我们在乎的，是线性问题。</p><p>线性问题有以下两个基本组成成分：</p><ul><li>代价函数 - 是我们要求最值的一次多项式；</li><li>约束 - 对每个变量与变量之间有约束。</li></ul><p>这种都有成熟的库来调用。当然也可以用一些线性代数的方法来求解。</p><h2 id="约束满足问题"><a href="#约束满足问题" class="headerlink" title="约束满足问题"></a>约束满足问题</h2><p>线性规划是约束问题的一种，更广义的约束问题是这样的：</p><ul><li>变量的集合；</li><li>每个变量的定义域；</li><li>约束。</li></ul><p>一个例子是安排考试。不同学生有不同的考试，一个学生的不同考试不能在同一个时间段。</p><p>这个问题中，每个考试就是一个变量，定义域是星期几，约束取决于每个学生选择的课程，可以用<strong>图</strong>这种数据结构来表示。</p><p>其实这种问题说到底是一种染色问题。给了一种图，每个变量是一个结点，用定义域的值给这些结点染色，找到一种可能的涂色方案。</p><p>哈！哈！哈！</p><p>解决问题的大致思路是这样的：</p><ol><li>先解决一元约束，也就是对某个变量取值的限制。如某门课不能在星期一考试；</li><li>再解决二元约束，也就是两个变量之间的关系。例如两门课不能在同一个日子考试。</li></ol><p>概括一下，前者解决的是结点的约束；后者解决的是边的约束。</p><p>第一点很好解决，一个 $O(n)$ 的遍历即可，这里的 $n$ 指的是 <code>node</code>。第二点就有些名堂了。</p><p>要考虑边的问题，要先选出一条边。考虑边两侧的结点 <code>A</code> 和 <code>B</code>。如果对于 <code>A</code> 定义域中的每个选择，<code>B</code> 中都能给出对应的选择。说明二者无冲突。否则，就要把 <code>A</code> 中让 <code>B</code> 拿不出对应选择的那个选择删除掉。</p><p>不过我感觉，这种检查应该是相互的，两个方向的。</p><p>每条边是可以解决了，但如何把不同的边联系在一起呢？可以用<strong>回溯法</strong>，是的，就是八皇后问题的回溯法。具体来讲，我觉得是 <em>trial and error</em>，如果找到了解，就返回；如果走到了死胡同，就退回到之前的状态，换个值再次查找。</p><p>诶，和搜索算法比较像？只不过搜索算法搜的是路径，这里搜索的是值。其实确实差不多，就是目标不同。</p><h3 id="再优化"><a href="#再优化" class="headerlink" title="再优化"></a>再优化</h3><p>其实这里还有许多优化的空间，每一点都可以做文章。</p><ul><li>对于一个结点，要从值域中优先选取哪个值呢？</li><li>对于一堆结点，要先选择哪个呢？<ul><li>如果定义域不同，怎么选？</li><li>如果定义域相同，但度数不同，怎么选？</li></ul></li></ul><ol><li>对于一个结点，选消除其他结点选择少的，因为这样在下一次递归中，我们有更多路可以走。</li><li>对于一堆结点，每个节点的定义域不同，选定义域少的。因为这样可以更快速的帮我们定位到解。怎么理解这点？因为如果有解的话，那 OK。如果无解的话，只需要递归最少的次数就可以发现，其他的点则需要递归更多次。</li><li>对于一堆结点，度数不同，则选度数大的，这样可以更多的减少需要考虑问题的规模。</li></ol><p>这些地方，看上去有些矛盾。总的来说，目标是：减少问题规模、减少递归次数。</p><p>分别解释一下。</p><p>对于第一点，为什么不选消除多的，是因为这样会扼杀很多种可能性。很可能有一种选择方法就被抛弃了。</p><p>对于第二点，为什么不选定义域多的，是因为这样不会降低问题的规模。考虑假如有一个结点只剩下一个值可选，那必然要选它。有解的话，肯定就是它了；无解的话，通过它也可以最快的发现无解。</p><p>有人可能会说，这样不会扼杀很多种可能吗？放着多的不选。事实上，仔细思考，这并不会扼杀很多种可能。摆在我们面前的只是选择比较多，它和可能不在一个层次。就像是 <code>C++</code> 对于重载运算符的匹配顺序一样。是，这个结点的选择很多，但是选择了之后，并不能保证扼杀的可能就小。</p><p>但能够确定的是，选定义域比较小的，可以有效的减少递归的层数。很好理解，假如一个结点就剩下两个值，另一个剩下十个值。那么，选前者，最多两次递归就能知道是否有解；后者，需要尝试很多次。</p><p>对于第三点，度数怎么选呢？这里还是从问题的规模来看。虽然说，选择了度数多的，会扼杀很多种可能，和第一点看似矛盾。确实矛盾，但一种解释是，可以快速地排除掉某些导致无解的选择。</p><p>总结一下吧，其实第一点主要是为了避免过早剪枝，第三点是为了加快问题收敛。</p><table><thead><tr><th>方案</th><th>选度数小的变量</th><th>选度数大的变量</th></tr></thead><tbody><tr><td>搜索策略</td><td>保留更多可能性，避免过早剪枝</td><td>加速约束传播，减少搜索空间</td></tr><tr><td>适用于</td><td>搜索过程中解的密度较高（即解比较多）</td><td>搜索过程中解的密度较低（即解较少）</td></tr><tr><td>缺点</td><td>可能导致搜索空间过大，回溯较多</td><td>可能过早剪枝，导致找不到解</td></tr></tbody></table><p>两种方案各有利弊，还是要根据具体问题来具体分析。</p><h3 id="现实问题"><a href="#现实问题" class="headerlink" title="现实问题"></a>现实问题</h3><p>其实如果从学校的现实背景来看，排课是个和这次主题很相似的问题。</p><p>每门课有许多时间段，有一些约束需要满足。这里</p><ul><li>每门课就是一个结点；</li><li>结点的定义域是周次、时间段、教室；</li><li>连边表示两门课之间有约束关系。</li></ul><p>就像 <code>SQL</code> 一样，虽然教师也作为要考虑的约束，但最终我们的定义域不考虑教师。</p><p>这里的二元约束就有好多种啦。</p><ul><li>一位老师不可能同时讲两门课，但有时候也会有这种情况，比如说我的专业课拓扑学和一门选修课实际上在一个时间段；</li><li>一个教室不能同时承担两门课的教学。还是上面的情景，这回确实不一样，公选课显示在博楼，专业课显示在学院教室；</li><li>学生不能同时上两门培养方案在同一学期的专业课。</li></ul><p>除此之外，还可能有一些一元约束，比如必须要智慧教室，不要南校区等等。</p><p>问题看上去很复杂，但如果归结为之前的问题，就很好解决了。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>春天又来了</title>
      <link href="//2025/03/nichijou-spring-2025/"/>
      <url>//2025/03/nichijou-spring-2025/</url>
      
        <content type="html"><![CDATA[<p>又到了一年春天，日子渐暖，人也更加懒散。</p><p>这学期开学之后，一直找不到状态，总感觉还在放假中。。不知道怎样才能有点干劲呢？说实话，挺感谢<strong>那位</strong>的，也挺感谢<strong>那位</strong>的，虽然因她们产生的情感也让我备受煎熬，但至少让我在繁忙又繁忙的大一下和大二上有了奔头。不过这种 buff 的效果只能维持一学期。时间再长，就会发现，这种情感是单向的。</p><p>我承认我是恋爱脑，所以为了不让别人借助这一点伤害自己，我就只能尽量做到理智。爱这种东西，多半是荷尔蒙在作祟。看到有人做出这样的评论，当鸟类求偶的时候，会做出奇怪的动作。比如珠颈斑鸠在求偶的时候，发出“固固”“固固”的声音，在发出第一个音节的时候低下头，在第二个音节结束时抬起头，如此反复。</p><p>我也是一样，不过那是初中的时候了。对于喜欢的女生，莫名其妙跟对方搭话，喜欢在对方面前转，即使，也很遗憾，对方和我不在一个班。如果在一个班，我不知道我会选择放弃，还是选择勇敢地 A 上去。距离产生了滤镜。</p><p>说到滤镜，我想到，如果和对方的关系不同，看到的对方也不一样。什么是关系？一切皆集合。关系是存放有序对的集合。比如说，我大一的一个室友，在群里可是出尽了风头。不论是奋战到深夜，还是请求老师留作业。这点他和我有点像，就是不走寻常路。说实在的，我不太喜欢他，是因为在他身上看到了我曾经的影子。</p><p>我小时候也是一样。虽然父母都说，我小时候好养，不大喊大叫什么的。不过我印象里可不是这样。小时候做了许多自己也无法解释的行为，时常觉得犯了某个错误就天塌了。说点懂的都懂的关键词吧：广场、木门、椅子、篮筐。怎么着，要写一份三题故事吗？哈哈哈哈。不过在我印象里，高中我就收敛了很多。或许是因为一心在意分数，活的行尸走肉一般吧。</p><p>我之所以觉得高中或者初中值得怀念，一方面是记忆的滤镜，瞧，又是<strong>滤镜</strong>，把那些负面的（比如上面的关键词）美化掉了；另一方面是，最近阅读的文学作品无不美化了少年的时光。</p><p>对我影响最大的是《文学少女》，无出其右者。和典雅（误）的学姐放课后在角落里的社团活动室里，写着三题故事，分享那些文学作品。夕阳顺着窗户照到铁管椅上，染黄了发丝，氧化了书本。我很喜欢夕阳，想起来《你的名字》那里，有一个“彼乃谁之时”，就是虚实界限最模糊的黄昏时分。</p><p>高中在合唱团，最喜欢的合唱歌曲是《隐形的翅膀》，最触动我的歌词就是：每天的夕阳也会有变化。</p><p>高中那时候，其实日子规律得很，不能说是一种坏事。早上七点爬到五楼（那是高二的时候了，高一在平房），透过防止同学们夜に駆ける的护栏，在春秋二季应该能看到朝阳，夏季太阳应该早就升起了，冬天还是两眼抓瞎。不过，冬夏应该是放假时分。所以，多半每天都能看到朝阳。</p><p><img src="https://static.xialing.icu/img/202503231041879.webp" alt="2021 年 12 月 8 日 07 点 08 分 34 秒"></p><p><img src="https://static.xialing.icu/img/202503231038895.webp" alt="2022 年 1 月 11 日 07 点 16 分 25 秒"></p><p>是繁忙高中生活的一点小乐趣。</p><p>我记得霍尔顿·考尔菲尔德就很喜欢那种不变的生活，我记得井上心叶也不愿意做出改变，还记得“我们每天度过的日常，或许就是奇迹”。不过在大学的这个温床中，不变的日子快要过去了，快要<strong>耗尽了</strong>。</p><p>算来，再卷两学期的绩点，就要准备参加夏令营。到时候去哪里念研究生呢？如果有机会，或许不会在黄渡了，离市中心好远。唉，不愿意想这种事情，还是沉溺在回忆中吧。现在要把之前写到一半的内容出栈，续写起来。</p><p>说到社团，我高中是半推半就加入了合唱团，那时的我似乎有一种干事情就一定要干好的感觉，所以居然被学长们相中，成为了下一届（十一届）的低声部长，惭愧惭愧。</p><p>我说实话，我觉得我唱的挺一般的，无非是矮子里拔高个，嗯，我确实挺高的，各种意义上。但是，音域却不是很高。我在合唱团里充当的一直是低音贝斯的角色，给整场演唱定调。我确实乐于干这种事情，这也是为什么我喜欢运维的原因——功成不必在我，功成必定有我。不过我内心还是很向往那些男一高、男二高的同学，他们在中低声部提供的白色背景上点缀出绚丽的小花朵，婉转灵动。这是我的一个遗憾。</p><p>不过还是要感谢当时的社团负责老师，她组建的是非特长生的合唱团，让我们这种业余选手也能感受到合唱的魅力。回忆起那段日子，我给打个 7 分吧。</p><p><img src="https://static.xialing.icu/img/202503231053497.webp" alt="音乐教室，到了周二周五的下午就是社团活动室"></p><p>下午在合唱的时候，多半也能看到夕阳。</p><p>还有一段值得追忆的日子是高考前夕。那时候学校允许尖子班的学生到学校来自习。当时可以和朋友独占废弃的空教室（现在应该是食堂了），刷一些不知道有用无用的题目，顺带找老师答疑。那段夏天，真的好舒服、好心酸、又有些甜美。</p><p><img src="https://static.xialing.icu/img/202503231103943.webp" alt="喜欢这句话"></p><p>这句话说的真好，不过当时对它还是有几分鄙夷的，因为什么《XX必刷题》里也有类似的话。但在高考两年后，从局外人的眼光理性分析一下这一问题，它反映了什么数学思想（毕竟这是数学老师的寄语）？</p><p>用排除法，肯定不是</p><blockquote><p>书山有路勤为径，学海无涯苦作舟。</p></blockquote><p>没有苦的成分来的。</p><p>那是</p><blockquote><p>山重水复疑无路，柳暗花明又一村。</p></blockquote><p>也不是。山重水复中其实也是一村，也是一段积极的情景。</p><p>那是什么？</p><p>从人工智能的角度来阐述，这多半是一个启发函数值相等的 scenario。不管选择哪条路，都有一段风景。选哪个呢？可以用 A*，可以用概率来运算。但总而言之，还是要选。往前走就好了。</p><p>或许是像 <em>The Road Not Taken</em> 里边的那句：</p><blockquote><p>Two roads diverged in a wood, and I—<br>I took the one less traveled by,<br>And that has made all the difference.</p></blockquote><p>有点意思，但那句话又不代表选择。</p><p>或许是 jyy 说的那样，忘掉学分绩？掌握知识的乐趣？可万事都一笑而过，还有什么意思呢？</p><p>知足常乐吧。</p><p><img src="https://static.xialing.icu/img/202503231104415.webp" alt="艳阳天"></p><p>所以就觉得，有的地方真的是随时而变。记得高三的时候回到非毕业年级校区合唱训练，看到医务室被改成了教室，实验室也被改成了教室。反正就是无脑扩招，什么都成了教室。现在学校又装上了大铁门，拒人于千里之外。以后估计是不会回去了，那段日子永远定格在了记忆里，回不去了，找不到了。</p><p>计算机是一个 state machine。人生也是一个状态机。虽然还是那些门电路，但是储存的内容变了。</p><p>又不是一个计数器，又不是一个 finite state machine。那段日子过了，就真的过去了。</p><p><img src="https://static.xialing.icu/img/202503231110003.webp" alt="黑压压的"></p><p>人们拍照的时候总不愿意带上那些不和谐的因素，比如说栏杆，等到找的时候反而还找不到了。</p><p><img src="https://static.xialing.icu/img/202503231114945.webp" alt="曾经"></p><p>渐行渐远是很正常的事。</p><p>再说回滤镜。我现在有一位室友，挺帅的，不过自理能力一般，不太会干家务，桌面也比较乱。但是，如果你和他不是室友关系，就会觉得他阳光开朗，是运动达人。我还有一位室友，也挺帅的，而且自理能力很不错。但是你多半见不到他，因为他是个挺内向的人，平常几乎就待在宿舍学习。</p><p>如何在室友关系之外去区分这两种人呢？做不到。所以我有时候也反思，其实说不定是自己把目光（目光也是一种光）投射到对方上之后，周围的一切，包括自己，也暗淡了。其实对方不一定有那么好。确实是这样，平常心吧。</p><p>但是我作为一个从没谈过恋爱的纯情小〇男，确实不知道怎么处理这种亲密关系。</p><p>最近不是春天到了吗，我的一个朋友总算是放下了自己拧巴的情结，也可能是因为保研无望，所以决定把学习放到后位。但不管怎么说，总而言之，现在他开始了恋爱生活，在对方接近一年没有放弃的基础上。</p><p>或许是我不理解朋友关系吧。我觉得对于一个对自己回复不怎么积极的异性朋友，我是不会再主动的。有这心思，干点什么别的不好呢？不过我确实没啥异性朋友。上大学以来，和女生非正式（小组讨论那种除外，不过也只有一次）的线下聊天，几乎为 0。</p><p>无所谓。如果 $1 + 1 &gt; 2$ 不成立，宁可一个人。现在 AI 这么 prevalent，取代人类我不在意，因为 AI 和人类有啥利益冲突？AI 比人类理智多了。早晚有一天，那种针对每个人织造出来的 AI 茧房会让每个人找到和自己绝对同频共振的 TA 的。</p><p>虽然他也说自己在高中或者初中阶段没什么朋友，但人家多少有过恋爱经历。我甚至在想，是不是因为在两性感情上投入过多，导致在友情方面没能有太多精力投入。</p><p>说实话，我觉得他的情感经历和心叶很像，我是说<strong>非常</strong>像。</p><p>初中的那段感情结束的很不愉快，高中也有过，不过没有下文。</p><p>虽然有点差异，但我还是觉得和心叶的情感经历很像。初中（有没有小学啊？忘了）的时候和美羽在一起，结果出版了大卖的小说，毁掉了美羽的梦，美羽坠楼了，心叶把自己闷在家里，从此患上 ptsd。</p><p>高中遇上了远子学姐，远子拯救，或者说存在一点私心，但毕竟还是拯救了他。他对远子的心意呢？自己一开始没意识到，后来割舍不掉。最终是在樱花飘散的季节中以一吻分离。</p><p>艺术源于生活。</p><p>我之前就在想，那堆作家是怎么创作出那些富有想象的故事的？现在想想，多半和个人的经历有关，还是以经历为蓝本。所以我也常把小说和现实理想化地、稍微剥离戏剧化因素地结合在一起，说不定能指导我的生活。</p><p>我不知道，或许我也在期待天降一位学姐？我更期待的是那种心灵上的三观相合，而<strong>不只是</strong>大晚上在女生宿舍楼前啵嘴，散发信息素。</p><p>不过，我高中同学和学姐的感情经历好像泡汤了？对方好像就是把他当做一个情绪价值的提供者？不知道。不过我那位渐行渐远的同学也很有感情经历，所以我不担心。或许还是有点担心吧，他那种戴上小丑面具的乐观，不知道面具底下是什么。是竹田那样吗？或许没那么极端，但多半没那么乐观。</p><p>吃午饭去了。然后看看春日里的花朵。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CS50AI - 第 2 章 - 不确定性</title>
      <link href="//2025/03/cs50ai-chap2/"/>
      <url>//2025/03/cs50ai-chap2/</url>
      
        <content type="html"><![CDATA[<h2 id="不确定性-Uncertainty"><a href="#不确定性-Uncertainty" class="headerlink" title="不确定性(Uncertainty)"></a>不确定性(Uncertainty)</h2><p>上节课讲的知识，那是布尔式的非黑即白。这里，我们考虑一个更细粒度的刻画，那就是发生的概率。</p><h2 id="概率-Probability"><a href="#概率-Probability" class="headerlink" title="概率(Probability)"></a>概率(Probability)</h2><h3 id="样本空间-Possible-Worlds"><a href="#样本空间-Possible-Worlds" class="headerlink" title="样本空间(Possible Worlds)"></a>样本空间(Possible Worlds)</h3><p>讨论概率，需要事先划定范围，这个范围就是样本空间。</p><p>比如，掷一个骰子，只有可能掷出来 ${1, 2, 3, 4, 5, 6}$。</p><h3 id="概率的公理-Axioms-in-Probability"><a href="#概率的公理-Axioms-in-Probability" class="headerlink" title="概率的公理(Axioms in Probability)"></a>概率的公理(Axioms in Probability)</h3><p>有一些概率相关的道理是人们共同承认的、显而易见的：</p><ol><li>所有的概率都在 $[0, 1]$ 之间；</li><li>样本空间中所有样本点的概率之和为 1。</li></ol><h3 id="无条件概率-Unconditional-Probability"><a href="#无条件概率-Unconditional-Probability" class="headerlink" title="无条件概率(Unconditional Probability)"></a>无条件概率(Unconditional Probability)</h3><p>考虑扔一个骰子，点数的可能；或者扔两个骰子，点数之和的可能，这种概率都是无条件的。条件的另一种理解方法就是知识。</p><h2 id="条件概率-Conditional-Probability"><a href="#条件概率-Conditional-Probability" class="headerlink" title="条件概率(Conditional Probability)"></a>条件概率(Conditional Probability)</h2><p>条件概率，记作 $P(a | b)$，表达的含义是，在事件 $b$ 发生的情况下，$a$ 发生的概率。也可以有另外一种方式，那就是，已知 $b$ 发生了，$a$ 发生的概率。</p><p>条件概率的一个思想是缩小考虑的范围。譬如说，已经知道 $b$ 发生了，那么，那些 $b$ 未发生的情况就被我抛之脑后。现在我的目光只停留在满足条件 $b$ 的情形。</p><p>有点像剪枝，可以缩小问题的规模。</p><p>它的计算公式如下：</p><p>$$<br>P(a | b) &#x3D; \frac{P(a \land b)}{P(b)}<br>$$</p><p>那么接下来是变戏法的环节。我们不考虑平凡的某个概率为 0 的情况。下面把分母移到等式另一边，就能得到这个式子：</p><p>$$<br>P(a \land b) &#x3D; P(b)|(a | b)<br>$$</p><p>$$<br>P(a \land b) &#x3D; P(a)|(b | a)<br>$$</p><p>它显示出一种逐层考虑的思路。不是要计算 $a, b$ 同时发生的概率吗？那我就先考虑 $a$ 发生的概率。现在我已经有了 $a$ 发生这个知识了，只需要再考虑 Given that a is true， $b$ 发生的概率。</p><h2 id="随机变量-Random-Variables"><a href="#随机变量-Random-Variables" class="headerlink" title="随机变量(Random Variables)"></a>随机变量(Random Variables)</h2><p><strong>随机变量</strong>这个概念可谓困扰了我好久。同济概率论课本是这样给出的定义：</p><blockquote><p><strong>定义 2.1</strong> 设随机试验的样本空间为 $\Omega$, 若 $X&#x3D;X(\omega)$ 为定义在样本空间 $\Omega$ 上的实值单值函数, 则称 $X&#x3D;X(\omega)$ 为(一维)随机变量.</p></blockquote><p>用这门课的解释，那就是，随机变量是一种变量，它的取值限定在一个范围内。</p><p>比如，有一个变量 $weather$ 表示天气的情况，它的取值是 ${sunny, cloudy, rainy, windy, snowy \ldots}$。</p><p>当然，有时候我们在意定量的值。比如考虑晴天的概率、阴天的概率等等。</p><p>在中国概率论的课程中，使用列表法来清晰列出每个可能和概率；在这门课中，使用向量来表达，如 $\textbf{P}(\textit{Flight}) &#x3D; &lt;0.6, 0.3, 0.1&gt;$，当然这就要求要实现规定顺序的对应关系。</p><h3 id="独立性-Independence"><a href="#独立性-Independence" class="headerlink" title="独立性(Independence)"></a>独立性(Independence)</h3><p>上面提到了这个式子：</p><p>$$<br>P(a \land b) &#x3D; P(b)|(a | b)<br>$$</p><p>然而，如果 $a$ 和 $b$ 独立，又能得到什么有趣的结论呢？</p><p>首先给出独立的定义，它的含义是，知道了一件事情发生，但不影响另一件事是否发生的概率。比如，明天下雨和明天带伞，这两件事是相关的；而明天下雨和明天是星期几，这两件事就没有关系。</p><p>用数学的语言来表达，那就是：</p><p>$$<br>P(a | b) &#x3D; P(a)<br>$$</p><p>这样，上面的公式就可以改写啦！</p><p>$$<br>P(a \land b) &#x3D; P(b)P(a)<br>$$</p><p>当然了，两个事件很可能在直觉上有一些关系，但是，只要满足这个数值关系，我们就说，事件是独立的。</p><h2 id="贝叶斯公式-Bayes’-Rule"><a href="#贝叶斯公式-Bayes’-Rule" class="headerlink" title="贝叶斯公式(Bayes’ Rule)"></a>贝叶斯公式(Bayes’ Rule)</h2><p>公式如下：</p><p>$$<br>P(b | a) &#x3D; \frac{P(b) P(a | b)}{P(a)}<br>$$</p><p>它反映出来的一个道理是，通过一个方向的条件概率有可能求出另一方向的条件概率。比如，已知一次也不出勤的条件下考试通过的概率（先验概率），通过贝叶斯公式就能转换为已知考试通过，求次次逃课的概率（后验概率）。再比如，已知糖尿病有肥胖症状的概率，通过贝叶斯公式就能计算出，检测到患者有肥胖症状，罹患糖尿病的概率。</p><h2 id="联合概率-Joint-Probability"><a href="#联合概率-Joint-Probability" class="headerlink" title="联合概率(Joint Probability)"></a>联合概率(Joint Probability)</h2><p>联合概率是多种事件同时出现的情况，直观上，联合概率的分布是一个二维或多维表格。</p><p>比如，下雨多云，下雨不多云，不下雨多云，多云不下雨就组成了一个联合分布。</p><p>有一个规律很有趣:</p><p>$$<br>P(C \land rain) &#x3D; P(rain) P(C | rain)<br>$$</p><p>这是条件概率推导出来的，这样的话，其实，我们能够得到，用 $\land$ 连接的概率分布和用 $|$ 连接的概率分布成比例，比例系数 $\alpha &#x3D; P(rain)$。</p><h2 id="概率规则-Probability-Rules"><a href="#概率规则-Probability-Rules" class="headerlink" title="概率规则(Probability Rules)"></a>概率规则(Probability Rules)</h2><ul><li>取反，互补($P(\lnot a) &#x3D; 1 - P(a)$)；</li><li>容斥原理($P(a \lor b ) &#x3D; P(a) + P(b) - P(a \land b)$)；</li><li>边缘化，处理联合分布的表格时常见($P(a) &#x3D; P(a \land b) + P(a \land \lnot b)$)；</li><li>条件($P(a) &#x3D; P(a | b) + P(a | \lnot b)$)。</li></ul><p>后两个可以推广到 $n$ 个变量的情形，不只是两个对立事件。</p><h2 id="贝叶斯网络-Bayesian-Networks"><a href="#贝叶斯网络-Bayesian-Networks" class="headerlink" title="贝叶斯网络(Bayesian Networks)"></a>贝叶斯网络(Bayesian Networks)</h2><p>贝叶斯网络表示了随机变量之间的依赖关系。</p><p><img src="https://cs50.harvard.edu/ai/2024/notes/2/bayesiannetwork.png" alt="贝叶斯网络 - 图源：https:&#x2F;&#x2F;cs50.harvard.edu&#x2F;ai&#x2F;2024&#x2F;notes&#x2F;2&#x2F;bayesiannetwork.png"></p><p>贝叶斯网络的特征是：</p><ul><li>有向图</li><li>每个节点表示一个随机变量；</li><li>箭头表示因果关系；</li><li>每个节点存储了概率分布。</li></ul><p>这里的因果关系，只考虑直接的关系。比如，下雨确实会影响是否能按时赴约，但并不是直接导致的。这里，赴约的直接影响因素只有火车的运行状况。</p><h3 id="推理-Inference"><a href="#推理-Inference" class="headerlink" title="推理(Inference)"></a>推理(Inference)</h3><p>在概率论的推理中，有以下四个要素：</p><ul><li>请求 X，是我们要求的随机变量；</li><li>证据变量 E，是已经观察到发生了某个事件的随机变量；</li><li>隐藏变量 Y，既不是我们要求的，也不是已经观察到发生事件的；</li><li>目标，计算在观察到事件的前提下，请求 X 的分布律。</li></ul><p>举的例子是计算 $P(Appointment | (light \land no))$，这不太好求，不过我们知道，这个结果和 $P(Appointment \land light \land no)$ 成比例。</p><p>后者又如何计算呢？用边缘化，</p><p>$$<br>P(Appointment \land light \land no) &#x3D; P(Appointment \land light \land no \land delayed) + P(Appointment \land light \land no \land \lnot delayed)<br>$$</p><p>之后只需要自顶向下，从没有入度的结点开始，依次进行条件概率的计算就好了。</p><h2 id="抽样-Sampling"><a href="#抽样-Sampling" class="headerlink" title="抽样(Sampling)"></a>抽样(Sampling)</h2><p>有时候，这种枚举式的推断太慢，而且我们也不一定在乎特别准确的结果，大差不差就好。理论基础就是，用频率估计概率。</p><p>方法就是，从 Root 开始，依照概率逐步抽样。当然要注意，每次抽样后，掌握的知识就更多，后续的抽样也要用条件概率的方法。</p><p>最后，从中筛选出那些符合条件的样本，计算概率。</p><h3 id="可能性权重-Likelihood-Weighting"><a href="#可能性权重-Likelihood-Weighting" class="headerlink" title="可能性权重(Likelihood Weighting)"></a>可能性权重(Likelihood Weighting)</h3><p>前面的方法需要丢弃那些不符合条件的样本，比较低效。这个方法可以通过给每个样本权重来避免丢弃的问题。</p><p>思路是：</p><ul><li>固定已经观察到结果的随机变量；</li><li>没观察到结果的随机变量，照样抽样；</li><li>给每个样本权重，权重指的是这个事件<strong>的所有前提条件</strong>发生的概率，也就是 $|$ 右侧的部分，不是最终的概率。</li></ul><h2 id="马尔科夫模型-Markov-Models"><a href="#马尔科夫模型-Markov-Models" class="headerlink" title="马尔科夫模型(Markov Models)"></a>马尔科夫模型(Markov Models)</h2><p>有些状态是时序相关的，从一个状态转变到另一个状态。去描述这种时间上的状态变化，使用马尔科夫模型。</p><h3 id="马尔科夫假设-The-Markov-Assumption"><a href="#马尔科夫假设-The-Markov-Assumption" class="headerlink" title="马尔科夫假设(The Markov Assumption)"></a>马尔科夫假设(The Markov Assumption)</h3><p>为了简化问题，假设一个事件只受先前某几个事件的影响，而不是无穷追溯下去。</p><h3 id="马尔科夫链-Markov-Chain"><a href="#马尔科夫链-Markov-Chain" class="headerlink" title="马尔科夫链(Markov Chain)"></a>马尔科夫链(Markov Chain)</h3><p>马尔科夫链是一串随机变量的序列，其中每个随机变量都遵循马尔科夫假设。</p><p>从一个状态开始，之后基于过渡模型(transition model)就能构建出一个马尔科夫链了。</p><h3 id="隐式马尔科夫链-Hidden-Markov-Chain"><a href="#隐式马尔科夫链-Hidden-Markov-Chain" class="headerlink" title="隐式马尔科夫链(Hidden Markov Chain)"></a>隐式马尔科夫链(Hidden Markov Chain)</h3><p>有的时候，AI 只能观察到某个状态发出的信息，而无法探测到状态本身。比如 AI 能注意到有些人带了雨伞上下班，或者听到了<a href="https://www.youtube.com/watch?v=5epjVow18Xc">雨滴之歌</a>，但无法得知现在是否真的在下雨。</p><p>另一个很好的例子是，网站的运营商不知道用户是不是沉浸在提供的内容当中，但是可以通过页面的停留率或者网站的访问时间(Observation)来衡量隐式状态(Hidden State)。</p><h4 id="传感器马尔科夫假设-Sensor-Markov-Assumption"><a href="#传感器马尔科夫假设-Sensor-Markov-Assumption" class="headerlink" title="传感器马尔科夫假设(Sensor Markov Assumption)"></a>传感器马尔科夫假设(Sensor Markov Assumption)</h4><p>这一假设也是为了简化问题存在的。它假设证据变量，也就是我们观察到的信息，只取决于状态。比如，人们带伞只是因为下雨，而不是为了装酷或者其他原因。</p><p>通过隐式马尔科夫模型，我们可以完成：过滤（当前时间状态的分布律）、预测（未来状态的分布律）、平滑（计算过去时间的分布律）、最可能解释这些任务（基于观察，计算最可能的状态序列）。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>前面的贝叶斯网络有点像组合逻辑，和时间无关；后者像时序逻辑，需要有状态转移的逻辑。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计组 | 数据的运算</title>
      <link href="//2025/03/computer-architecture-arithmetic/"/>
      <url>//2025/03/computer-architecture-arithmetic/</url>
      
        <content type="html"><![CDATA[<h2 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h2><p>之前说过，补码的好处就在于可以直接使用无符号数的加法器硬件。因此，这里说的加法都是补码的加法，当然还涉及到了浮点数的阶码加法运算。</p><h3 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h3><p>在进入到硬件层面之前，需要对加法进行理论分析，尤其是溢出判断的部分。判断溢出有如下几种方法：</p><ol><li>双符号位；</li><li>进位；</li><li>符号位和进位标志；</li><li>运算前后的符号位（正 + 正 &#x3D;&#x3D; 正？负 + 负 &#x3D;&#x3D; 负？）。</li></ol><p>3、4 只适用于同号数求和 or 异号数求差的判断，用得少。</p><p>1 在加法运算中对两个 operand 用两个符号位，如果运算结束后两个符号位不一样，那说明发生了溢出，表明当前的长度表示不下结果。扩展后的高位符号位肯定是真的，但是在结果中会被截断，低位的符号位会被保留。所以如果低位的符号位和最高位的符号位不一样，说明最终的符号位不符合预期，发生溢出。</p><p>2 记录最高位和次高位的进位情况，二者的异或表示是否发生了溢出。用穷举法证明，思路是：证明异号运算不会满足溢出判断的标准；再证明同号运算用此标准可以判断是否溢出（思路是：如果结果的符号位和加数一样，考察两个进位；如果不一样，也就是溢出了，再考察两个进位情况）。</p><h3 id="行波进位加法器"><a href="#行波进位加法器" class="headerlink" title="行波进位加法器"></a>行波进位加法器</h3><p>到底是念 <em>xing</em> 还是 <em>hang</em> 呢？见仁见智。</p><p>行波进位加法器的基本单元是一位全加器，数字逻辑中已经对它很熟悉了。把多个全加器级联起来就可以完成多位运算。</p><p>优势：便于扩展，逻辑简单；</p><p>不足：延迟高。</p><h3 id="超前进位加法器"><a href="#超前进位加法器" class="headerlink" title="超前进位加法器"></a>超前进位加法器</h3><p>通过对加法运算的分析，可以得到输出结果和每个原始输入的关系，这样就不必向前面的加法器一样要逐级向上传递进位信号了。</p><p>优势：速度快；</p><p>不足：门的数量多。</p><p>所以一般实践上把二者结合起来，比如，超前进位加法器组成四位加法器，每个四位加法器之间串联行波进位。</p><h3 id="BCD-加法"><a href="#BCD-加法" class="headerlink" title="BCD 加法"></a>BCD 加法</h3><p>有时候需要对 BCD 编码的数进行加法运算。牢记：当运算结果中某位数大于 9 或者有向更高位的进位，则结果的对应位 +6 修正。</p><p>前者好理解，如果某位数大于 9，压根不是合法的 BCD 编码，1234 是合法的 BCD 编码，但 12A4 不是。为什么不是呢？因为这个 A 应该有一个进给更高位的进位。究其原因，就是因为实际上，底层用的是 16 进制来表示 10 进制的运算。</p><p>后者为什么呢？比如，有个位的结果算出来是 18，向更高位进位了一个 16，这位剩下个 2。这对吗？这不对，为什么？进位<strong>多了</strong>，按十进制，应该进个 10 啊，怎么进了个 16 呢？所以还是要修正一下。</p><p>所以最后再分类概括一下：</p><ul><li>如果结果位在 $[0, 9]$，正常表示，没什么说的；</li><li>如果结果位在 $[10, 15]$，在十进制中应该进位了，但是在 16 进制中却仍然能表示，所以欠了个进位；</li><li>如果结果位在 $[16, 19]$ 的，是该进位，但是应该进 10，而不是 16，要把进多了的 6 补回来。</li></ul><h3 id="移码加法"><a href="#移码加法" class="headerlink" title="移码加法"></a>移码加法</h3><p>这里指的是标准移码，偏移量最高位为 1，剩余为 0。</p><p>通过数学的推导，可以得到，</p><p>$$<br>[X+Y]<em>{移} &#x3D; [X]</em>{移} + [Y]_{移} - 2^{n-1}<br>$$</p><p>也就是说，直接移码相加，然后符号位取反即可。如果符号位不取反，其实就是补码。</p><p>此外，若已知一个数的移码表示，其相反数的移码表示是取反 + 1（也就是求补运算）。</p><h2 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h2><h3 id="原码一位乘"><a href="#原码一位乘" class="headerlink" title="原码一位乘"></a>原码一位乘</h3><p>因为是原码，所以符号位单独处理，只考虑绝对值之间的运算。</p><p>从乘法的竖式中也可以悟到，其实乘法就是移位和相加操作的反复。因此在硬件层面上也是这样实现的，只不过在竖式乘法中，每次得到的结果左移，在硬件实现上，结果要右移。</p><p>用伪算法来表示一下硬件实现的流程吧：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">while (没考虑完乘数的位数) &#123;</span><br><span class="line">    if (最低位为 1) &#123;</span><br><span class="line">        加乘数;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    右移一位; // 这句没有缩进到 if 语句块里！</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看看具体在答题时如何做呢？</p><p><img src="https://static.xialing.icu/img/202503151631610.webp" alt="原码一位乘 - 图源：西电车向泉老师 ppt"></p><p>这里给一些注释：</p><ul><li>表头中，最左侧不是符号位（已经是绝对值的运算了），而是存储可能的进位；</li><li>表头中，$D$ 用来存储结果的高位，初值为 $0$；$A$ 一开始存储了一个乘数，最后存储了结果的低位；$A_0$ 用来显式标注是否需要加乘数；</li><li>个人认为，操作块的划分看自己心情，只要有逻辑就好。</li></ul><p>最后记得把符号位拼接起来。</p><h3 id="补码一位乘"><a href="#补码一位乘" class="headerlink" title="补码一位乘"></a>补码一位乘</h3><p>在进行补码乘法之前，先推导出来了一个结论，即从补码得到真值，可以通过简单的位权的运算来得到真值，只不过注意最高位要加个符号即可。</p><p>比如，四位整数表示 <code>1011</code>，可以通过：</p><p>$$<br>-2^{3} + 2^{1} + 2^{0} &#x3D; -5<br>$$</p><p>注意负号的位置。</p><p>常用的方法是布斯 (Booth) 法。只需要对乘数进行一个微小的修正（判断是否加乘数的依据从最低位变成了最低位减次低位），就能沿用原码乘法的规则。</p><p>还是用伪算法来表示一下运算步骤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">while (没考虑完乘数的位数) &#123;</span><br><span class="line">    switch (&#123;次低位,最低位&#125;) &#123;</span><br><span class="line">        case &#123;0, 0&#125;</span><br><span class="line">        case &#123;1, 1&#125; &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        case &#123;0, 1&#125; &#123;</span><br><span class="line">            + [X] 的补码;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        case &#123;1, 0&#125; &#123;</span><br><span class="line">            + [-X] 的补码;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    右移一位;  // 感觉最后一步移位不移位都行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://static.xialing.icu/img/202503151653409.webp" alt="补码一位乘 - 图源：西电车向泉老师 ppt"></p><ul><li>表头左侧最高位是两个符号位，两个是为了防止溢出；设置符号位是因为正在进行补码运算；</li><li>$A$ 中存放的是带符号位的乘数的补码；</li><li>需要附加一个 $A_{-1}$ 来形成循环；</li><li>右移是算数右移。</li></ul><h4 id="矫正法"><a href="#矫正法" class="headerlink" title="矫正法"></a>矫正法</h4><p>根据乘数的正负，如果决定循环次数的是负数的话，需要最后一步进行修正。</p><p>用得少。</p><h3 id="阵列乘法器"><a href="#阵列乘法器" class="headerlink" title="阵列乘法器"></a>阵列乘法器</h3><p>上面的方法有个不足，和行波进位加法器一样，那就是太慢了。</p><p>通过手算的原理，可以发明阵列乘法器。</p><p>无符号数的比较简单。如果有符号数，需要增加一个求补电路转换为无符号数，最后再通过求补电路得到结果。</p><h3 id="流水线阵列乘法器"><a href="#流水线阵列乘法器" class="headerlink" title="流水线阵列乘法器"></a>流水线阵列乘法器</h3><h2 id="（原码）除法"><a href="#（原码）除法" class="headerlink" title="（原码）除法"></a>（原码）除法</h2><p>除法只要求原码的。能进行除法有两个基本要求：</p><ol><li>除数不为 0；</li><li>被除数的高 $n$ 位的值要小于除数的位数 $n$。</li></ol><p>第一点是显然的，第二点主要是为了保证商不会溢出。如果 2 不成立，商可能就有 $n+1$ 位，表示不下了。</p><h3 id="恢复余数法"><a href="#恢复余数法" class="headerlink" title="恢复余数法"></a>恢复余数法</h3><p>废话不多说，直接上伪算法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">while (商的位数小于被除数位数的一半) &#123;</span><br><span class="line">    左移 1 位;  // 因为第一步肯定不够减</span><br><span class="line">    减去除数的绝对值;</span><br><span class="line">    if (结果的符号位为 0 ) &#123;  // 够减</span><br><span class="line">        最低位置 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;  // 不够减</span><br><span class="line">        最低位置 0;</span><br><span class="line">        加上除数的绝对值;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://static.xialing.icu/img/202503151717714.webp" alt="恢复余数法 - 图源：西电车向泉老师 ppt"></p><ul><li>防止符号位溢出，置两个符号位，因为左移的时候数值位会侵占一位符号位；</li><li>运算需要左移，就像乘法右移一样；</li><li>每次判断是否够减，根据符号位判断；</li><li>如果不够减，要把多减的数值加回去；</li><li>减法是通过补码实现的。</li></ul><p>余数记得 $\times 2^{-m}$，商和余数符号位单独处理。</p><h3 id="加减交替法"><a href="#加减交替法" class="headerlink" title="加减交替法"></a>加减交替法</h3><p>注意到：如果某一步多减了 $A$，把多减的加回去，位移后再减 $A$ 等价于 多减了 $A$，位移，再加回去 $A$。</p><p>这样就省去了加回去的步骤。</p><p>来看伪算法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">左移 1 位;</span><br><span class="line">减去除数;</span><br><span class="line"></span><br><span class="line">while (商的位数小于被除数位数的一半) &#123;</span><br><span class="line">    if (余数 &gt;= 0) &#123;</span><br><span class="line">        商上 1;</span><br><span class="line">        余数左移 1 位;</span><br><span class="line">        减除数;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        商上 0;</span><br><span class="line">        余数左移 1 位;</span><br><span class="line">        加除数;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://static.xialing.icu/img/202503151946565.webp" alt="加减交替法 - 图源：西电车向泉老师 ppt"></p><p>基本要说明的和上一个方法一样。主要是改进了不够减要加回去的问题。</p><h3 id="阵列除法器"><a href="#阵列除法器" class="headerlink" title="阵列除法器"></a>阵列除法器</h3><p>当然，追求速度，有阵列除法器的存在，它的设计原理是基于加减交替法的。</p><h2 id="（补码）除法"><a href="#（补码）除法" class="headerlink" title="（补码）除法"></a>（补码）除法</h2><p>补充一下，发现学校要考补码除法中的加减交替法，所以展示一下流程。</p><h3 id="加减交替法-1"><a href="#加减交替法-1" class="headerlink" title="加减交替法"></a>加减交替法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">while (商的位数小于被除数位数的一半) &#123;</span><br><span class="line">    if (除数和余数异号) &#123;</span><br><span class="line">        余数加除数;</span><br><span class="line">        商上 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        余数减除数;</span><br><span class="line">        商上 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    左移一位;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>采用双符号位，同上；</li><li>末尾商恒置 1，误差可以接受；</li><li>商需要多考虑一位；</li><li>注意如何表示最终的商和余数。</li></ul><p>其实，补码的加减交替法和原码的大差不差，区别在：</p><ul><li>数的表示不同，需要考虑双符号位；</li><li>符号位参与运算，所以商要多一位；</li><li>加减的判断条件略有变化。</li></ul><p>因为作图不太容易，就不作了。一个和先前 ppt 风格不一样的图片可以参考<a href="https://www.cnblogs.com/cdaniu/p/16391898.html">博客园-【计算机组成原理】 补码的除法运算– 加减交替法</a>。</p><p>但其实也可以用之前的形式来表示。</p>]]></content>
      
      
      <categories>
          
          <category> 计组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计组 | 校验码</title>
      <link href="//2025/03/computer-architecture-verification-code/"/>
      <url>//2025/03/computer-architecture-verification-code/</url>
      
        <content type="html"><![CDATA[<p>这些校验码的校验原理都是：在数据位之外，增加几个校验位，用来验证传送的数据是否正确。</p><h2 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h2><p>比较经典的奇偶校验码是在数据位之外添加一个校验位。分成两种校验方式，奇校验和偶校验。前者要求数据位和校验位中 <code>1</code> 的数量是奇数；后者要求 <code>1</code> 的数量是偶数。</p><p>检错能力：<code>1</code> 位；<br>纠错能力：<code>0</code> 位。</p><p>如果有两位或两位以上同时在相反方向进行了变化，则不一定检查出错误。如果说 <strong>不一定</strong> 能检查出错误，就说明纠错的能力丧失了，这种评价标准对于后续的校验方式同理。</p><p>如果有 <code>1</code> 位发生了错误，确实不满足校验标准，然而，到底哪一位出错呢？不知道，任何一位出错都会造成校验失败。</p><p>举个例子。</p><p><strong>偶</strong>校验，数据是 <code>ASCII</code> 码的 <code>A</code>: <code>00010001</code>，当前二进制序列已经有偶数个 <code>1</code> 了，校验位是 <code>0</code>。所以发送方发送的数据是：<code>0</code> + <code>00010001</code>。</p><p>如果有 <code>1</code> 位发生了错误，不妨是数据位的最低位，那么接收方接收到的是：<code>0</code> + <code>0010000</code>，不满足偶校验，检出错误。但是不知道是哪位出了错，所有的位数其中之一，都具有翻转的可能。如果有两位发生了错误，不妨设最低两位，则接收到的是 <code>0</code> + <code>0010010</code>，仍然满足偶校验，检查不出来。</p><h2 id="循环冗余校验码"><a href="#循环冗余校验码" class="headerlink" title="循环冗余校验码"></a>循环冗余校验码</h2><p>循环冗余校验码（CRC 码）是通过余数来检查传输错误的一种算法。它适用的场景是网络通信、光盘等可能连续出错的情况。</p><p>发送端通过把原始数据除以（这里的除是模 2 除法，可以理解为按位异或）<strong>生成多项式</strong>（生成多项式有几个要求，参见下文）得到余数，再令原始数据加上余数，目的是让修正后的数据再除以多项式余数为 <code>0</code>。换言之，除以生成多项式余数为 <code>0</code> 说明传输没有发生错误。但，如果余数不为 <code>0</code>，则说明发生了错误。而且，在余数的范围大于数据位长度时，可以指明哪位发生了错误。</p><p>比如，如果数据位长度为 <code>4</code>，生成多项式是 <code>1011</code>，则余数可能是 0 ~ 10，除去正常情况 <code>0</code> 外共有 9 种可能，足够检验每一位数据位。</p><p>接收方把数据除以生成多项式，余数为 0，编码正确。否则，余数指明了发生错误的位数。</p><p>生成多项式需要做到：</p><ol><li>任何一位发生错误，余数都不能为 0（否则无法和正常情况区分了）；</li><li>不同位发生错误，余数应该不同（否则无法检验不同位的错误了）；</li><li>应满足余数循环规律（否则无法按补 0 的方法进行循环）。</li></ol><p>纠错的话，因为生成多项式已经确保了余数和出错位数一一对应，所以，根据余数，通过异或出错位就可以实现纠错。不过在底层的实现上比较复杂，移位一个周期，在最高位纠正，然后再移回去。</p><p>看看笔算如何利用 CRC 码查错呢？</p><p>利用 (7, 4) 循环码，数据是：<code>1001010</code>，生成多项式是：<code>1011</code>。</p><p><img src="https://static.xialing.icu/img/202503141122066.webp" alt="得到余数 - 图源：西电车向泉老师的 ppt"></p><p>进行模二除法，也就是按位异或。商不重要，在意的是余数。把余数加上，就得到了装配后的数据。</p><p><img src="https://static.xialing.icu/img/202503141125176.webp" alt="验证 - 图源：西电车向泉老师的 ppt"></p><p>如果出现了一位错误，可以实现纠错。然而，如果发生错误的位数过多，或者校验位出了错，那就没救了。但是，CRC 码的检错能力还是比较强的。</p><h2 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h2><p>海明码适于磁盘这种错误随机发生的系统，可以实现错误的检验和纠正。</p><p>它的核心是这个公式：</p><p>$$<br>2^r \geq m + r + 1<br>$$</p><p>其中，$r$ 表示校验位的个数；$m$ 表示数据位的个数。</p><p>对这个公式的解释如下：有 $r$ 个校验位，就有 $2^r$ 个状态，可以检测 $2^r$ 个位。</p><p>那么我们要检测多少个位呢？看等式右侧，数据位的 $m$ 个是一定要检测的；$r$ 个校验位也要检测；当然还有一个状态用来表示没有出错。</p><p>对于校验位的位置，并不像 CRC 一样在数据的末尾，而是嵌入在数据位中，在 $2^m$ 的位置。比如，$1, 2, 4, 8, 16, 32 \ldots$（从 1 开始计数）</p><p>每一个校验位的校验规则如下：</p><ol><li>奇校验 or 偶校验？</li><li>对于每个校验位，从这位开始，检测 $m$ 位，跳过 $m$ 位…</li></ol><p>其中，$m$ 表示校验位的位置，从 <code>1</code> 开始计数。如，如果一个校验位在第 <code>4</code> 个位置，那么它要检测的位数是 $4, 5, 6, 7, 12, 13, 14, 15\ldots$</p><p>检测到最高位为止，比如，如果一共就 12 位，后面的 $13, 14, 15$ 就不检测了。</p><p>它的取值仍然按照奇校验或者偶校验的规则，如果是偶校验，检测的数据位有奇数个 <code>1</code>，则取值为 <code>1</code>，否则为 <code>0</code>。</p><p>规则 2 在数学上是这样理解的，就是对于一个位置的标号，把它用 2 的幂次来表示，如果这个标号的幂次包含了校验位的位置标号，则校验位要检测它。比如，$7 &#x3D; 1 + 2 + 4$，那么在 4 号的校验位就要检测它。但 $9 &#x3D; 8 + 1$，那么 4 号的就不检测它。常用的技巧就是上面提到的，检测多少个，然后跳过多少个。</p><p>海明码的纠错能力是 $\lfloor \frac{n - 1}{2} \rfloor$，检错能力是 $n-1$， $n$ 是两个<strong>正确</strong>数据之间的最小汉明距离（不同位的个数）。可以想象，如果位数的变化个数没有偏离两个数中间的那条界限，是可以纠正回原来的数据的。</p><p>但是要是变化的太多，那就不知道原来的样貌了。不过，只要不变化的太多（比如，没有通过翻转 $n$ 位而导致变成了另一个合法编码），就能够检测出错误，然而这时候纠正是不可信的。</p><p>以常见的 8 位数据，4 位校验的海明码为例。因为最小海明距离为 3（每个数据位至少被 2 个校验位检测，如果一个数据位变化了，这两个校验位也会变化，形成一个新的海明码。校验位要是出错了，不在乎，因为出错后的编码非法），所以能检测 2 位错误，纠正 1 位错误。</p><p>检错的话，直接分别对校验位偶校验即可。</p><p>纠错的话，校验位出错，记为 1；否则为 0。校验位从高到低组成的二进制数表明了出错位置（仍然是从下标为 1 开始）。</p>]]></content>
      
      
      <categories>
          
          <category> 计组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 的用户和用户权限管理</title>
      <link href="//2025/03/mysql-user/"/>
      <url>//2025/03/mysql-user/</url>
      
        <content type="html"><![CDATA[<h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password123&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="授予用户权限"><a href="#授予用户权限" class="headerlink" title="授予用户权限"></a>授予用户权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">UPDATE</span> <span class="keyword">ON</span> foo.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="查看某个用户的权限"><a href="#查看某个用户的权限" class="headerlink" title="查看某个用户的权限"></a>查看某个用户的权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除用户权限"><a href="#删除用户权限" class="headerlink" title="删除用户权限"></a>删除用户权限</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> foo.<span class="operator">*</span> <span class="keyword">FROM</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 数据库的导入导出</title>
      <link href="//2025/03/mysql-dump/"/>
      <url>//2025/03/mysql-dump/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>可能需要迁移本地的表格到服务器，或者反之。也有可能在服务器之间传送数据库内容。总结一下。</p><h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><p>#TODO</p><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>导出 <code>foo</code> 数据库中 <code>bar</code> 和 <code>baz</code> 表到 <code>mydump.sql</code> 中：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqldump <span class="comment">--add-drop-table --databases foo --tables bar baz &gt; /path/to/mydump.sql</span></span><br></pre></td></tr></table></figure><p>导出所有表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysqldump <span class="comment">--add-drop-database --databases foo &gt; /path/to/mydump.sql</span></span><br></pre></td></tr></table></figure><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>在启动 <code>mysql</code> 后(<code>sudo mysql</code>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /path/to/mydump.sql</span><br></pre></td></tr></table></figure><p>或者命令行中输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql <span class="operator">&lt;</span> &quot;/path/to/mydump.sql&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CS50AI - 第 1 章 - 知识</title>
      <link href="//2025/03/cs50ai-chap1/"/>
      <url>//2025/03/cs50ai-chap1/</url>
      
        <content type="html"><![CDATA[<h2 id="0-序"><a href="#0-序" class="headerlink" title="0. 序"></a>0. 序</h2><p>这节课讲<a href="https://cs50.harvard.edu/ai/2024/weeks/1/">知识</a>。在上节课的搜索中，我们的 agent 在 <code>bfs</code> 和 <code>dfs</code> 中如没头苍蝇一般，到处乱撞。然而有了启发函数和 <code>A*</code> 搜索后，agent 仿佛就智慧了些。</p><p>所以这节课就讲一讲，除了这种较为基础的函数来推断之外，还有哪些存储大量知识，并高效的用他们推理的技术。</p><h2 id="1-命题逻辑"><a href="#1-命题逻辑" class="headerlink" title="1. 命题逻辑"></a>1. 命题逻辑</h2><p>我们最先接触到的数理逻辑概念叫命题逻辑。</p><h3 id="1-1-符号与连接词"><a href="#1-1-符号与连接词" class="headerlink" title="1.1. 符号与连接词"></a>1.1. 符号与连接词</h3><p>命题逻辑有两个组成部分：符号和连接词。</p><p>符号很好理解，是非真即假的陈述句。几种常见的错误有疑问句、感叹句、悖论等等。</p><p>孤木不成林。连接词指的是把符号连接起来的组分，常见的有与、或、非、蕴含、等价连接词。</p><p>如果读者学习过数字逻辑和离散数学，对这些概念应该了然于胸，这里就不赘述了。补充一点，描述这些连接词的性质（什么时候真、什么时候假），经常用到的工具是真值表。</p><h3 id="1-2-模式"><a href="#1-2-模式" class="headerlink" title="1.2. 模式"></a>1.2. 模式</h3><p>课程原文用的是 <em>Model</em>，如果用屈婉玲老师《离散数学》那本教材的语言，应该是赋值或解释。也就是把所有的符号都赋一个真 &#x2F; 假的值。</p><p>模式的另一种解释叫 <em>Possible World</em>，一种可能的情形。这个词我认为很科幻、很浪漫。就像是许多平行世界一样，有的世界中，这件事发生了，而另一个世界中没有。每一个模式，就是平行世界中的一个。</p><h3 id="1-3-知识库"><a href="#1-3-知识库" class="headerlink" title="1.3. 知识库"></a>1.3. 知识库</h3><p><em>Knowledge Base</em> 是 AI 已经知道的内容，哪些为真、哪些为假。不过可以认为存储的都是为真的陈述，因为对于假的内容，取反就成真了。</p><p>如果用《离散数学》的语言，知识库应该叫「前提」。</p><h3 id="1-4-蕴含"><a href="#1-4-蕴含" class="headerlink" title="1.4. 蕴含"></a>1.4. 蕴含</h3><p><em>Entailment</em> 这个词居然翻译过来是蕴含，我觉得很容易和 $\rightarrow$ 这个蕴含连接词弄混。所以采用《离散数学》的语言，应该叫「推理正确」。</p><p>它指的是，如果条件为真，结论也为真。换句话说，如果是在数学证明中，就是条件可以推出结论。</p><p>蕴含用的是这个符号 $\models$，屈婉玲老师的教材用的也是这个符号。</p><h3 id="1-5-推理理论"><a href="#1-5-推理理论" class="headerlink" title="1.5. 推理理论"></a>1.5. 推理理论</h3><p>不像离散数学的教学方法，先把等值式、范式教授完毕后再进行单方向的推理的学习，这门课直接进入到了推理阶段。</p><p>似乎也可以理解，因为我们并不关心两个结论是否可以互推，只要一个可以推理出另一个就可以了。至于过程中可能出现条件减弱的情形，我们不在乎。</p><p>推理正确的定义，是在所有条件为真的情形下，结论都成立。所以直觉上，我们的想法就是，穷举那些条件为真的情形，找出这样的 <em>Possible World</em>，然后看，在这样的世界里，结论是否为真。</p><p>为什么不在乎那些条件为假的情形？因为根据蕴含连接词的定义，当前件为假时，公式恒为真。</p><p>这件事我一直不能理解，怎么会这样呢？经过了一学期离散数学的学习，加上这门课的再次解释，我大概清楚了。</p><p>蕴含连接词表示的是一个推断：如果…那么…</p><p>要是前件压根就不成立，这个推断并没有说明任何问题，因为推断是建立在前件为真的基础上的（如果…）。如果前件为假，我们无法从中得到任何有益内容，所以推断<em>平凡</em>为真。</p><p>可能还是表述的不是很清楚，就这样接受吧。</p><blockquote><p>话说回来</p></blockquote><p>所以如果要编写一个程序来实现的话，思路是递归式的对每个符号赋真或假。对于所有让 <strong>KB</strong> 成真的赋值，如果待验证的结论都为真，则推理正确。如果不全为真，则推理错误。</p><h3 id="1-6-知识工程"><a href="#1-6-知识工程" class="headerlink" title="1.6. 知识工程"></a>1.6. 知识工程</h3><p><em>Knowledge engineering</em> 是探索如何在 AI 中表示命题和逻辑的过程。如果用中文来表示的话，或许是「命题符号化」。</p><p>课程举了三个例子，一个是叫 <em>Clue</em> 的游戏，有点像狼人杀，不过又有一些区别。</p><p>游戏的大概流程是，分三个板块，人物、地点、武器。每个版块抽取一个放入信封，然后根据剩余的信息猜测信封中是什么。</p><p>另一个例子是一人一房，每个人有一间房，而每个房也只能装一个人。</p><p>还有一个例子是 <em>Mastermind</em>，有点像 <em>Wordle</em>，只不过这里不是单词，而是颜色。目标是把对应的颜色放到对应位置，每次排序，会返回正确位置的颜色数。</p><p>每个例子下来，符号化会越来越繁琐。</p><p>第一个例子中，如果三个板块分别有 $a$、$b$、$c$ 个对象，只需要 $a + b + c$ 个符号就完成了符号化。因为这样做已经可以确保每个符号非真即假。</p><p>第二个例子中，如果有 $n$ 个人，$n$ 个房子，就需要 $n^2$ 个符号。因为我们要确保，一个符号是非真即假的陈述句。如果仍然采用 $2 \cdot n$，每个人、每个房子作为一个符号，表明不了真假。</p><p>第三个例子则更加复杂，如果有 $m$ 种颜色，也就对应了 $m$ 个位置。需要 $m!$ 种表示。</p><p>这些都可以通过程序来实现。</p><h3 id="1-7-推理规则"><a href="#1-7-推理规则" class="headerlink" title="1.7 推理规则"></a>1.7 推理规则</h3><p>模式检查，如果进行算法分析，可以得到，这是一个指数级别的复杂度。因为如果有 $n$ 个符号，每个符号非真即假，这样就有 $2^n$ 种真值表。</p><p>还是那句话：</p><blockquote><p>指数级别的复杂度不可接受！</p></blockquote><p>怎样更高效的分析嘞？可以用推理规则。</p><p>这里的推理规则并不强求是等值式。不过等值式是两个方向的，单方向的推理当然成立啦。</p><p>有这样几个<strong>推理</strong>理论（不一定等值喔！）：</p><table><thead><tr><th>English</th><th>中文</th></tr></thead><tbody><tr><td>Modus Ponens</td><td>假言推理规则</td></tr><tr><td>And Elimination</td><td>化简规则</td></tr><tr><td>Double Negation Elimination</td><td>双重否定律</td></tr><tr><td>Implication Elimination</td><td>蕴含等值式</td></tr><tr><td>Biconditional Elimination</td><td>等价等值式</td></tr><tr><td>De Morgan’s Law</td><td>德摩根律</td></tr><tr><td>Distributive Property</td><td>分配律</td></tr></tbody></table><p>这里的推理和前一节课的搜索有隐约的联系。</p><p>一开始的初始状态是 <em>KB</em>，一个个推理就是 <em>Actions</em>，<em>Transition Model</em> 是变换后新的 <em>Knowledge Base</em>，<em>Goal Test</em> 是判断要证明的语句是否在知识库中，<em>Path cost function</em> 则记录了证明需要的步骤。</p><h3 id="1-8-消解证明法"><a href="#1-8-消解证明法" class="headerlink" title="1.8. 消解证明法"></a>1.8. 消解证明法</h3><p>这部分知识在课内没有学习过，课本上有，但老师没讲，真是很遗憾了。因为，合取范式的意义就在于可以用消解证明法来高效的证明结论是否成立啊！</p><p><img src="https://cs50.harvard.edu/ai/2024/notes/1/resolution1.png" alt="消解证明法，引自：https:&#x2F;&#x2F;cs50.harvard.edu&#x2F;ai&#x2F;2024&#x2F;notes&#x2F;1&#x2F;resolution1.png"></p><p>比如这个显然的例子，要么 $P$ 成立，要么 $Q$ 成立，结果 $P$ 还不成立。您猜怎么着，肯定 $Q$ 成立啊。</p><p>再看一个例子：</p><p><img src="https://cs50.harvard.edu/ai/2024/notes/1/resolution2.png" alt="消解证明法，引自：https:&#x2F;&#x2F;cs50.harvard.edu&#x2F;ai&#x2F;2024&#x2F;notes&#x2F;1&#x2F;resolution2.png"></p><p>要么 $P$ 成立，要么 $Q$ 成立，要么 $\neg P$ 成立，要么 $R$ 成立，能推出什么呢？如果 $P$ 成立的话，$\neg P$ 不成立，这样 $R$ 必须成立；或者 $P$ 不成立，那么 $Q$ 就必须成立。哦，所以得到 $Q \lor R$</p><p>这里的 $Q$ 或者 $R$ 也可以是好多用 $\lor$ 连接起来的公式的集合。</p><p>这种形式很明显，非常高效，所以如何求得这种形式的命题公式成为了一个值得探讨的话题。这种形式的命题就是合取范式（Conjunctive Normal Form），没有主。</p><p>如何获得合取范式，不说了，太简单。来看看怎样运用消解证明法呢？</p><blockquote><p>用反证法</p></blockquote><p>假设结论不成立，引入到 <strong>KB</strong> 中，看看会不会推出空语句。因为空语句标志着一个命题和它的否定同时出现了。</p><h2 id="2-一阶逻辑"><a href="#2-一阶逻辑" class="headerlink" title="2. 一阶逻辑"></a>2. 一阶逻辑</h2><p>命题逻辑无法实现对事物更细粒度的刻画。</p><p>一阶逻辑包含两个符号：常量符号和谓词符号。前者表示一个对象，后者表示一种关系。</p><p>像前面那个分房的例子，我们需要 $n^2$ 个符号，而如果用一阶逻辑来表述，分别定义 $2 \cdot n$ 个人 or 房子。再定义一个谓词表示人属于这个房子。就足以表达所有的情形。这样需要的符号就显著减少了，只有 9 个，不过要表示的命题数量还是 $n^2$ 个。</p><p>在一阶逻辑中还有量词的存在，全称量词、特称量词。不再赘述了。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计组 | 数字在计算机中的编码</title>
      <link href="//2025/03/computer-architecture-number-encoding/"/>
      <url>//2025/03/computer-architecture-number-encoding/</url>
      
        <content type="html"><![CDATA[<h2 id="课程链接"><a href="#课程链接" class="headerlink" title="课程链接"></a>课程链接</h2><p><a href="https://www.bilibili.com/video/BV1KP411X71M/">B 站</a></p><h2 id="数的表示"><a href="#数的表示" class="headerlink" title="数的表示"></a>数的表示</h2><h3 id="整数的表示"><a href="#整数的表示" class="headerlink" title="整数的表示"></a>整数的表示</h3><p>对无符号数，没必要讨论，直接按照每位的权重加起来就好了。</p><p>如何高效表示有符号数，是一个漫长的旅程。</p><p>先阐明一下设计的思路，然后再具体讲解编码的规则。</p><p>直觉上讲，如果要表示整数，如何来标记符号位呢？不妨单独开辟一个位置，来表示符号，比如 1 表示负数，0 表示正数，低位表示绝对值。这就是原码的道理所在。</p><p>不过原码有一个问题，在于 0 的表达有二义性，低位为全 0，符号位不论是 1 还是 0，都表示 0。再一个，原码的编码会让有符号数的加法运算无法利用既有的无符号数的加法电路，还要单独设计一套新的电路，不好。</p><p>因此，想要设计一个新的编码体系，让有符号数也能利用无符号数的运算电路。这样，反码诞生了。</p><p>它的规则是，正数编码不变，负数的编码是它的绝对值的编码按位取反。这样，最高位仍然是符号位，1 负 0 正。而且确实可以实现用无符号数的加法器来进行加法运算。我列了一个 3 位数的表格，读者可以加加看：</p><table><thead><tr><th>反码</th><th>真值</th></tr></thead><tbody><tr><td>000</td><td>0</td></tr><tr><td>001</td><td>1</td></tr><tr><td>010</td><td>2</td></tr><tr><td>011</td><td>3</td></tr><tr><td>100</td><td>-3</td></tr><tr><td>101</td><td>-2</td></tr><tr><td>110</td><td>-1</td></tr><tr><td>111</td><td>-0</td></tr></tbody></table><p>比如，$1 - 2 &#x3D; 1 + (-2) &#x3D; (001)_2 + (101)_2 &#x3D; (110)_2 &#x3D; -1$。</p><p>但还有一个问题没有解决，就是 0 还是有二义性。我推测，或许在电路上需要额外增加一些条件判断，电路会比较复杂。因此，补码诞生了。</p><p>补码不仅可以利用原先的无符号加法器，还可以消除 0 的二义性，并因此成为了目前绝大多数机器中有符号数的表示形式。补码的编码规则是，正数编码不变，负数的编码是它的绝对值的编码按位取反，<strong>然后+1</strong>。这样，最高位还是符号位，1 负 0 正。</p><h3 id="小数的表示"><a href="#小数的表示" class="headerlink" title="小数的表示"></a>小数的表示</h3><p>整数的表示可以告一段落了，然而，小数如何来表示呢？</p><p>一开始是所谓的定点数，小数点的位置是固定的、约定好的。常见的规则是，最高位是符号位，剩下的作为数值位。小数点在符号位和数值位之间。这样，表示的是纯小数，没有整数部分。纯小数也有许多表示方法，常见的是原码的表示和补码的表示。规则和整数的一样，只不过位权可能变成了 0，-1，-2…，不再是原来的0，1，2，3…</p><p>后面，人们要表示一些更大范围、更高精度的数据，例如太阳的质量或电子的质量，定点数就不好表示了。所以让小数点浮动起来，这就是浮点型。</p><p>浮点型的编码，和科学计数法类似。比如 $9.1 \times 10^{-31}$，这里包含了几个成分：符号（+）、尾数（9.1）、指数（-31）。因此，浮点数的编码就要储存着三部分数据。</p><p>不过，为了比较数值大小的方便（一般是从高位到低位比较，而且显然比较的顺序应该是符号位、阶码、尾数），如果按照科学计数法的表达方式，有些拧巴，所以真正的浮点数在机内的表示是符号位、指数位（阶码）、尾数：</p><p><img src="https://static.xialing.icu/img/202503071407412.webp" alt="浮点数"></p><p>还是为了「比较」方便，所以阶码采用移码编码。移码，想要达成的一个效果就是可以让真值和编码之间达成一个线性的效果，真值大，编码值就大，反之亦然。所以补码的编码就是，选定一个偏移量，然后把真值 + 偏移量的值作为编码。比如，要表示 -4 ~ 3，那就用 <code>000</code> 表示 <code>-4</code>，然后依次递增。</p><p>偏移量的选择，是个问题。假如有 3 位的阶码，是表示 -3 ~ 4，还是 -4 ~ 3？尾数也可以有很多种表示方法，比如补码、原码等等。</p><p>标准太多啦！没有一个统一的标准，各个机器之间的兼容性就会很差。因此 IEEE754 标准诞生了。</p><h4 id="IEEE754"><a href="#IEEE754" class="headerlink" title="IEEE754"></a>IEEE754</h4><p>IEEE754 采用移码来表示阶码，规定了偏移量的选取；采用原码来表示尾数。从而统一了浮点数的表示。</p><h2 id="整数的编码规则"><a href="#整数的编码规则" class="headerlink" title="整数的编码规则"></a>整数的编码规则</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>原码，原码，个人理解，就是很原始的码，是<strong>直觉</strong>上来对整数进行机内表示。</p><p>原码的结构也很简单。最高位作为符号位，1 表示负数，0 表示正数。而剩下的低位表示数的绝对值。</p><p>这种想法是很直接的，既然要表示正数和负数，那我就单独开辟一个符号位作为 flag，来标志数的正负。我们不妨来看几个数，以 8 位为例。</p><p><img src="https://static.xialing.icu/img/202503071116527.webp" alt="原码示例"></p><p>原码的问题是，在 0 的表示上有二义性；而且，如果要让有符号数和无符号数的加法使用同一个电路，很明显是不可行的，比如上图中的 $-0 + 1$，结果会被解释为 $-1$。</p><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>因此，有人想出了反码来编码。正数的编码不变，负数的编码是其绝对值编码按位取反的结果。最高位可以理解为符号位，1 负 0 正。</p><p>不过因为反码只解决了用无符号数加法器的问题，但没能解决 0 的二义性，所以用的很少。看几个例子作为结束吧：</p><p><img src="https://static.xialing.icu/img/202503071347545.webp" alt="反码"></p><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p>要解决 0 的二义性，补码应运而生。</p><p>补码的规则是这样的：对于正数，补码 &#x3D; 原码；对于负数，补码 &#x3D; 负数绝对值的原码取反加一。</p><p>此外，注意到，最高位仍然可以看做是一个符号位，1 表示负数，0 表示正数（和 0）。</p><p>以 8 位为例：</p><p><img src="https://static.xialing.icu/img/202503071123628.webp" alt="补码示例"></p><p>补码和真值的互变是常用、常考的。正数的就不说了，平凡，对负数的来讲，总结下来，有这样三条路：</p><h4 id="取反-1-流派"><a href="#取反-1-流派" class="headerlink" title="取反 + 1 流派"></a>取反 + 1 流派</h4><ul><li><p>真值到补码：求负数的绝对值 -&gt; 用原码&#x2F;补码（一个意思）表示 -&gt; 取反 -&gt; + 1</p></li><li><p>补码到真值：补码取反 -&gt; + 1 -&gt; 加负号</p></li></ul><h4 id="更快的取反-1"><a href="#更快的取反-1" class="headerlink" title="更快的取反 + 1"></a>更快的取反 + 1</h4><ul><li><p>真值到补码：求负数的绝对值 -&gt; 用原码&#x2F;补码（一个意思）表示 -&gt; 从最低位开始，找到第一个 1,1 左侧的取反（不含 1），1 和 1 右侧的保持不变</p></li><li><p>补码到真值：补码从最低位开始，找到第一个 1,1 左侧的取反（不含 1），1 和 1 右侧的保持不变 -&gt; 加负号</p></li></ul><p>这是可以在数学上证明的。</p><p>从最低位开始，找到第一个 1，这样，1 右侧的都是 0。取反 + 1，右侧的 0 变成 1，再加 1，又变回了 0，进位给到原来最低位的 1。但是因为 1 也被取反了，所以被取反后的 0 和进位 1 相加，$0 + 1 &#x3D; 1$，也回到了 1。</p><p>此外，如果 1 就在最低位，右侧没有 0，也是适用的。</p><p>提供一张图，展示如何从补码得到真值：</p><p><img src="https://static.xialing.icu/img/202503071619816.webp" alt="补码技巧1"></p><h4 id="最高位的位权是负的"><a href="#最高位的位权是负的" class="headerlink" title="最高位的位权是负的"></a>最高位的位权是负的</h4><p><em>CSAPP</em> 或者一些国外的教材喜欢这样解释，最高位的位权是负数，从而构成了真值。这对于一些位数比较小的二进制数来说，计算很方便，</p><p><img src="https://static.xialing.icu/img/202503071148951.webp" alt="国外教材对补码的理解"></p><p>读者可以用取反 + 1 的做法来看看，结果应该是一样的。</p><h2 id="小数的编码规则"><a href="#小数的编码规则" class="headerlink" title="小数的编码规则"></a>小数的编码规则</h2><h3 id="定点数中的纯小数"><a href="#定点数中的纯小数" class="headerlink" title="定点数中的纯小数"></a>定点数中的纯小数</h3><p>定点数中，纯小数是常考的。纯小数就是指绝对值 &lt; 1 的小数。虽然数域扩大了，但是表示的原理和整数是一样的。</p><p>如果用原码来表示，最高位的值决定符号，低位数值位决定绝对值的大小。</p><p>如果用补码来表示，仍然沿用补码的规则。最高位的位权是 $2^0$，小数从小数点开始的位权依次降低，分别是 $2^{-1}, 2^{-2} \ldots$</p><p>看几个例子，用原码来表示：</p><p><img src="https://static.xialing.icu/img/202503071359389.webp" alt="原码纯小数"></p><p>再看看同样的编码解释为补码纯小数的效果：</p><p><img src="https://static.xialing.icu/img/202503071703265.webp" alt="补码纯小数"></p><h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p>浮点数沿袭了科学计数法的记法，只不过修改了一下指数和尾数的顺序。最终形成了下图的结构：</p><p><img src="https://static.xialing.icu/img/202503071407412.webp" alt="浮点数"></p><p>总的来说，符号位决定正负；阶码决定范围；尾数决定精度。</p><h4 id="阶码的表示"><a href="#阶码的表示" class="headerlink" title="阶码的表示"></a>阶码的表示</h4><p>阶码的表示用移码，移码的编码值是真值 + 偏移量。为了让表示的范围能尽量对称地表示正指数和负指数，所以要选择尽量中间的值作为偏移量。选哪个呢？</p><p>因为不论用多少位表示阶码，能表示的指数一定是偶数个($2^n, n: bits \geq 1$)，总会偏上或偏下，没有正中间。所以，不妨选中间偏上的 <code>10000...0</code> 作为偏移量吧！</p><p>举个例子，如果用 8 位来表示阶码，那么，偏移量就是 <code>128</code>。如果一个小数是 $a.bcd \times 2^{-4}$ 的形式，那么 <code>-4</code> 在机内就会按照 <code>124</code> 来存储。$124_{10} &#x3D; 7C_{16} &#x3D; 0111\ 1100_{2}$</p><p>这里有一个技巧，那就是，偏移量为 $2^{n-1}$ 时，一个数的阶码和补码符号位是相反的，其余位不变。还是上面的例子，<code>-4</code> 的补码是 <code>11111100</code>，那么它的阶码就是 <code>01111100</code>，和我们用定义运算得到的结果是一样的。</p><p>这里还有一个结论，那就是对于阶码来说，1 表示正数，0 表示负数，和其他编码的符号位意义是相反的。</p><h4 id="尾数的表示"><a href="#尾数的表示" class="headerlink" title="尾数的表示"></a>尾数的表示</h4><p>尾数可以用原码或者补码的形式来表示。注意，这里要把符号位和尾数看做一个整体，作为数值位，然后，用前文定点数的结论来分析就好了。</p><p>但这里要注意一点不同，那就是，尾数的表示需要<strong>规格化</strong>。规格化的意义，我认为有两个：</p><ol><li>消除二义性；</li><li>表示更高的精度。</li></ol><p>第一点是显然的，如果不规定每个数唯一的表示形式，底层的电路又该如何解释分析？</p><p>第二点也好理解，如果把宝贵的尾数位存放一堆无用的、完全可以用阶码来表示的占位 <code>0</code>，不是一个好的选择。例如，$0.12345678$ 如果用 $0.0012345678 * 2^{-2}$ 来表示，如果尾数只有 8 位，那么第二种表示就会丢失精度。因此对规格化的规定是这样的：</p><ol><li>如果是原码，要求是 <code>0.1xxxx</code> 或者 <code>1.1xxxx</code> 的格式，换言之，十分位要是 1；</li><li>如果是补码，要求是 <code>0.1xxxx</code> 或者 <code>1.0xxxx</code> 的格式，换言之，最高的两位满足异或关系。</li></ol><p>读者可以思考一下，上面的编码规则能不能满足规格化的两点要求？</p><p>以及，明明补码可以表示 $-\frac{1}{2}$，为什么不把它设计为合法的规格化格式呢？（提示：从电路设计的角度来思考，如果把它加入规格化格式中，还能用一个简单的异或逻辑来判断吗？）</p><p>在运算的过程中，有可能发生溢出（上溢 or 下溢）。因此把原先最高位符号位再复制一个，扩展为两位，然后再计算。如果溢出了，两个符号位不同，需要再次规格化。可能需要向左或向右移动小数点，具体看编码的规格化格式。</p><h3 id="IEEE754-1"><a href="#IEEE754-1" class="headerlink" title="IEEE754"></a>IEEE754</h3><p>IEEE754 标准沿用了浮点数的表示结构，但在一些细节上有不同，从而解决浮点数的一些问题。</p><p>字长就那么大，精度的占比和范围的占比此消彼长，需要权衡。所以 IEEE754 对它们的占比是这样规定的（32 位机器）：</p><ul><li><code>float</code>，单精度浮点型，32 位，1 位符号位，8 位指数位，23 位尾数位；</li><li><code>double</code>，双精度浮点型，64 位，1 位符号位，11 位指数位，52 位尾数位。</li></ul><p>2008 版的标准还规定了一些其他字长的浮点型，从略。</p><h4 id="更高的精度"><a href="#更高的精度" class="headerlink" title="更高的精度"></a>更高的精度</h4><p>IEEE754 对规格化的标准和上面的不同。首先，IEEE754 选择 <strong>原码</strong> 来编码尾数。而它要求规格化的位数格式为 <code>01.xxxx</code> 或 <code>11.xxxx</code>，即 <code>s1.xxxx</code>，其中 $s$ 表示符号位。</p><p>和科学计数法的思想类似。在科学计数法中，我们要求小数点左侧必须是一个一位的非零数。在二进制中，这个数不像十进制那么丰富，只能是 1。</p><p>这样的话，因为规格化要求符号位后方一定有一个 1，这样的话，就不用 1 位的空间存这个 1 了，而是把它作为隐含的 1。由此，IEEE754 就可以用 $n$ 位来实现 $n+1$ 位的精度。</p><h4 id="更大的范围"><a href="#更大的范围" class="headerlink" title="更大的范围"></a>更大的范围</h4><p>不知道读者思考过没有，浮点数的表示是有 bug 的，那就是，怎么表示 0 呢？</p><blockquote><p>思考几秒钟…</p></blockquote><p>看看原码的定义，十分位必须是 1，那就是绝对值最小也得是 $\frac{1}{2}$。天大的笑话！前面的编码都在想解决 0 的二义性问题，结果到了浮点数，居然无法表示 0 了？</p><p>幸运的是，IEEE754 标准通过把某几个阶码设置为标志位，从而达到了这一目的。</p><p>首先，IEEE754 对于偏移量的选择，<strong>并不是</strong>$2^{n-1}$，而是中间偏下的一位：$2^{n-1}-1$。我想出来一个 「双减」作为口诀。</p><p>这样的话，阶码和补码之间符号位反转的结论就不成立了。真值的范围，是正数比负数可以多表示一位，如果还是以 8 位为例，那就是 <code>-127 ~ +128</code>，对应二进制为 <code>00000000 ~ 11111111</code>。</p><blockquote><p>但是！</p></blockquote><p>二进制全 0 和全 1 作为标志位，不表示某一个具体的阶码值。所以阶码的表示范围是 <code>-126 ~ +127</code></p><p>如果为全 0，说明这个阶码非常小，很接近 0 了。</p><p>所以，如果在阶码为全 0 的情况下，尾数为全 0，则表示 0。</p><p>而如果尾数不全为 0，则可以用来表示非规格化的小数。这里的非规格化，指的是符号位右边那个隐含的 1 不要了，当做 0 来处理。这样就可以表示那些更接近 0 的值。此时的阶码是在阶码的表示范围内最小的那个，如果是 8 位的，那就是 <code>-126</code>。</p><p>如果为全 1，说明这个阶码非常大，很接近无穷了。所以，如果此时尾数为全 0，则表示无穷大，根据符号位的不同可以表示 $-\infty$ 和 $+\infty$。</p><p>但如果尾数不为全 0，则说明计算出了问题，得到的结果是「非数」，<code>NaN</code>，aka <em>Not a Number</em>。比如给一个负数开平方根就会得到 <code>NaN</code>。</p><h4 id="一个真值和编码值转换的例子"><a href="#一个真值和编码值转换的例子" class="headerlink" title="一个真值和编码值转换的例子"></a>一个真值和编码值转换的例子</h4><p>应试角度上，看个例子吧：</p><blockquote><p>如何把 $22.78125$ 转换为 32 位的 IEEE754 浮点数？</p></blockquote><p>先确定符号位，正数，所以是 0。</p><p>再确定尾数和阶码，需要把小数转换成二进制表示。整数部分的转换很简单，<code>16H</code>，小数怎么办呢？</p><p>有两种方法。课内常教的是乘二取整，从下往上抄结果，因为越乘阶越高，那就越靠近小数点。</p><p>还有一种方法是 <em>CSAPP</em> 上提到的，那就是转换成分数。</p><p>比如说：</p><p>$$<br>0.78125 &#x3D; \frac{78125}{100000} &#x3D; \frac{25}{32} &#x3D; \frac{25}{2^5}<br>$$</p><p>$\frac{25}{2^5}$ 的意思是，把 25 按位右移 5 位。也就是说：</p><p>$$<br>(25)<em>{10} \div 2^5 &#x3D; (11001)</em>{2} \times 2^{-5} &#x3D; (0.11001)_{2}<br>$$</p><p>所以也不用费劲除啦，约分得到的分母的二进制表示就是小数部分。</p><p>所以我们得到了 <code>10110.11001</code>，规格化一下，是 <code>01.011011001 * 2^4</code>。</p><p>所以阶码是 <code>4 + 127</code> &#x3D; <code>131</code> &#x3D; <code>83H</code> &#x3D; <code>10000011</code>，尾数是 <code>0110110010000...0</code>。</p><p>最终拼起来：<code>0100 0001 1011 0110 0100 0000 0000 0000</code>，也就是 <code>0x41B64000</code>。</p><h4 id="浮点数的表示范围"><a href="#浮点数的表示范围" class="headerlink" title="浮点数的表示范围"></a>浮点数的表示范围</h4><p>这里以 <code>float</code> 为例，以正数为例，因为尾数是原码表示，是对称的。</p><p>有四个数我们比较在意：规格化最大，规格化最小，非规格化最大，非规格化最小（不考虑 0）。</p><p>规格化最大：</p><p>阶码是 <code>1111 1110</code>，也就是 <code>+127</code>。尾数是 <code>11111....1</code>，也就是 <code>1 - 2^(-23)</code>。最后得到 $(2 - 2^{-23}) \times 2^{127} &#x3D; 3.402823466 \times 10^{38}$。</p><blockquote><p>想想为什么是 $2 - 2^{-23}$，而不是 $1 - 2^{-23}$ 呢？</p></blockquote><p>规格化最小：</p><p>阶码是 <code>0000 0001</code>，也就是 <code>-126</code>。尾数是 <code>00000....0</code>，也就是 <code>0</code>。最后得到 $1 \times 2^{-126} &#x3D; 1.175494351 \times 10^{-38}$。</p><blockquote><p>想想为什么是尾数可以取到 <code>00000....0</code>，而不是 <code>00000....1</code> 呢？</p></blockquote><p>非规格化最大：</p><p>阶码是 <code>0000 0000</code>，特殊标记，也就是 <code>-126</code>。尾数是 <code>11111....1</code>，也就是 <code>1 - 2^(-23)</code>。最后得到 $1 - 2^{-23} \times 2^{-126} &#x3D; 1.175494211 \times 10^{-38}$。</p><blockquote><p>想想为什么是 $1 - 2^{-23}$，而不是 $2 - 2^{-23}$ 呢？</p></blockquote><p>非规格化最小：</p><p>阶码是 <code>0000 0000</code>，特殊标记，也就是 <code>-126</code>。尾数是 <code>00000....1</code>，也就是 <code>2^(-23)</code>。最后得到 $2^{-23} \times 2^{-126} &#x3D; 1.401298464 \times 10^{-45}$。</p><blockquote><p>想想为什么是这次尾数不是 <code>00000....0</code> 了呢？</p></blockquote><p>还有一个 <code>FLT_EPSILON</code>，<code>float.h</code> 的注释是这样说的：<code>// smallest such that 1.0+FLT_EPSILON != 1.0</code>。那不就是精度的意思嘛！</p><p>此时的阶码应该是 0，而 $\varepsilon &#x3D; 2^{-23} &#x3D; 1.192092896 \times 10^{-7}$。</p><h4 id="浮点数的精度"><a href="#浮点数的精度" class="headerlink" title="浮点数的精度"></a>浮点数的精度</h4><p>我们说，<code>float</code> 有 7 位精度，这是怎么来的呢？</p><p>因为在机内，尾数通过 23 位达到了 24 位的精度，也就是能表示 $2^{24}$ 个数，不过人是使用十进制的，所以能表示多少位呢？需要进行这样的换算：</p><p>$$<br>10^{?} &#x3D; 2^{24}<br>$$</p><p>一个对数运算可以求得 $? &#x3D; \log2^{24} \approx 7.22$，位数是要下取整的，所以是 7 位。</p><p>我们说，<code>double</code> 有 15 位精度，为什么呢？因为在机内，尾数通过 52 位达到了 53 位的精度，也就是能表示 $2^{53}$ 个数，同样的对数运算可以求得 $ log2^{53} \approx 15.95$。</p><h4 id="拓展：非规格化数可以解决的问题"><a href="#拓展：非规格化数可以解决的问题" class="headerlink" title="拓展：非规格化数可以解决的问题"></a>拓展：非规格化数可以解决的问题</h4><p>如果 IEEE754 标准中没有非规格化数，又会怎样呢？</p><p>假设三位阶码，可以表示 <code>-2 ~ 3</code>（因为 -3 和 4 是标志位）。试想这样两个数：</p><p>$$<br>x &#x3D; 1.011 \times 2^{-1}<br>$$</p><p>$$<br>y &#x3D; 1.001 \times 2^{-1}<br>$$</p><p>$$<br>x - y &#x3D; 0.0010 \times 2^{-1} &#x3D; 1.000 \times 2^{-3} &#x3D; 0<br>$$</p><p>注意到明明 $x \neq y$，但二者相减后却为 0。这对于一些除法程序很不友好：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (x != y) &#123;</span><br><span class="line">    z = a / (x - y); <span class="comment">// division by zero</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过如果有渐进下溢的存在，可以用非规格化数表示 $x - y$ 的结果：</p><p>$$<br>x - y &#x3D; 0.0010 \times 2^{-1} &#x3D; 0.100 \times 2^{-2} \neq 0<br>$$</p><p>问题解决。</p>]]></content>
      
      
      <categories>
          
          <category> 计组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>主定理应试策略</title>
      <link href="//2025/03/master-theorem/"/>
      <url>//2025/03/master-theorem/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>主定理是用来分析递归算法复杂度的高效工具。不深究原理，只应试，下面给出应试策略。</p><h2 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h2><p>主定理形如：</p><p>$$<br>T(n) &#x3D; aT(\frac{n}{b}) + f(n)<br>$$</p><p>主定理的核心是比较，到底递归到叶子结点的每个基本操作 ($log_b{a}$) 增长更快，还是减小问题规模 ($f(n)$) 的过程增长更快。</p><p>根据二者复杂度的强弱关系，分成三种情况：</p><ol><li><p>基本操作增长(严格)更快, 则最终 $T(n) \in \Theta(n^{log_b{a}})$;</p></li><li><p>降低规模增长(严格)更快, 则最终 $T(n) \in \Theta(f(n))$, 但是需要满足一些条件, 否则进入情形 3;</p></li><li><p>二者速度相当, 则最终 $T(n) \in \Theta(n^{log_b{a}}log^{\varepsilon+1}{n})$, 注意有个 $+1$ 的存在.</p></li></ol><p>其中第 2 点不能一步来判别，还需要验证一个式子 $af(\frac{n}{b}) \leq cf(n)$（即递归调用的贡献足够小）</p><p>不过没关系，既然分成了三个 case，不妨用排除法，把剩下两种可能都排除掉，就只剩下第 2 种了。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>看几个例子。</p><h3 id="维基百科"><a href="#维基百科" class="headerlink" title="维基百科"></a>维基百科</h3><p>先是<a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E5%AE%9A%E7%90%86">维基百科</a>上的。</p><h4 id="例-1-1"><a href="#例-1-1" class="headerlink" title="例 1 - 1"></a>例 1 - 1</h4><p>$$<br>T(n) &#x3D; T(n&#x2F;2) + \Theta(1)<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{1} &#x3D; 0$，所以基本操作是 $O(1)$ 的复杂度。而 $f(n)$ 也是 $O(1)$(不要被 $\Theta$ 吓到，$O$ 是更弱的 $\Theta$，只有上界)。</p><p>速度相当，取 $\varepsilon &#x3D; 0$ 即可，s.t. $f(n) \in \Theta(n^{log_b{a}}log^{\varepsilon}n)$则 $T(n) &#x3D; \Theta(logn)$。</p><h4 id="例-1-2"><a href="#例-1-2" class="headerlink" title="例 1 - 2"></a>例 1 - 2</h4><p>$$<br>T(n) &#x3D; 2T(n&#x2F;2) + \Theta(1)<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{2} &#x3D; 1$，所以基本操作是 $O(n)$ 的复杂度。而 $f(n)$ 是 $O(1)$。</p><p>基本操作更快，是情形 1，直接 $T(n) &#x3D; \Theta(n)$。</p><h4 id="例-1-3"><a href="#例-1-3" class="headerlink" title="例 1 - 3"></a>例 1 - 3</h4><p>$$<br>T(n) &#x3D; 2T(n&#x2F;2) + O(logn)<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{2} &#x3D; 1$，所以基本操作是 $O(n)$ 的复杂度。而 $f(n)$ 是 $O(logn)$。</p><p>基本操作快，是情形 1，直接 $T(n) &#x3D; \Theta(n)$。</p><h4 id="例-1-4"><a href="#例-1-4" class="headerlink" title="例 1 - 4"></a>例 1 - 4</h4><p>$$<br>T(n) &#x3D; 2T(n&#x2F;2) + \Theta(n)<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{2} &#x3D; 1$，所以基本操作是 $O(n)$ 的复杂度。而 $f(n)$ 是 $O(n)$。</p><p>速度相当，$f(n) \in \Theta(n^{1}log^{0}n)$，则 $T(n) &#x3D; \Theta(nlogn)$。</p><h3 id="OI-WIKI"><a href="#OI-WIKI" class="headerlink" title="OI-WIKI"></a>OI-WIKI</h3><p>再看 <a href="https://oi-wiki.org/basic/complexity/#%E4%B8%BB%E5%AE%9A%E7%90%86-master-theorem">OI-WIKI</a> 的几个例子。</p><h4 id="例-2-1"><a href="#例-2-1" class="headerlink" title="例 2 - 1"></a>例 2 - 1</h4><p>$$<br>T(n) &#x3D; T(n&#x2F;2) + n<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{1} &#x3D; 0$，所以基本操作是 $O(1)$ 的复杂度。而 $f(n)$ 是 $O(n)$。</p><p>f(n) 更慢，要先排除情形 1。然后，情形三能满足吗？</p><p>$$<br>f(n) \in \Theta(n^{0}log^{\varepsilon}n)?<br>$$</p><p>没有这样的 $\varepsilon$，所以情形 3 不满足，只有可能是 2。</p><p>所以 $T(n) &#x3D; \Theta(f(n)) &#x3D; \Theta(n)$</p><h4 id="例-2-2"><a href="#例-2-2" class="headerlink" title="例 2 - 2"></a>例 2 - 2</h4><p>$$<br>T(n) &#x3D; T(n&#x2F;2) + logn<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{1} &#x3D; 0$，所以基本操作是 $O(1)$ 的复杂度。而 $f(n)$ 是 $O(logn)$。</p><p>f(n) 更慢，要先排除情形 1。然后，情形三能满足吗？</p><p>$$<br>f(n) \in \Theta(n^{0}log^{\varepsilon}n)?<br>$$</p><p>可以的，$\varepsilon &#x3D; 1$ 即可，所以 $T(n) &#x3D; \Theta(log^{2}n)$</p><h3 id="随堂小测"><a href="#随堂小测" class="headerlink" title="随堂小测"></a>随堂小测</h3><p>再看课堂上的随堂测试题。</p><h4 id="例-3-1"><a href="#例-3-1" class="headerlink" title="例 3 - 1"></a>例 3 - 1</h4><p>$$<br>T(n) &#x3D; 9T(n&#x2F;3) + n<br>$$</p><p>注意到 $log_b{a} &#x3D; log_3{9} &#x3D; 2$，所以基本操作是 $O(n^2)$ 的复杂度。而 $f(n)$ 是 $O(n)$。</p><p>基本操作慢，所以直接 $T(n) &#x3D; \Theta(n^2)$</p><h4 id="例-3-2"><a href="#例-3-2" class="headerlink" title="例 3 - 2"></a>例 3 - 2</h4><p>$$<br>T(n) &#x3D; T(2n&#x2F;3) + 1<br>$$</p><p>注意到 $log_b{a} &#x3D; log_1.5{1} &#x3D; 0$，所以基本操作是 $O(1)$ 的复杂度。而 $f(n)$ 是 $O(1)$。</p><p>速度相当，所以直接情形 3：$T(n) &#x3D; \Theta(logn)$</p><h4 id="例-3-3"><a href="#例-3-3" class="headerlink" title="例 3 - 3"></a>例 3 - 3</h4><p>$$<br>T(n) &#x3D; 3T(n&#x2F;4) + nlogn<br>$$</p><p>注意到 $log_b{a} &#x3D; log_4{3} \approx 0.792$，所以基本操作是 $O(n^{0.792})$ 的复杂度。而 $f(n)$ 是 $O(nlogn)$。</p><p>f(n) 更慢，要先排除情形 1。然后，情形 3 能满足吗？</p><p>$$<br>f(n) \in \Theta(n^{0.792}log^{\varepsilon}n)?<br>$$</p><p>不太行，所以情形 2，$T(n) &#x3D; \Theta(nlogn)$</p><h4 id="例-3-4"><a href="#例-3-4" class="headerlink" title="例 3 - 4"></a>例 3 - 4</h4><p>$$<br>T(n) &#x3D; 2T(n&#x2F;2) + nlogn<br>$$</p><p>注意到 $log_b{a} &#x3D; log_2{2} &#x3D; 1$，所以基本操作是 $O(n)$ 的复杂度。而 $f(n)$ 是 $O(nlogn)$。</p><p>而 $O(nlogn)$ 比 $O(n)$ 慢，也就是 $f(n)$ 更慢，看看情形 3 满足吗？</p><p>$$<br>f(n) \in \Theta(n^{1}log^{\varepsilon}n)?<br>$$</p><p>可以的，$\varepsilon &#x3D; 1$ 即可，所以 $T(n) &#x3D; \Theta(nlog^{2}n)$</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>总结了一些应试技巧，应该能覆盖所有的题目了，目前还没找到 bug。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 重装系统到 Windows</title>
      <link href="//2025/03/ubunntu-to-windows/"/>
      <url>//2025/03/ubunntu-to-windows/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>Ubuntu 作为日常的系统还是不习惯，比如在文件的操作上、在软件生态上，以及 Windows Hello 等认证方式上。因此，要把一台装了 Ubuntu 系统的机器重装回 Windows 11。</p><p>系统版本：Ubuntu 24.04 LTS<br>机器型号：Lenovo X390 Yoga</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>下载 Windows 11 镜像(.iso)，不妨从 <code>software.tongji.edu.cn</code> 上下载</p></li><li><p>准备一个容量 <code>&gt;= 8GB</code> 的 U 盘，准备制作 Bootable Device</p></li><li><p>下载 Rufus，插入准备好的 U 盘，启动应用。在应用中，选择 U 盘作为介质，选择下载好的 <code>.iso</code> 作为镜像文件，剩下的设置基本不用变，开始制作 Bootable Device</p></li><li><p>打开要重装系统的机器，中断正常启动，即按下 <code>Enter</code>，进入 <code>BIOS</code> 设置</p></li><li><p>设置启用 UEFI。如果无法启动，根据提示关闭 <code>Secure Boot</code> 和 <code>Kernel DMA protection</code>，应该是在 <code>Secure</code> 面板下</p></li><li><p>保存设置，重新启动。插入 U 盘，仍然按下 Enter 中断正常启动，只不过这里选择 “从哪里启动”，选择插入的 U 盘名</p></li><li><p>进入到安装步骤，选好了语言等基础设置，都是一些自动化过程了，结束</p></li></ol><h2 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h2><ul><li>Office</li><li>Adobe Acrobat Pro</li><li>Everything</li><li>Clash Verge Rev</li><li>MotionPro</li><li>Chrome</li><li>Firefox</li><li>Aliyun Drive</li><li>BaiduYun</li><li>Nutstore</li><li>Xournal++</li><li>f.lux</li><li>Tencent Meeting</li><li>Wechat</li><li>QQ</li><li>OBS</li><li>Zotero</li></ul><p>…</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CS50AI - 第 0 章 - 搜索</title>
      <link href="//2025/02/cs50ai-chap0/"/>
      <url>//2025/02/cs50ai-chap0/</url>
      
        <content type="html"><![CDATA[<h2 id="0-序"><a href="#0-序" class="headerlink" title="0. 序"></a>0. 序</h2><p>搜索是人工智能领域很重要的内容，例如如何导航到目标地点，如何在游戏中获得胜利等等，都需要进行最优方法的选择。哈佛大学的 <a href="https://cs50.harvard.edu/ai/2024/">CS50 AI</a> 课程把它作为了课程的第一课。听完后醍醐灌顶，赶紧趁热写一篇文章，把大意整理下来，供未来自己复习。</p><h2 id="1-单机游戏"><a href="#1-单机游戏" class="headerlink" title="1. 单机游戏"></a>1. 单机游戏</h2><h3 id="1-1-一般的搜索"><a href="#1-1-一般的搜索" class="headerlink" title="1.1 一般的搜索"></a>1.1 一般的搜索</h3><p>给定一张有向图，从某个节点寻找前往另一个节点的道路，这很简单。关键在于维护一个 <code>Frontier</code> 列表，然后重复进行如下的操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 如果 `Frontier` 列表为空</span><br><span class="line">    * 则中止，无解。</span><br><span class="line">2. 从中选取一个结点，作为要考虑的结点。</span><br><span class="line">3. 如果这个结点就是目标</span><br><span class="line">    * 则返回解，停止。</span><br><span class="line">4. 否则，考察这个结点的邻居，把邻居添加到 `Frontier` 中</span><br></pre></td></tr></table></figure><p>当然这样的选取有一些问题，不妨考虑这样的一个有向图，其中 A、B 两个结点之间有双向的箭头。把 A 作为起点。</p><p>这样的问题是，<code>Frontier</code> 中一开始只有 A，A 不是终点，所以考虑和 A 连接的节点，假设只有 B，所以把 B 放到 <code>Frontier</code> 中。现在从 <code>Frontier</code> 中取 B，B 也不是终点，考虑 B 能连接的节点，假如有 A 和 C。那么 A 和 C 加入到 <code>Frontier</code> 中，下一次再考虑 A。如此反复，就进入了一个死循环。</p><p>因此，在第 4 步需要增加一个判断：只有没有访问过、并且不在 <code>Frontier</code> 中已经出现的节点，才会添加到 <code>Frontier</code> 中。这样就避免了回环的问题。这，就是最基础的搜索。</p><blockquote><p>我学到这里最深切的感受是，总算明白为什么 <code>Dijkstra</code>、<code>Kruskal</code> 等算法一开始的时候要把初始数组设置为只包含起点了，因为这个维护的数组表示的是可以访问到的节点，而一开始，只有起点可以访问到。</p></blockquote><p>前面的搜索的伪算法，并不能算是一个很好的算法，因为它在一个语句上表述得并不具有确定性，也就是 <strong>选取</strong> 二字。怎么选？这就引出了两种不同的搜索算法：深度优先搜索和广度优先搜索。</p><p>下面的算法都以迷宫作为背景。</p><h3 id="1-2-DFS"><a href="#1-2-DFS" class="headerlink" title="1.2. DFS"></a>1.2. DFS</h3><p>深度优先搜索对于 <code>Frontier</code> 的维护采用栈来作为数据结构，Last In, First Out。直观造成的效果就是一条道走到黑，只有走到死胡同才会回头。而且这回头不简单——好像回到了存档点一样，从最近的分岔路口再次开始，选择另一条道路，再一次地走到黑。这就体现出栈这一数据结构具有保存现场的作用啦！</p><p>深度优先搜索的好处是，在起止点相距较远的情景下，占用更小的内存，就能找到可行解。但不足是，它并不能确保每次找到的解是距离最短的最优解。</p><h3 id="1-3-BFS"><a href="#1-3-BFS" class="headerlink" title="1.3. BFS"></a>1.3. BFS</h3><p>广度优先搜索和深度优先搜索唯一的区别就在于 <code>Frontier</code> 的维护，BFS 采用队列作为数据结构，First In, First Out。达成的效果是一种层次遍历，就像古诗说的：</p><blockquote><p>泻水置平地，各自东西南北流。</p></blockquote><p>BFS 就像在起点洒了一桶水，水在到达终点之前，会蔓延到所有与起点距离小于等于起止点距离的格子。但这样有个好处，就是可以确保找到的是最优解。证明也很简单，不妨用反证法。假如存在一条路径，使得起止点之间的距离更短，那么根据 BFS 的原理，这条路径应该早就被蔓延到了。</p><p>不过 BFS 当然也有缺点，那就是需要的内存比较多，它需要多线程般探寻多条路径，才能得到最终的结果。如果起止点的距离相距太远，甚至会搜索完整个迷宫空间。</p><h3 id="1-4-贪心”最佳优先”搜索"><a href="#1-4-贪心”最佳优先”搜索" class="headerlink" title="1.4. 贪心”最佳优先”搜索"></a>1.4. 贪心”最佳优先”搜索</h3><p>之前讲的 BFS 和 DFS 都是无信息检索，也及时没有用到具体问题的背景知识，所以显得没那么智慧。怎样就能更智慧了呢？比如让人类来走迷宫，给他一张纸，左下角是起点，右上角是终点。人直觉地在面对岔路口时，就会选择向右的、向上的，因为在不考虑墙的前提下，确实离终点越来越近了。这就是一种贪心算法。</p><p>在岔路口面临抉择的时候，到底怎么选？BFS 和 DFS 并没有给出选择的不同，所以这样随机的选择往往会走不少低智商的弯路。有人说啊，那不是一个从前面 pop，一个从后面 pop 吗？但这只是指定了退出的顺序，没有指定进入的顺序呀。比如列表里有 ABC，你说，用栈的话就是 CBA，用队列就是 ABC，确实是这样。但并没有保证每次进入的时候都是 ABC 啊，进入的顺序还是随机的，可能下次就是 BCA，CAB 了。这样的话，最终选择还是随机的。</p><p>而贪心算法则不一样，对每种选择，通过启发函数得到一个值，在迷宫的问题背景下就是下一个格子和终点之间的曼哈顿距离（曼哈顿距离就是只能横平竖直地走，不能走对角线），最后选取距离小的。这样就能和前面的两种搜索找出不同了——不管程序运行多少次，选择的路径肯定是一样的，没有半点随机因素，小就是小，大就是大。</p><h3 id="1-5-A-搜索"><a href="#1-5-A-搜索" class="headerlink" title="1.5. A* 搜索"></a>1.5. A* 搜索</h3><p>但是贪心算法也不一定是最优解，因为它眼光是狭窄的，未能远谋。在一个分岔路口，一边是 19，一边是 18，它就选择了 18。它哪里知道，19 是山坡的最高峰，再往后一马平川；又哪里知道 18 后面还要面临重峦叠嶂、蜿蜒曲折的山路呢？所以最终要表达的就是，如果在树林中有两条路，在当时的条件下选了 18，最后走的路可能比 19 多得多。</p><p>这样岂不是太傻了？除了曼哈顿距离之外，还有什么指标可以修正呢？啊，距离，距离！我通过 18 这个路口，走了 200 步才到了曼哈顿距离是 5 的格子；我通过 19 这个路口，再走14 步就到了距离为 5 的格子。这样看来，不仅要考虑启发函数的值，还要考虑得到这个值的代价！就好像参加 ICPC 拿到金奖就能在保研上获得很大优势一样，如果花了很大力气才能得金奖，不如中途停下来思考一下，当前距离目标的远近和自己已经付出的代价，如果发现不值当，不如马上切换到另一条路线。所以在 A* 搜索中，代价（这里是走的步数）+ 启发函数值的和才作为选择的判据。</p><p>这个方法很巧妙，比如就走迷宫这个例子，如果距离目标越来越近，代价 + 启发函数值是不变的，步数多了一个，后者少了一个，总和不变。然而若是稍微走了一点回头路，总和会 +2、+2、+2 进行下去，很快就会超过岔路口的另一个选择（如果二者差别并不悬殊的话）。</p><h2 id="2-对弈"><a href="#2-对弈" class="headerlink" title="2. 对弈"></a>2. 对弈</h2><h3 id="2-1-Minimax"><a href="#2-1-Minimax" class="headerlink" title="2.1 Minimax"></a>2.1 Minimax</h3><p>前面的搜索算法都是一个人的奋斗，但是在生活中，你方唱罢我登场的场面比比皆是，不仅要考虑自己的水平，还要衡量对方的能力，更有甚者，还得零和博弈。</p><p>这里以双方的竞争为例，让自己获胜，等价于让别人失败。对方呢，也是这样想的。人类知道获胜、失败的具体含义，但机器可不知道，怎样量化胜负这件事儿呢？不妨用数字啦！</p><p>对弈的双方，一方想让数字升高，另一方想让数字降低，如同拔河一般的拉锯战。Minimax 就是这样一种算法，一方要 minimize outcome，而另一方要 maximize it。至于说怎样得到所谓的最大值和最小值，其实是一种递归的思路。不妨以想要让结果变大的一方为例。</p><ol><li><p>现在摆在它面前的是一场残局，轮到他走下一步。到底落子何处？有许多选择，这些选择分叉出来。</p></li><li><p>不管他选择哪种，现在的主动权到了对方手中。</p></li><li><p>对方想让数值尽可能的小，所以也要面对同样的思考方式。到底落子何处呢？又有许多选择，但不管哪种，现在又轮到结果变大的一方来落子了。</p></li><li><p>就这样循环往复，递归下去，直到最后分出胜负。这里我们只考虑相邻的两层，按照递归的经典分析方法。现在我们回到第 2 步，主动权到了变小的一方。假设这里可以得出棋局的最终值，分别是，6，5，4，7，2。那么，变大的一方就知道了，哦，我现在面临五种选择，分别让结果变大的个数是这些，我肯定选择更大的，所以选择了 7。因为这种选择是建立在对方下的是最优解的基础上的，所以，如果他选择了 4 甚至是 2，对方就会顺着这条路走下去，达到让结果变小的目的，这样是不好的。</p></li></ol><p>不过这样有个问题，对于井字棋游戏这种规模小的游戏还好说，对于国际象棋、围棋那种对弈，层层递归下去，要大量的内存，花费时间多不说，还很有可能爆栈，能不能稍微减少点运算量呢？</p><h3 id="2-2-α-β-剪枝"><a href="#2-2-α-β-剪枝" class="headerlink" title="2.2 α-β 剪枝"></a>2.2 α-β 剪枝</h3><p>看这张图：</p><p><img src="https://cs50.harvard.edu/ai/2024/notes/0/alphabeta.png" alt="a-b(ref:https:&#x2F;&#x2F;cs50.harvard.edu&#x2F;ai&#x2F;2024&#x2F;notes&#x2F;0&#x2F;)"></p><p>现在最顶层的绿色想尽可能增大结果，不过在分析它的值之前，按递归的思路，先得看看底层的数值。第一个分支，选择最小的 4。第二个分支，走到第二步就知道，红色肯定 &lt;&#x3D; 3 了，也就是红色削弱数值增加的能力最弱也是 3，和第一个分支中，最强的削弱能力是 4 相比，不用考虑了。后面的 2 也是同理，看到第一个，就不用往后看了。这样的话，就可以减少大量的递归运算，层次越高，越有效。换句话说，就是预测到了这个分支顶天也就这种能力了，不如已经备选的分支，所以可以及时止损。</p><h3 id="2-3-深度限制的-Minimax"><a href="#2-3-深度限制的-Minimax" class="headerlink" title="2.3 深度限制的 Minimax"></a>2.3 深度限制的 Minimax</h3><p>你可能觉得，现在这种优化还是不够过瘾，因为毕竟在更复杂的游戏中，很难递归到终局的局面。所以有的时候，对递归的层数有限制，到了最深层后，通过另一个函数对残局进行评价，比如谁剩子多等指标来评判出谁占优势，从而生成一个值。这个相对没那么精确的值，就是上一层筛选的指标了。</p><h2 id="3-结语"><a href="#3-结语" class="headerlink" title="3. 结语"></a>3. 结语</h2><p>以上就是有关搜索的全部内容，听起来很爽，也让我想到了人生中的一些抉择。当时学离散的第一课，老师就说，不知道同学们是不是已经接触过贪心算法了，贪心算法，有的时候不一定就是最好的。</p><p>是呀，竞赛？科研？甚至我有个朋友为了保研名额，在大一下的那个岔路口选择了去保研率更高的专业班型，他的选择是离终点更近的吗？我选择留在现在的专业，就保研来说，是最优解吗？</p><p>到底该用什么算法来走这一遭呢？</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>哆啦校圈 API 分析</title>
      <link href="//2025/02/crawl-dola-xiaoquan/"/>
      <url>//2025/02/crawl-dola-xiaoquan/</url>
      
        <content type="html"><![CDATA[<blockquote><p>免责声明：本文仅供技术研究和学习交流之用。请勿将文中所述技术用于非法用途，作者不对任何滥用行为承担责任。</p></blockquote><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p><a href="https://www.dolacc.com/">哆啦校圈</a>是一个同济学生比较活跃的校内交流平台，然而里面鱼龙混杂，时不时乌烟瘴气。对获取校内资讯造成了很大障碍。目前来看，有一个恶心的问题，便是拉黑系统。</p><p>拉黑操作是这样的，找到一个帖子，点击发帖人的头像。如果发帖人是非匿名发帖，则出现一个拉黑按钮，点击后便可以把对方拉黑 <strong>1个月</strong>。</p><p><img src="https://static.xialing.icu/img/202502081552154.webp" alt="短暂的分别"></p><p>如果是匿名发帖，您还真就拿对方没办法了，因为如上操作对匿名发帖无效，并不会有拉黑按钮的出现。那么就只能看着对方宣泄情绪、带节奏而无可奈何。</p><blockquote><p>这样不好！</p></blockquote><p>因此，本文章要完成的主要任务是提供一些背景知识，使得如下目的<strong>能够</strong><del>但不一定便捷</del>实现：</p><ol><li>得以拉黑匿名发帖;</li><li>实现永久拉黑</li></ol><p>我们的美好期望能够实现吗？可能会遇到一些问题吧？比如说，如果定位不到匿名发帖人，怎么办？如果拉黑了发帖人，只能屏蔽正常发帖，仍然无法屏蔽匿名发帖，怎么办…</p><p>谢谢这个草台班子一样的世界，这些问题都能够得到攻克。</p><h2 id="太长不看版"><a href="#太长不看版" class="headerlink" title="太长不看版"></a>太长不看版</h2><h3 id="问题-1-的初步解决"><a href="#问题-1-的初步解决" class="headerlink" title="问题 1 的初步解决"></a>问题 1 的初步解决</h3><p>注意到在帖子详情页，如果在发帖人部分出现了 <code>关注</code> 按钮，点击关注，然后在 <code>我的</code> -&gt; <code>设置</code> -&gt; <code>关注列表</code> 就可以查看没有马甲的页面，从而可以进行拉黑。</p><p><img src="https://static.xialing.icu/img/202502082138039.webp" alt="有关注按钮"></p><p>但是如果用户本身关闭了主页开放，这个按钮不会出现。这时候就只好抓包了，那就请看后面的内容（<code>## 主观评价 =&gt; ### 问题 1 的最终解决</code>）。</p><p><img src="https://static.xialing.icu/img/202502082137983.webp" alt="无关注按钮"></p><p>总结一下，匿名 &#x2F; 不匿名；主页开放 &#x2F; 主页不开放 组成了四个状态，其中</p><table><thead><tr><th>发帖状态</th><th>主页状态</th><th>是否可查看用户信息</th><th>拉黑按钮</th><th>关注状态</th></tr></thead><tbody><tr><td>不匿名</td><td>开放</td><td>是</td><td>有</td><td>可关注</td></tr><tr><td>不匿名</td><td>不开放</td><td>否</td><td>有</td><td>无法关注</td></tr><tr><td>匿名</td><td>开放</td><td>否</td><td>无</td><td>可关注，然后拉黑</td></tr><tr><td>匿名</td><td>不开放</td><td>否</td><td>无</td><td>无法关注</td></tr></tbody></table><p>前三种隐私的设置情况，可以通过图形界面的迂回方案来解决，而第四种必须抓包。</p><h3 id="问题-2-的解决"><a href="#问题-2-的解决" class="headerlink" title="问题 2 的解决"></a>问题 2 的解决</h3><p>注意到在 <code>我的</code> -&gt; <code>设置</code> -&gt; <code>黑名单</code> 中可以查看到所有被拉黑的用户，就算拉黑的 1 个月期限过了，也只是解除拉黑，但拉黑记录还在，很方便就可以进行反复拉黑，结合后面提到的 API，可以进行自动化操作。</p><h2 id="软件与环境"><a href="#软件与环境" class="headerlink" title="软件与环境"></a>软件与环境</h2><ul><li>Windows 11 专业版 24H2</li><li>微信电脑版 3.9.12.37</li><li>校圈</li><li>Charles v4.6.7</li><li>Postman 11.31.1</li></ul><h2 id="熟悉接口…之前"><a href="#熟悉接口…之前" class="headerlink" title="熟悉接口…之前"></a>熟悉接口…之前</h2><p>在介绍接口之前，得讲讲校圈的特殊性。</p><p>因为校圈是<code>微信小程序-only</code>，因此抓取接口比纯粹的<a href="https://zhuanlan.zhihu.com/p/20444463611">网页内容</a>要多一步，便是进行抓包。</p><h2 id="使用-Charles-来抓包"><a href="#使用-Charles-来抓包" class="headerlink" title="使用 Charles 来抓包"></a>使用 <code>Charles</code> 来抓包</h2><p><code>Charles</code> 的<a href="https://www.charlesproxy.com/">官网</a>如下描述它的功能：</p><blockquote><p>Charles is an HTTP proxy &#x2F; HTTP monitor &#x2F; Reverse Proxy that enables a developer to view all of the HTTP and SSL &#x2F; HTTPS traffic between their machine and the Internet. This includes requests, responses and the HTTP headers (which contain the cookies and caching information).</p></blockquote><p>简而言之，是充当了中间人角色来监听本机的所有流量请求。</p><p>它的配置，网络上有不少帖子表述得很清楚了：</p><p>如这篇 <code>CSDN</code> 上的<a href="https://blog.csdn.net/HeyShHeyou/article/details/90045204">文章</a>。</p><p>这里要补充说明的是，PC 的配置按帖子中的描述就可以了，而移动端的配置略微复杂一些。</p><h3 id="移动端的配置——没必要"><a href="#移动端的配置——没必要" class="headerlink" title="移动端的配置——没必要"></a>移动端的配置——没必要</h3><ul><li>问题一：为什么要配置证书？按 ChatGPT 的解释：</li></ul><blockquote><p>当我们使用 Charles 或其他类似的抓包工具时，Charles 需要在客户端和服务器之间充当一个中间人，也就是中间人攻击（MITM，Man-in-the-Middle）的方式来解密和查看 HTTPS 的通信内容。这就要求 Charles 拿到传输过程中加密数据的明文内容。</p><p>没有证书的情况下：</p><p>当你没有安装 Charles 生成的证书 时，浏览器（或任何其他客户端，如微信小程序）会在访问 HTTPS 链接时，发现其证书是 <strong>由 Charles 代理生成的</strong>，而<strong>不是</strong>由一个<strong>受信任</strong>的证书颁发机构（CA）颁发的。<br>浏览器会认为这是一个不安全的链接，因为它无法验证该证书的合法性，通常会显示 “您的连接不是私密连接” 或类似的警告信息。</p></blockquote><p>这里举一个例子，例如如果在没有打开 <code>Charles</code>的情况下，访问 <code>www.baidu.com</code>，证书颁发者的公用名是 <code>GlobalSign RSA OV SSL CA 2018</code>，而如果打开了 <code>Charles</code>，并且要代理 <code>HTTPS</code> 的请求时，就会发现颁发者的公用名为 <code>Charles Proxy CA (7 Feb 2025, XIALING)</code>。接下来会发生的事情，AI 已经解释得很清晰了，不再赘述。</p><ul><li>问题二：为什么要配置移动端的证书？</li></ul><p>简而言之，因为微信小程序在手机上运行啊！</p><p>思考几秒钟，我们突然想到：</p><blockquote><p>谁说微信小程序一定要在手机上运行啊？电脑版微信不是也有小程序吗？</p></blockquote><p>此言得之。因此，配置移动端的证书不是必要的！</p><p>不过，如果要配置的话，in case you need it，有以下几个问题是我遇到过的：</p><ol><li><p>证书的安装<br>使用常见网络教程提供的 <code>chls.pro/ssl</code> 无法下载证书，返回的内容为空，chrome 浏览器的提示是：<code>chls.pro 未发送任何数据</code>，需要切换到 <code>www.charlesproxy.com/getssl</code>才能下载证书。</p></li><li><p>只能抓包浏览器应用，其他 APP 不可以<br>问题的原因，<a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">官网</a>已经解释的很清晰了，在 <code>Android</code> section 是这样说的：</p></li></ol><blockquote><p>As of Android N, you need to add configuration to your app in order to have it trust the SSL certificates generated by Charles SSL Proxying. <strong>This means that you can only use SSL Proxying with apps that you control.</strong></p></blockquote><p>我们只能代理我们控制的 APP，而微信是腾讯控制的，因此无法实现代理。不过有的解决方案提出，手机 ROOT 后经过一些设置就能够实现。我想想，太麻烦了，因此放弃，感兴趣的读者可以自行探索。</p><h3 id="PC-的设置"><a href="#PC-的设置" class="headerlink" title="PC 的设置"></a>PC 的设置</h3><p>安装好了软件，<strong>配置好了证书</strong>（参见上方 CSDN 的链接），时间来到抓包之前，现在要设置如下几个事项。</p><p>在 <code>Proxy</code> 页签中设置 <code>Start Recoding</code> 和 <code>Start SSL Proxying</code>，懒得翻导航栏的话，快捷按钮是下图的两个：</p><p><img src="https://static.xialing.icu/img/202502081540367.webp" alt="快捷按钮"></p><p>此外，在 <code>Proxy</code> &gt; <code>SSL Proxying Settings...</code> &gt; <code>Include下的(Add)</code> 中添加个通配符，懒人设置，代理所有连接。具体见下图：</p><p><img src="https://static.xialing.icu/img/202502081546521.webp" alt="代理设置"></p><p>如果这样设置后，打开一些网络页面，左侧监听列表仍为空白，看看是不是在 <code>Proxy</code> 菜单勾选了 <code>Windows Proxy</code> 或者 <code>macOS Proxy</code>（上图的对应位置是<code>√</code>）。如果电脑上运行了不止一个代理软件的话，可以尝试关闭其他代理后，<strong>重启 <code>Charles</code></strong>。仅仅关闭某小猫是不行的，重启 <code>Charles</code> 后才好。</p><h3 id="几个接口"><a href="#几个接口" class="headerlink" title="几个接口"></a>几个接口</h3><p>可以右键感兴趣的链接，选择 <code>Focus</code>，这样就会把我们感兴趣的链接单独划分出来，剩下的其他链接归为一类（Other Hosts）。</p><p><img src="https://static.xialing.icu/img/202502081605083.webp" alt="Focus"></p><p>这些接口都需要登录才能访问，不过认证方法也很简单。在请求头的 <code>token</code> 字段中，把值复制一下就可以了。值应该是长时间不变的。</p><p>我们发现，在浏览校圈时，有这样几个非平凡的接口，在这些非平凡的接口中更非平凡的，将用 <code>※</code> 标注出来。</p><h4 id="获取最近发布的帖子列表"><a href="#获取最近发布的帖子列表" class="headerlink" title="获取最近发布的帖子列表"></a>获取最近发布的帖子列表</h4><p>接口：<code>https://cdn.dolacc.com</code> + <code>/api/Wxpostv2/getPostsCdnpw</code></p><p>方法：<code>GET</code></p><p>Query String:</p><table><thead><tr><th>Parameter</th><th>Value</th></tr></thead><tbody><tr><td>toId</td><td>0</td></tr><tr><td>scId</td><td>24</td></tr><tr><td>pageSize</td><td>10</td></tr><tr><td>lastindex</td><td>-1</td></tr><tr><td>keyword</td><td></td></tr><tr><td>freshKey</td><td>23333</td></tr></tbody></table><p>这几个参数中：</p><p><code>scId</code> 有用，<code>sc</code> 可能是 <em>School Circle</em> 的意思吧？24 表示同济大学的校圈编号；</p><p>lastIndex 也有用，表示的是上一次请求的最早时间的帖子。例如，下面返回格式中，<code>data.posts[9].id</code> 如果是 <code>23333</code>，那么在下一次请求的时候，这个值就会是 <code>23333</code>。</p><p>pageSize 没用，默认是 10，但是修改为其他大小，也不会返回更多内容。</p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739002893&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;posts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 存放了 10 个帖子</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2071591</span><span class="punctuation">,</span>  <span class="comment">// 帖子 id</span></span><br><span class="line">                <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span> <span class="comment">// 发布帖子的用户的 id</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Q8lcO9y19WMqZAZ+1J3nr3rd+HMxixc93iGMHg78C8SndvS2/AWNDpkkYk3F5+YEJCS4RQwWGrBqw5h1XfyQSw==&quot;</span><span class="punctuation">,</span> <span class="comment">// 帖子内容，base64 编码，AES 加密，utf-8 格式</span></span><br><span class="line">                <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://ltadmin.rainsee.top/uploads/20241225/870d6c4f16612c88c6bf5e2d7f967ae7.jpg&quot;</span><span class="punctuation">,</span>  <span class="comment">// 帖子的附件图片</span></span><br><span class="line">                <span class="attr">&quot;myvideofiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;mymusicfiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;topic_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1734587521</span><span class="punctuation">,</span> <span class="comment">// 创建时间</span></span><br><span class="line">                <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1734587521</span><span class="punctuation">,</span> <span class="comment">// 更新时间</span></span><br><span class="line">                <span class="attr">&quot;pReviewStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="number">6601</span><span class="punctuation">,</span> <span class="comment">// xx人围观</span></span><br><span class="line">                <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span> <span class="comment">// 是否置顶</span></span><br><span class="line">                <span class="attr">&quot;user_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[400482]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;shorturl&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;zansum&quot;</span><span class="punctuation">:</span> <span class="number">41</span><span class="punctuation">,</span> <span class="comment">// 赞数和</span></span><br><span class="line">                <span class="attr">&quot;commentsum&quot;</span><span class="punctuation">:</span> <span class="number">273</span><span class="punctuation">,</span> <span class="comment">// 评论和</span></span><br><span class="line">                <span class="attr">&quot;jubaocount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;deleteuser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;topEndTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dlz_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span> <span class="comment">// 是否需要学生认证后才能查看</span></span><br><span class="line">                <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span> <span class="comment">// 是否匿名发言(马甲)</span></span><br><span class="line">                <span class="attr">&quot;adlevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;jinghua&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span>  <span class="comment">// 是否为精华</span></span><br><span class="line">                <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="string">&quot;校圈、吃瓜、同步群、需要、进、群&quot;</span><span class="punctuation">,</span> <span class="comment">// 关键词</span></span><br><span class="line">                <span class="attr">&quot;business_task_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;freshkey&quot;</span><span class="punctuation">:</span> <span class="number">356</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;business_plan_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;settleed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;risky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hotnews&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isfee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 发帖用户的信息</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">6</span><span class="punctuation">,</span> <span class="comment">// 用户 id</span></span><br><span class="line">                    <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;哆啦&quot;</span><span class="punctuation">,</span> <span class="comment">// 用户昵称</span></span><br><span class="line">                    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://static.rainsee.cn/bdd88202206151049061619.jpg?imageslim&quot;</span><span class="punctuation">,</span> <span class="comment">// 头像 url</span></span><br><span class="line">                    <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span> <span class="comment">// 等级</span></span><br><span class="line">                    <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 性别</span></span><br><span class="line">                    <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;eattip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;eatupdatetime&quot;</span><span class="punctuation">:</span> <span class="number">1649840402</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;dlzs&quot;</span><span class="punctuation">:</span> <span class="number">81888</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;verty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;xs_credit&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;xs_price&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;checktime&quot;</span><span class="punctuation">:</span> <span class="number">1728057600</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;school_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;remark&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;fire&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;fuqicount&quot;</span><span class="punctuation">:</span> <span class="number">513</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;likes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;951053,520636,1907893&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;ques&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;nohidepermission&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 略去 9 个</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;searchUse100&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="定期获取新帖子数量"><a href="#定期获取新帖子数量" class="headerlink" title="定期获取新帖子数量"></a>定期获取新帖子数量</h4><p>接口：<code>https://luntan.dolacc.com</code> + <code>/api/wxUser/countNewMessagev4</code></p><p>方法：<code>GET</code></p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739002045&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;needAuth&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;newMessageCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;todaytime&quot;</span><span class="punctuation">:</span> <span class="number">1738944000</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;newReadCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;addLikeCacheNum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;xuanshangArr&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="number">2244299</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>补充说明：15s 调用一次，非平凡的数据是 <code>data.newMessageCount</code>，这个数量统计的应该是最近一次请求 posts 后的新帖子数量。</p><h4 id="获取所有主题"><a href="#获取所有主题" class="headerlink" title="获取所有主题"></a>获取所有主题</h4><p>接口：<code>https://www.dolacc.cn</code> + <code>/api/wxPost/getAllTopic</code></p><p>方法：<code>GET</code></p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739006113&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;topics&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;投稿&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;求助&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;💧漫金山&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">24</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 略去几个</span></span><br><span class="line"></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="获取十大热帖"><a href="#获取十大热帖" class="headerlink" title="获取十大热帖"></a>获取十大热帖</h4><p>接口：<code>https://www.dolacc.cn</code> + <code>/api/wxPostv2/getTop10v3</code></p><p>方法：<code>GET</code></p><p>Query String:</p><table><thead><tr><th>Parameter</th><th>Value</th></tr></thead><tbody><tr><td>scid</td><td>24</td></tr></tbody></table><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739006113&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;top10&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">2569</span><span class="punctuation">,</span> <span class="comment">// xx围观</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2243410</span><span class="punctuation">,</span> <span class="comment">// 帖子 id</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;好冷冻得我想跳楼，上海是好地方😭&quot;</span><span class="punctuation">,</span> <span class="comment">// 帖子内容</span></span><br><span class="line">            <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/www.dolacc.cn\/imgs\/hot1.png?t=123&quot;</span> <span class="comment">// 热 | 爆</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">2530</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2243481</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;老天奶啊，我喜欢那种有点自卑感破碎感敏感的好看的小男生，但是，好看的人是不会这样的基本上，无解了&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/www.dolacc.cn\/imgs\/hot2.png?t=123&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">3679</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2244168</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;男朋友天天打游戏到凌晨，大三了四级还没过，催他学习无数遍就是不学。今天晚上好不容易跟我说看会教资的课，我还怕打扰他一直没发消息。过了好久给他打了个视频发现忙线中，结果和兄弟打语音聊游戏呢🤣🤣&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/www.dolacc.cn\/imgs\/hot3.png?t=123&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">3574</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2243314</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;总感觉身边的世界蛮割裂的……之前有同省的学长问我要不要一起去滑雪（报考的时候聊过几句，开学之后也没什么交流），后面直接跟我说如果我接受的话可以两个人拼一间房来省钱，我感觉自己接受程度已经蛮良好了还是被吓得连夜扛火车跑路\n今天来校圈一看，原来还有些男生觉得异性两个人吃顿饭就很暧昧了\n两极分化好严重&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/www.dolacc.cn\/imgs\/hot4.png?t=123&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">2032</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;post&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2243618</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;唐探1900好看不 跟唐探2或者3比&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http:\/\/www.dolacc.cn\/imgs\/hot5.png?t=123&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 略去 5 个 </span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;scId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;24&quot;</span><span class="punctuation">,</span> <span class="comment">// 校圈 id</span></span><br><span class="line">        <span class="attr">&quot;scName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同济校圈&quot;</span><span class="punctuation">,</span> <span class="comment">// 校圈名</span></span><br><span class="line">        <span class="attr">&quot;openAd&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;schoolInfo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同济大学&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;bindurl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;msgnum&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;老师评价选课指导\r\n#小程序:\/\/校圈\/tX9sDT2zjjhcVdK&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lastId&quot;</span><span class="punctuation">:</span> <span class="number">2244859</span><span class="punctuation">,</span> <span class="comment">// 最新的帖子</span></span><br><span class="line">            <span class="attr">&quot;simpName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同济校圈&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lastMateId&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;openswitch&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;openAd&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;adtrade&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;postAuth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commentAuth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;publichSm&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;h5link&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;homeSm&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;que&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;ptfee&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;qunqrcode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;system&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;nohidepermission&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;homemenu&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0,2,4,3,1,5,6&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;blackword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;校园跑,代课,dai做,代做&quot;</span><span class="punctuation">,</span> <span class="comment">// 黑名单词汇，这下知道为什么有一次我帖子发不出去了。老师代课也不行啊23333</span></span><br><span class="line">            <span class="attr">&quot;freshKey&quot;</span><span class="punctuation">:</span> <span class="number">29262</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;adBoxs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AI助手&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;desc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;免费好用&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;img&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https:\/\/luntanpic.yujianpay.com\/upload\/static\/static\/meta.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;class&quot;</span><span class="punctuation">:</span> <span class="string">&quot;meta&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 略去了 7 个</span></span><br><span class="line"></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cache&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="※获取帖子详情"><a href="#※获取帖子详情" class="headerlink" title="※获取帖子详情"></a>※获取帖子详情</h4><p>接口：<code>https://cdn.dolacc.com</code> + <code>/api/wxPostv2/visitPostCdnpw</code></p><p>方法：<code>GET</code></p><p>Query String:</p><table><thead><tr><th>Parameter</th><th>Value</th></tr></thead><tbody><tr><td>pId</td><td>2244815</td></tr><tr><td>nocache</td><td>-1</td></tr><tr><td>orderType</td><td>1</td></tr><tr><td>freshkey</td><td>3</td></tr></tbody></table><p>pId 是帖子的 id，非平凡。剩下的带不带都可以。</p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739008503&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cachename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;postmillv42244815&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postDtl&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2244815</span><span class="punctuation">,</span>  <span class="comment">// 帖子 id</span></span><br><span class="line">            <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span>  <span class="comment">// 发帖用户的 id</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;n0gKQU2McCfEXG2g17KqDQ==&quot;</span><span class="punctuation">,</span> <span class="comment">// 帖子内容，仍然是 base64 + AES 加密后的内容</span></span><br><span class="line">            <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myvideofiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;mymusicfiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic_id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="comment">// 话题 id，这里的话题是 #帮转</span></span><br><span class="line">            <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1739001708</span><span class="punctuation">,</span> <span class="comment">// 创建时间</span></span><br><span class="line">            <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1739001708075</span><span class="punctuation">,</span> <span class="comment">// 更新时间，毫秒级</span></span><br><span class="line">            <span class="attr">&quot;school_id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span> <span class="comment">// 学校校圈的 id</span></span><br><span class="line">            <span class="attr">&quot;pReviewStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="number">178</span><span class="punctuation">,</span> <span class="comment">// xx围观</span></span><br><span class="line">            <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewComment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referuser_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referstatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;shorturl&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zansum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 赞和</span></span><br><span class="line">            <span class="attr">&quot;commentsum&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span> <span class="comment">// 评论和</span></span><br><span class="line">            <span class="attr">&quot;jubaocount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deleteuser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topEndTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dlz_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span> <span class="comment">// 是否需要学生认证后才能观看，按理来说我应该不能看到这种帖子的详情，但是..</span></span><br><span class="line">            <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span> <span class="comment">// 是否为匿名</span></span><br><span class="line">            <span class="attr">&quot;adlevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jinghua&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_task_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;freshkey&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_plan_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;settleed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;risky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hotnews&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isfee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span> <span class="comment">// 用户 id，同上</span></span><br><span class="line">                <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;赵四&quot;</span><span class="punctuation">,</span> <span class="comment">// 用户昵称</span></span><br><span class="line">                <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://img2.woyaogexing.com/2022/11/01/2eedc496a2817541!400x400.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;scId&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;latepos&quot;</span><span class="punctuation">:</span> <span class="number">2244299</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;needread&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;admType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;normal&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;admUname&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;eattip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ques&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;nohidepermission&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 话题</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;帮转&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;school_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113&quot;</span><span class="punctuation">,</span> <span class="comment">// 哪些学校有这些话题</span></span><br><span class="line">                <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">6</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dunnum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 帖子下的评论</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">6958633</span><span class="punctuation">,</span> <span class="comment">// 评论 id</span></span><br><span class="line">                    <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="number">2244815</span><span class="punctuation">,</span> <span class="comment">// 帖子 id</span></span><br><span class="line">                    <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span> <span class="comment">// 发帖人 id</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;四平线下，二年级女孩，每周一三五晚上辅导作业（无需备课），每次1.5小时，100/h。要求女大学生。&quot;</span><span class="punctuation">,</span> <span class="comment">// 帖子正文，最近的行情如何呢...</span></span><br><span class="line">                    <span class="attr">&quot;zan&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 赞数</span></span><br><span class="line">                    <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1739001770</span><span class="punctuation">,</span> <span class="comment">// 发布时间</span></span><br><span class="line">                    <span class="attr">&quot;coStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span> <span class="comment">// 用户名</span></span><br><span class="line">                    <span class="attr">&quot;userimage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://img2.woyaogexing.com/2022/11/01/2eedc496a2817541!400x400.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user_gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;touser_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span> <span class="comment">// 回复给谁</span></span><br><span class="line">                    <span class="attr">&quot;comments_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;readc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;justown&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;candelete&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 是否匿名</span></span><br><span class="line">                    <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="comment">// 是否有楼中楼</span></span><br><span class="line">                    <span class="attr">&quot;iclick&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">6958636</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="number">2244815</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;有意➕v xxx&quot;</span><span class="punctuation">,</span> <span class="comment">// 这里的内容我应该看不见的，但是...(敏感信息已略去)</span></span><br><span class="line">                    <span class="attr">&quot;zan&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1739001806</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;coStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;userimage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://img2.woyaogexing.com/2022/11/01/2eedc496a2817541!400x400.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user_gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;touser_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;comments_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;readc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;justown&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;candelete&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;iclick&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">6958670</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="number">2244815</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">244</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;地址在哪里呀&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;zan&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1739002342</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;coStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;李四&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;userimage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://static.rainsee.cn/upload/2024/06/22/eb5c7202406221031036225.jpg?imageslim&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;user_gender&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;touser_id&quot;</span><span class="punctuation">:</span> <span class="number">145164</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;comments_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;readc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;justown&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;candelete&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;iclick&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;porder&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nocache&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="获取悬赏详情（接口同上）"><a href="#获取悬赏详情（接口同上）" class="headerlink" title="获取悬赏详情（接口同上）"></a>获取悬赏详情（接口同上）</h4><p>接口：<code>cdn.dolacc.com</code> + <code>/api/wxPostv2/visitPostCdnpw</code></p><p>方法：<code>GET</code></p><p>Query String:</p><table><thead><tr><th>Parameter</th><th>Value</th></tr></thead><tbody><tr><td>pId</td><td>2244299</td></tr><tr><td>nocache</td><td>-1</td></tr><tr><td>orderType</td><td>1</td></tr><tr><td>freshkey</td><td>2</td></tr></tbody></table><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739007940&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cachename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;postmillv42244299&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;postDtl&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2244299</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">244331</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1tQTvw48u+9XhpkEsW\/eT4YayiZ+rMR+mlKubsmR21lm0oEK70EEA81u\/kuFmU+pm5WGqGtdZcsUpA6Wckj\/\/imyDxzqYoGhUErQXoDCT6Vr4zZMPy\/8SqLP7cnzTJ0r&quot;</span><span class="punctuation">,</span> <span class="comment">// 加密的正文</span></span><br><span class="line">            <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myvideofiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;mymusicfiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic_id&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1738977878</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1738977878207</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;school_id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewComment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referuser_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referstatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;shorturl&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zansum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commentsum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jubaocount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deleteuser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topEndTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dlz_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">9820</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="number">2244299</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1738977878</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;dlz&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;price&quot;</span><span class="punctuation">:</span> <span class="number">600</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;wxorderid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17389778789953&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">244331</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;outime&quot;</span><span class="punctuation">:</span> <span class="number">1739150678</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1739006890</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;kpmsg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;有两个快递，一个是顺丰取件码：xxxx，一个是在....&quot;</span><span class="punctuation">,</span> <span class="comment">// 隐去敏感信息，这部分信息应该只有接单用户才能看见，但是...</span></span><br><span class="line">                <span class="attr">&quot;bind_user_id&quot;</span><span class="punctuation">:</span> <span class="number">239845</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;finishtime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;finishowntime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;zmimages&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;kpimages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;adlevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jinghua&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_task_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;freshkey&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_plan_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;settleed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;risky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hotnews&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isfee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">// 发布悬赏的用户</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">244331</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;王五&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https:\/\/gimg2.baidu.com\/image_search\/src=http%3A%2F%2Fpic2.zhimg.com%2F50%2Fv2-9eae8c8afdfac62b987a9f99280442a5_hd.jpg&amp;refer=http%3A%2F%2Fpic2.zhimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1625914275&amp;t=9e697bc8b095d12837b0bd5aee5858ed&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;scId&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;latepos&quot;</span><span class="punctuation">:</span> <span class="number">2244378</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;needread&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;admType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;normal&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;admUname&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;eattip&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ques&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;nohidepermission&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;悬赏&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;school_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;hots&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dunnum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;comments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;porder&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">45402</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;order_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;17389778789953&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;money&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span><span class="punctuation">,</span> <span class="comment">// 6 块钱</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1738977878</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">244331</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;post_id&quot;</span><span class="punctuation">:</span> <span class="number">2244299</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[]&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;school_id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;quitemsg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;quit_notify_time&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;quit_notify_msg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;checktime&quot;</span><span class="punctuation">:</span> <span class="number">-1</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nocache&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="※查成分（点击发帖人头像）"><a href="#※查成分（点击发帖人头像）" class="headerlink" title="※查成分（点击发帖人头像）"></a>※查成分（点击发帖人头像）</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/wxUser/getUserMsg</code></p><p>方法：<code>POST</code></p><p>Payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;169161&quot;</span> <span class="comment">// 用户 id</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739009248&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;rebot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ozQHs4p_z0SbIWHa8cDdIa5HnqTs&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;username&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同学4k2a9w&quot;</span><span class="punctuation">,</span> <span class="comment">// 用户名，不带马甲。这位自己的名字就是这样，取得和马甲似的。和 momo 啥的异曲同工</span></span><br><span class="line">            <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span> <span class="comment">// 等级</span></span><br><span class="line">            <span class="attr">&quot;authtype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;学生认证 ·本科&quot;</span><span class="punctuation">,</span> <span class="comment">// 认证</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;169161&quot;</span><span class="punctuation">,</span> <span class="comment">// 用户 id</span></span><br><span class="line">            <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span> <span class="comment">// 没选性别</span></span><br><span class="line">            <span class="attr">&quot;blocked&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;year&quot;</span><span class="punctuation">:</span> <span class="number">1.3240813673262304</span><span class="punctuation">,</span> <span class="comment">// 注册时长</span></span><br><span class="line">            <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https:\/\/file.yujianweb.cn\/upload\/2024\/01\/09\/db539202401090953263164.jpg?imageslim&quot;</span><span class="punctuation">,</span> <span class="comment">// 头像 url</span></span><br><span class="line">            <span class="attr">&quot;postcount&quot;</span><span class="punctuation">:</span> <span class="number">421</span><span class="punctuation">,</span>  <span class="comment">// 发帖数</span></span><br><span class="line">            <span class="attr">&quot;commentcount&quot;</span><span class="punctuation">:</span> <span class="number">526</span><span class="punctuation">,</span> <span class="comment">// 评论数</span></span><br><span class="line">            <span class="attr">&quot;nohidepermission&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;post&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span> <span class="comment">// 最近 5 条帖子</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2244800</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">169161</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;你们能接受和你暧昧的人同时也在和别人接触吗，甚至你看得到他们在互相接触的那种？但好像也并不能说些什么？是否应该允许别人挑选你？也允许你挑选别人？但挑来挑去也并不一定能挑对眼对吗？&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myvideofiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;mymusicfiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1739001063</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1739001063995</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;school_id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="number">287</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewComment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referuser_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referstatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[175157][352293]&quot;</span><span class="punctuation">,</span>  <span class="comment">// 没明白这个字段是干啥的</span></span><br><span class="line">            <span class="attr">&quot;shorturl&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zansum&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commentsum&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jubaocount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deleteuser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topEndTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dlz_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;adlevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jinghua&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_task_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;freshkey&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_plan_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;settleed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;risky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hotnews&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isfee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2244718</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">169161</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;个人认为被不喜欢的人经常性地“拍一拍”就像是一种赛博“性骚扰”，明明实体并没有触碰到彼此，但对方有意无意地“拍一拍”就像是在提醒你“I touched you and I am watching you.（尽管是线上的，但其实也很想试试线下的）”而被“拍”的人只会觉得边界被冒犯且有些恶心🤮。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;introduction&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myimages&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;myvideofiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;mymusicfiles&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topic_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1738997776</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;updatetime&quot;</span><span class="punctuation">:</span> <span class="number">1738997776447</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;school_id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hot&quot;</span><span class="punctuation">:</span> <span class="number">408</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;top&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pReviewComment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referuser_id&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;referstatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;user_ids&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[64515][175157][318087][352293]&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;shorturl&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zansum&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;commentsum&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jubaocount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;deleteuser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;topEndTime&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dlz_count&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xuanshang&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;majia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;adlevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jinghua&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_task_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;freshkey&quot;</span><span class="punctuation">:</span> <span class="number">13</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;business_plan_id&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;settleed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;risky&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hotnews&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;isfee&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 略去了 3 个</span></span><br><span class="line">        </span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;close&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// **重要** 主页是否关闭</span></span><br><span class="line">        <span class="attr">&quot;scId&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span> <span class="comment">// 校圈 id</span></span><br><span class="line">        <span class="attr">&quot;mylike&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fanNum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 粉丝数</span></span><br><span class="line">        <span class="attr">&quot;znNum&quot;</span><span class="punctuation">:</span> <span class="number">509</span> <span class="comment">// 赞总数</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="※用户登录"><a href="#※用户登录" class="headerlink" title="※用户登录"></a>※用户登录</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/wxUser/fetch</code></p><p>方法：<code>GET</code></p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;登陆成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739009641&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">65472</span><span class="punctuation">,</span> <span class="comment">// 用户 id</span></span><br><span class="line">        <span class="attr">&quot;school_count&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="comment">// 学校数量</span></span><br><span class="line">        <span class="attr">&quot;likes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;authtype&quot;</span><span class="punctuation">:</span> <span class="number">-1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hasmobile&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;commentphone&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;realphone&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;verty&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;vertykey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;foo&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;blockuser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;[114495][149385][133815][196795][232828][343217][302802][184315][389031][233566][106632][229005][522][104727][396863]&quot;</span><span class="punctuation">,</span> <span class="comment">// 屏蔽用户的列表</span></span><br><span class="line">        <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bar&quot;</span><span class="punctuation">,</span> <span class="comment">// **重要**认证凭证，后续的请求都要带上它。不过好像有了 token 才能请求这个页面...先有鸡？先有蛋？</span></span><br><span class="line">        <span class="attr">&quot;dlzs&quot;</span><span class="punctuation">:</span> <span class="number">3710</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nickName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;バカ&quot;</span><span class="punctuation">,</span> <span class="comment">// 昵称</span></span><br><span class="line">        <span class="attr">&quot;avatarUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic2.zhimg.com%2F50%2Fv2-5bcf79fce14ac8c7ed2e1584bb7015b0_hd.jpg&amp;refer=http%3A%2F%2Fpic2.zhimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1625914138&amp;t=48850fe2af2862a1c9d5a165a03a2701&quot;</span><span class="punctuation">,</span> <span class="comment">// 头像 url</span></span><br><span class="line">        <span class="attr">&quot;scId&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;gender&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;admType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;normal&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;rq&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;scName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同济大学&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;scSmallName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;同济校圈&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;leName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lv2&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;admUname&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overdue&quot;</span><span class="punctuation">:</span> <span class="number">1741526214</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ad&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 广告</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;外卖红包&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/pages/waimai/waimai&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://file.yujianweb.cn/duolaqiandao.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;binduser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ershou&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/pages/webview/webview?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FnnFFmUm3rKNO9vMzkSi0xg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://file.yujianpay.com/duola.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;binduser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;adnum&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;isbind&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// 重复信息的嵌套</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;yujiankey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;baz&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="※获取拉黑列表"><a href="#※获取拉黑列表" class="headerlink" title="※获取拉黑列表"></a>※获取拉黑列表</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/wxUser/getMyBlock</code></p><p>方法：<code>GET</code></p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739022545&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;lists&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">29060</span><span class="punctuation">,</span> <span class="comment">// 黑名单 table 中的主键 id</span></span><br><span class="line">                <span class="attr">&quot;user_id&quot;</span><span class="punctuation">:</span> <span class="number">65472</span><span class="punctuation">,</span> <span class="comment">// 用户 id，我的 id</span></span><br><span class="line">                <span class="attr">&quot;close_id&quot;</span><span class="punctuation">:</span> <span class="number">941</span><span class="punctuation">,</span> <span class="comment">// 被我拉黑用户的 id</span></span><br><span class="line">                <span class="attr">&quot;createtime&quot;</span><span class="punctuation">:</span> <span class="number">1722937038</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;deletetime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;张三&quot;</span><span class="punctuation">,</span> <span class="comment">// 昵称</span></span><br><span class="line">                    <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://file.yujianweb.cn/upload/2024/02/02/1fd45202402020105135635.jpg?imageslim&quot;</span> <span class="comment">// 头像</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 略去一些</span></span><br><span class="line"></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="※拉黑-取消拉黑用户"><a href="#※拉黑-取消拉黑用户" class="headerlink" title="※拉黑&#x2F;取消拉黑用户"></a>※拉黑&#x2F;取消拉黑用户</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/wxUser/blockMyuser</code></p><p>方法：<code>POST</code></p><p>Payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;block&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span> <span class="comment">// 0 拉黑 | 1 取消拉黑</span></span><br><span class="line">    <span class="attr">&quot;userid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1738998015&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="获取关注列表"><a href="#获取关注列表" class="headerlink" title="获取关注列表"></a>获取关注列表</h4><p>接口：<code>www.dolacc.cn</code> + <code>/api/Wxpostv3/getMyLike</code></p><p>方法：<code>GET</code></p><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;返回成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739023216&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;users&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;nickname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;小明&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;avatar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https:\/\/gimg2.baidu.com\/image_search\/src=http%3A%2F%2Fpic2.zhimg.com%2F50%2Fv2-5bcf79fce14ac8c7ed2e1584bb7015b0_hd.jpg&amp;refer=http%3A%2F%2Fpic2.zhimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1625914138&amp;t=48850fe2af2862a1c9d5a165a03a2701&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;level&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">347868</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="关注某个用户"><a href="#关注某个用户" class="headerlink" title="关注某个用户"></a>关注某个用户</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/Wxuserv2/addUserLike</code></p><p>方法：<code>POST</code></p><p>Payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beLikeUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;347868&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;创建成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739023041&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;logs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;33706&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="取关某个用户（在关注了的用户主页取消）"><a href="#取关某个用户（在关注了的用户主页取消）" class="headerlink" title="取关某个用户（在关注了的用户主页取消）"></a>取关某个用户（在关注了的用户主页取消）</h4><p>接口：<code>luntan.dolacc.com</code> + <code>/api/Wxuserv2/cancelLike</code></p><p>方法：<code>POST</code></p><p>Payload：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;beLikeUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;347868&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;创建成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739023142&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="取关某个用户（在自己的关注列表取消）"><a href="#取关某个用户（在自己的关注列表取消）" class="headerlink" title="取关某个用户（在自己的关注列表取消）"></a>取关某个用户（在自己的关注列表取消）</h4><p>接口：<code>www.dolacc.cn</code> + <code>/api/Wxuserv2/cancleLike</code></p><p>方法：<code>GET</code></p><p>Query String：</p><table><thead><tr><th>Parameter</th><th>Value</th></tr></thead><tbody><tr><td>beLikeUser</td><td>347868</td></tr></tbody></table><p>返回格式：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;创建成功&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1739023422&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="name-字段的破解"><a href="#name-字段的破解" class="headerlink" title="name 字段的破解"></a><code>name</code> 字段的破解</h3><p>在上面的接口中，查看最近 10 条帖子、查看帖子&#x2F;悬赏的详细内容需要使用到 <code>name</code> 字段，然而它是被编码的，无法获得明文，如何对敌？</p><p>显然，这是一个 base64 编码后的内容，看看能不能直接转换为 utf-8？</p><p>以 <code>n0gKQU2McCfEXG2g17KqDQ==</code> 为例。</p><p>运行如下的 <code>python</code> 脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">foo = <span class="string">&quot;n0gKQU2McCfEXG2g17KqDQ==&quot;</span></span><br><span class="line"></span><br><span class="line">_dec = base64.b64decode(foo) <span class="comment"># base64 =&gt; binary</span></span><br><span class="line"></span><br><span class="line">_dec = _dec.decode() <span class="comment"># binary =&gt; utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(_dec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>报错：</p><blockquote><p>UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0x9f in position 0: invalid start byte</p></blockquote><p>推测进行了加密。如何加密的呢？</p><h4 id="思路一：抓包"><a href="#思路一：抓包" class="headerlink" title="思路一：抓包"></a>思路一：抓包</h4><p>顺着 <code>web</code> 逆向的思路，看看小程序有没有向哪里请求 <code>js</code> 文件？如果有的话，全文检索 <code>decrypt</code> 不就好了？找到 <code>iv</code> 和 <code>key</code> 就行了。为什么推测是 <code>AES</code> 而不是 <code>RSA</code>，因为把私钥放到客户端很奇怪呀。</p><p>结果走不通。</p><p>因为微信小程序的原理是，js 在本地，而不需要向哪个服务器请求。</p><h4 id="思路二：反编译微信小程序"><a href="#思路二：反编译微信小程序" class="headerlink" title="思路二：反编译微信小程序"></a>思路二：反编译微信小程序</h4><p>首先，定位微信小程序的位置。它们被存储在 <code>C:\Users\&lt;username&gt;\Documents\WeChat Files\Applet</code> 下，文件夹以 <code>wx</code>打头，形如 <code>wx9ddd73d26fdbacba</code> ，这个就是校圈的文件夹，而打包后的文件名是 <code>__APP__.wxapkg</code>，目录结构是：<code>Applet/wx9ddd73d26fdbacba/315/__APP__.wxapkg</code></p><p>咋就定死了这是校圈小程序呢？有两种确认方案：</p><ol><li>把 <code>Applet</code> 下的所有小程序文件夹都删除，打开校圈，看多了哪个文件夹;</li><li>看看 <code>Charles</code> 请求头中的 <code>Referer</code>，形如 <code>https://servicewechat.com/wx9ddd73d26fdbacba/315/page-frame.html</code>，<code>315</code> 露出了鸡脚（看看上文的目录结构）。</li></ol><p>找到了 <code>__APP__.wxapkg</code>，需要先解密。有一个 <a href="https://github.com/BlackTrace/pc_wxapkg_decrypt">Github 项目</a>，使用方法很清晰。不妨设解密后的文件是 <code>dec.wxapkg</code>。</p><p>之后，在<a href="https://github.com/Fickley/wxappUnpacker">这个 Github 项目</a> 中，把 <code>dec.wxapkg</code> 进行解包，虽然最后会报错，不过我们已经得到足够的文件了。</p><p>报错信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\wxappUnpacker-main\node_modules\vm2\lib\transformer.js:86</span><br><span class="line">                throw e;</span><br><span class="line">                ^</span><br><span class="line"></span><br><span class="line">vm.js:122</span><br><span class="line">                        &#125;);</span><br><span class="line">                        ^</span><br><span class="line"></span><br><span class="line">SyntaxError: Unexpected token <span class="string">&#x27;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>在解包后的 <code>dec/</code> 文件夹中，找 <code>js</code> 文件，发现在 <code>app-service.js</code> 中，有一段代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">define</span>(<span class="string">&quot;utils/ase.js&quot;</span>, <span class="keyword">function</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="built_in">require</span>,</span></span><br><span class="line"><span class="params">  <span class="variable language_">module</span>,</span></span><br><span class="line"><span class="params">  <span class="built_in">exports</span>,</span></span><br><span class="line"><span class="params">  <span class="variable language_">window</span>,</span></span><br><span class="line"><span class="params">  <span class="variable language_">document</span>,</span></span><br><span class="line"><span class="params">  frames,</span></span><br><span class="line"><span class="params">  self,</span></span><br><span class="line"><span class="params">  location,</span></span><br><span class="line"><span class="params">  navigator,</span></span><br><span class="line"><span class="params">  <span class="variable language_">localStorage</span>,</span></span><br><span class="line"><span class="params">  history,</span></span><br><span class="line"><span class="params">  Caches,</span></span><br><span class="line"><span class="params">  screen,</span></span><br><span class="line"><span class="params">  alert,</span></span><br><span class="line"><span class="params">  confirm,</span></span><br><span class="line"><span class="params">  prompt,</span></span><br><span class="line"><span class="params">  XMLHttpRequest,</span></span><br><span class="line"><span class="params">  WebSocket,</span></span><br><span class="line"><span class="params">  Reporter,</span></span><br><span class="line"><span class="params">  webkit,</span></span><br><span class="line"><span class="params">  WeixinJSCore</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="string">&quot;use strict&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="built_in">exports</span>, <span class="string">&quot;__esModule&quot;</span>, &#123; <span class="attr">value</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">exports</span>.<span class="property">decrypt</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;IVIVIV_LUYILAFEI&quot;</span>), <span class="comment">// a 是 key</span></span><br><span class="line">        d = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;XDXDXU_LUYILAFEI&quot;</span>), <span class="comment">// d 是 iv</span></span><br><span class="line">        r = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">parse</span>(e),</span><br><span class="line">        f = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Base64</span>.<span class="title function_">stringify</span>(r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t.<span class="property">default</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(f, a, &#123;</span><br><span class="line">      <span class="attr">iv</span>: d,</span><br><span class="line">      <span class="attr">mode</span>: t.<span class="property">default</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">      <span class="attr">padding</span>: t.<span class="property">default</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>(t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Utf8</span>).<span class="title function_">toString</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">exports</span>.<span class="property">encrypt</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;IVIVIV_LUYILAFEI&quot;</span>),</span><br><span class="line">        d = t.<span class="property">default</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;XDXDXU_LUYILAFEI&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t.<span class="property">default</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(e, a, &#123;</span><br><span class="line">      <span class="attr">iv</span>: d,</span><br><span class="line">      <span class="attr">mode</span>: t.<span class="property">default</span>.<span class="property">mode</span>.<span class="property">CBC</span>,</span><br><span class="line">      <span class="attr">padding</span>: t.<span class="property">default</span>.<span class="property">pad</span>.<span class="property">Pkcs7</span></span><br><span class="line">    &#125;).<span class="title function_">toString</span>();</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> e,</span><br><span class="line">      t = (e = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>)) &amp;&amp; e.<span class="property">__esModule</span> ? e : &#123; <span class="attr">default</span>: e &#125;;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有了找到了 iv 和 key，就可以在 <code>python</code> 中进行破译：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要安装依赖：pip install pyCryptodome</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.Padding <span class="keyword">import</span> unpad</span><br><span class="line"></span><br><span class="line">AES_KEY = <span class="string">&quot;IVIVIV_LUYILAFEI&quot;</span></span><br><span class="line">AES_IV = <span class="string">&quot;XDXDXU_LUYILAFEI&quot;</span></span><br><span class="line"></span><br><span class="line">_enc = <span class="string">&quot;n0gKQU2McCfEXG2g17KqDQ==&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># base64 =&gt; binary</span></span><br><span class="line">_dec = base64.b64decode(_enc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># decrypt</span></span><br><span class="line">cipher = AES.new(AES_KEY.encode(), AES.MODE_CBC, AES_IV.encode())</span><br><span class="line">_dec = cipher.decrypt(_dec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># PKCS7 unpad</span></span><br><span class="line">_dec = unpad(_dec, <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># decrypted bytes =&gt; utf-8</span></span><br><span class="line">_dec = _dec.decode()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(_dec) // 得到 `转 ➕🦶`</span><br></pre></td></tr></table></figure><h2 id="主观评价"><a href="#主观评价" class="headerlink" title="主观评价"></a>主观评价</h2><p>总的来说，校圈的安全性还是比较低的。根源在于其后端返回的内容太多了，仅仅使用纯前端来阻止敏感信息的查看。这样的应用实例在浏览器的界面下很容易被破解，然而在微信小程序的外壳下，安全了一点，但不多。部分内容使用了 <code>AES</code> 加密，然而 inconsistent——不连贯。有的正文信息加密了，有的又没有加密：帖子的正文，没啥敏感的，需要额外一步破解；然而悬赏中只能让接单人看到的信息不根据用户身份来区分，随意从后端返回也就罢了，居然还是明文显示..信息的敏感程度和获得的加密水平不一致。</p><p>我想到的漏洞的利用有：</p><ol><li>悬赏中的敏感信息，包括但不限于快递取件码、手机号码、微信等联系方式，存在被其他用户读取的可能，而且是明文传送，很简单就能读取；</li><li>仅限认证用户查看的内容，未认证用户也可以查看；</li><li>主页已关闭，还是能查看到昵称和发帖历史。</li></ol><p>不过后端返回的内容丰富对爬虫来说是好事情，可以获取到更丰富的信息。得益于一些接口的设置，我们可以查找到匿名发言用户的 <code>id</code>，进而通过 <code>id</code> 定位到真实昵称和最近的几条发帖。拉黑接口仅仅接受 <code>id</code>，也让匿名拉黑成为了可能。</p><h3 id="问题-1-的最终解决"><a href="#问题-1-的最终解决" class="headerlink" title="问题 1 的最终解决"></a>问题 1 的最终解决</h3><p>如何拉黑一个匿名用户呢？首先，要么找到 TA 发的帖子，要么点 TA 的头像，从这两个包中可以定位到用户的 <code>id</code>，<code>id</code> 有了，通过已经存在的接口便能够实现拉黑的功能。这一方法是万能的，在关注按钮没有出现的情况下，仍然可行。</p><p>这里需要说明，模拟 <code>HTTP</code> 请求，推荐使用 <a href="https://www.postman.com/">Postman</a>，上手很简单。</p><h2 id="个人收获"><a href="#个人收获" class="headerlink" title="个人收获"></a>个人收获</h2><p>这次本来是想爬校圈的帖子和评论的，正好用来熟悉数据库，但是想想没啥必要，不如把接口分析分析，故有了本文。这次分析 APi 的经历让我体会到：</p><p>漏洞是常常存在的，网络并非十分安全。一些简单的应用压根没有做好前后端的沟通以及数据的保护；</p><p>一些 API 的设计是重复冗余的，可能和一开始没有定好文档有关，最后积累成了屎山；</p><p>有时候为了达成自己的目的，不一定需要用大炮轰蚊子的技术。这次为了拉黑一些用户，在没有充分考察校圈本身的功能之前，就决定使用压箱底的技术——抓包+逆向。其实没必要，以校圈的设计水平，多少会有一些可能出现的漏洞存在。还是应该循序渐进，切记切记。不过多熟悉熟悉大炮也是好事情。</p><p>这文章看似很长，实际上多数是 <code>API</code> 的罗列，我自己也不愿意看完。可以当个厕纸读物，得意而忘言吧！</p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【已解决】HP 打印机无法休眠</title>
      <link href="//2025/02/hp-printer-sleep-issue/"/>
      <url>//2025/02/hp-printer-sleep-issue/</url>
      
        <content type="html"><![CDATA[<h2 id="问题现象描述"><a href="#问题现象描述" class="headerlink" title="问题现象描述"></a>问题现象描述</h2><p>HP Color LaserJet Pro MFP M281fdw 打印机无法休眠。在 60s 无操作后触摸屏自动关闭，然后等待几秒钟后屏幕再次亮起。如此反复。同时伴随着细微的咔咔声，很烦人。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>发现打印机的 USB 口和电脑的连接在了一起，同时笔记本电脑处在关闭的状态。这一连接是没有必要的，因为打印机已经连接无线网了。因此，把 USB 线拔掉就好了。问题解决。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://h30434.www3.hp.com/t5/LaserJet-Printing/Problem-with-sleep-mode-on-my-printer-MFP-M278-M281/td-p/7534286">https://h30434.www3.hp.com/t5/LaserJet-Printing/Problem-with-sleep-mode-on-my-printer-MFP-M278-M281/td-p/7534286</a></p><h2 id="走的弯路"><a href="#走的弯路" class="headerlink" title="走的弯路"></a>走的弯路</h2><p>检索到了<a href="https://h30434.www3.hp.com/t5/Printing-Errors-or-Lights-Stuck-Print-Jobs/Color-LaserJet-Pro-MFP-M281fdw-turning-on-and-off-and-on-and/td-p/7823441">同型号的打印机一直开机关机的问题</a>，通过文中的方法进行 <code>Permanent Storage Init</code>，但发现解决不了问题。这也是我两三年前尝试过解决的方案。当时认为这一问题无解，所以止步于此。</p><p>之后今天早上又被这一声音整的烦躁，才再次检索。发现是 USB 线的问题。あああー，困扰我许久的问题终于解决了。看来学了计算机两年，解决问题的能力 upupup 呢。</p><p>对问题的准确描述很重要。表面上看，是触摸屏反复亮灭，事实上，更准确的描述应该是 Printer won’t stay in sleep mode。</p><p>Keep learning.</p>]]></content>
      
      
      <categories>
          
          <category> 个人工作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>未来的工作是？</title>
      <link href="//2025/02/future-work-prospect/"/>
      <url>//2025/02/future-work-prospect/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>总结一下未来的求职方向，梳理当前的职位需求。</p><p>大概目前感兴趣的方向有 3 个：前端、后端、运维。又以后两者为重点。总结一下这些岗位需要的技术，寒假和下学期会着重学习一些。</p><h2 id="前端工程师"><a href="#前端工程师" class="headerlink" title="前端工程师"></a>前端工程师</h2><h3 id="实习"><a href="#实习" class="headerlink" title="实习"></a>实习</h3><p>先看实习。从几个感兴趣的大厂入手。</p><p>小米：<code>React Native</code>、<code>javascript</code></p><p>小米：<code>js</code>、<code>vscode</code>、<code>linux</code> 环境、<code>react</code> 框架</p><p>小红书：<code>React</code> &#x2F; <code>Vue</code>、三件套</p><p>Bilibili：<code>React</code>、<code>ant-design</code>、三件套、页面布局、模块化</p><h3 id="全职"><a href="#全职" class="headerlink" title="全职"></a>全职</h3><p>小红书：<code>js</code>、<code>css</code>、<code>React</code> &#x2F; <code>Vue</code></p><p>小红书：<code>ts</code>、<code>css</code>、<code>React</code> &#x2F; <code>Vue</code></p><p>TikTok：三件套、<code>DOM</code>、<code>HTTP</code> 协议，<code>React</code> &#x2F; <code>Vue</code></p><p>Bilibili：<code>React</code>、<code>Vite</code>、<code>Webpack</code>、<code>Rollup</code></p><p>字节飞书：<code>React</code> &#x2F; <code>Vue</code> &#x2F; <code>Angular</code>，三件套、<code>Grunt</code>、<code>Gulp</code>、<code>Webpack</code>、<code>NodeJS</code></p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>前面这些是在 BOSS 直聘上看到的。大概概括来说，<code>React</code>、三件套是重点，要熟悉掌握。还有一些是在网站上扒下来的：</p><h3 id="网站提取"><a href="#网站提取" class="headerlink" title="网站提取"></a>网站提取</h3><p>坚果云：三件套、<code>ajax</code>、<code>jQuery</code>, <code>Backbone</code>, <code>React</code>, <code>Vue</code>，<code>ts</code></p><p>Bilibili（主站）：三件套（尤其是原生 <code>js</code>）、<code>Vue</code> &#x2F; <code>React</code>、<code>ts</code></p><p>Bilibili（大数据）：三件套，<code>ts</code>，框架（<code>vue</code> 更佳），数据可视化（<code>D3.js</code>、<code>ECharts</code>）</p><p>Bilibili（直播）：三件套、<code>Webpack</code>、<code>Vite</code>、<code>Hybrid App</code>，主流框架</p><p>网易有道：前端框架、<code>nodejs</code>、<code>java</code>、<code>http</code> 协议</p><p>网易云音乐：<code>React</code>、<code>Webpack</code>、<code>Babel</code>、<code>Metro</code>、<code>CI/CD</code>、<code>Node.js</code></p><p>Pixiv：<code>TypeScript</code>、<code>React</code>、<code>Next.js</code>、<code>Vue</code>、<code>Tailwind CSS</code>、<code>webpack</code>、<code>Storybook</code>、<code>Jest</code> 等</p><p>小米：三件套、框架</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总的来说，我对前端的接触面的掌握程度已经到了 60% 左右，抛开熟练度不谈。还没有接触过的有：<code>typescript</code>、<code>webpack</code>、<code>Tailwind CSS</code>、<code>React</code> 等。</p><p>先从 <code>js</code> 的 <code>es6</code> 以及基本的 <code>CSS</code> 样式开始吧。</p><h2 id="后端工程师"><a href="#后端工程师" class="headerlink" title="后端工程师"></a>后端工程师</h2><h3 id="全职-1"><a href="#全职-1" class="headerlink" title="全职"></a>全职</h3><p>滴滴：<code>golang</code>、<code>java</code>、<code>c++</code>、<code>php</code>，<code>mysql</code>、<code>linux</code></p><p>百度：<code>C++</code> &#x2F; <code>PHP</code>，<code>linux</code></p><h3 id="分割线-1"><a href="#分割线-1" class="headerlink" title="分割线"></a>分割线</h3><p>感觉后端是按照语言来划分的，并不像前端那样，会了一些基本技术后就可以 winner take all。所以还是把重点放在每个网站上吧。</p><h3 id="网站提取-1"><a href="#网站提取-1" class="headerlink" title="网站提取"></a>网站提取</h3><ul><li>小米：Java</li><li>Pixiv：<ul><li>语言：PHP、Ruby on Rails、Go、Rust、Scala；</li><li>数据库：MySQL、Redis</li></ul></li><li>网易雷火：<ul><li>语言：Java、Python、SpringBoot</li><li>数据库：MySQL、redus、MongoDB、MQ、ZK</li></ul></li><li>LOFTER：<ul><li>语言：Java、Spring、Spring mvc、Spring boot、Mybatis</li><li>数据库：MySQL</li><li>其他：Git、Maven、Spring Cloud、Dubbo、单元测试框架</li></ul></li><li>网易云音乐：<ul><li>语言：Java、SpringMVC、SpringBoot、MySQL</li><li>其他：熟悉 DMP、智能触达、PUSH 推送</li></ul></li><li>知乎：<ul><li>语言：Go</li><li>数据库：MySQL、redis</li></ul></li><li>Bilibili（主站）：<ul><li>语言：Go</li></ul></li><li>坚果云：<ul><li>语言：Java &#x2F; Python</li><li>数据库：MySQL、Postgresql</li><li>其他：linux、tcp&#x2F;ip、tcpdump…</li></ul></li><li>工商银行：<ul><li>语言：JavaEE</li></ul></li></ul><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><p>这样看来，Java 和 Go 是主流呢。Java，啊啊，面向对象的祖师爷。能不能给我分配一个对象(bushi)，学起来，要费一些时间。之前学的 C++ 都快忘了，哈哈哈哈。还是要刷一些简单题呢。</p><h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><h3 id="全职-2"><a href="#全职-2" class="headerlink" title="全职"></a>全职</h3><ul><li>阿里云：<ul><li>数据库：Oracle、DB2、SQL Server、MySQL、Postgresqk、NoSQL</li><li>中间件：Nginx、Tomcat、Spring、Dubbo、RocketMQ、ZooKeeper、Kafka</li><li>语言：Java &#x2F; C &#x2F; C++ &#x2F; Python &#x2F; PHP &#x2F; GO</li><li>其他：Linux、Windows、网络 。DNS</li><li>大数据：Hadoop、Spark、Storm、HBase、Hive</li><li>容器：K8S</li></ul></li></ul><h3 id="分割线-2"><a href="#分割线-2" class="headerlink" title="分割线"></a>分割线</h3><p>BOSS 直聘的数据不太行，还是上官网查吧。。</p><h3 id="网站提取-2"><a href="#网站提取-2" class="headerlink" title="网站提取"></a>网站提取</h3><ul><li>阿里云：<ul><li>语言：C&#x2F;C++&#x2F;Java&#x2F;Go；Shell&#x2F;Perl&#x2F;Python</li><li>Linux、TCP&#x2F;IP、网络服务器编程经验</li><li>虚拟化技术、容器技术、数据库技术、互联网安全技术。。。</li><li>加分项：机器学习 LR、RF，HTTP 协议，K8S</li></ul></li><li>小米：<ul><li>Go&#x2F;Python&#x2F;Bash&#x2F;C&#x2F;C++&#x2F;Java</li><li>Linux&#x2F;Unix</li><li>Devops</li></ul></li></ul><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><p>对这部分<strong>完全不熟悉</strong>！不过大概明确要走 SRE 运维的方向了。等高年级再说吧，反正，肯定是选择云网计算方向的那些课程了。</p>]]></content>
      
      
      <categories>
          
          <category> 个人规划 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫+Web | 同济大学 1 系统通知公告备份与提醒</title>
      <link href="//2025/01/tongji-bulletin-mirror/"/>
      <url>//2025/01/tongji-bulletin-mirror/</url>
      
        <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><ul><li>同济大学 <a href="https://1.tongji.edu.cn/">1 系统</a> 是同济大学的教学信息管理平台，发布教务教学的通知公告。发布的通知较为重要，但是过了一段时间便会下架，不给人回看的可能。</li><li>在计科导的<a href="https://tongji.xialing.icu/">网站大作业</a>编写的网站没有用户的登录注册等功能，如果因为作业时间仓促而明文存储密码，没什么意义。因此在寒假编写一个生产上较为安全的用户系统。</li></ul><p>文章将按模块来展开，梳理网站实现的大部分细节。文章比较长，读者可以选感兴趣的部分阅读。</p><p>网站在：<a href="https://1.xialing.icu/">同济大学通知公告备份站</a>。</p><p><code>Github</code> 仓库在：<a href="https://github.com/XiaLing233/fetch-1-dot-tongji">Github</a></p><h2 id="爬虫——数据获取"><a href="#爬虫——数据获取" class="headerlink" title="爬虫——数据获取"></a>爬虫——数据获取</h2><h3 id="统一身份认证"><a href="#统一身份认证" class="headerlink" title="统一身份认证"></a>统一身份认证</h3><p><img src="https://static.xialing.icu/img/202501261720226.webp" alt="快转学"></p><p>获取数据需要通过的第一道关卡是统一身份认证，因为如果不登录，是获取不了任何内容的，会返回 <code>401</code> 错误。上图是老的身份认证系统，现在不需要手动点击验证码、只需要点击登录按钮，相对还容易些，不然，如何通过验证码也是个问题。</p><p>在用户输入了用户名和密码后，发生了什么事情呢？</p><h4 id="初步认识"><a href="#初步认识" class="headerlink" title="初步认识"></a>初步认识</h4><p>在 <code>Network</code> 面板中，注意到 1 系统会向 <code>https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?...</code> 发送 <code>URL编码后的</code> 如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">j_username: 2345678</span><br><span class="line">j_password: (加密的密码)</span><br><span class="line">// 下面这行就是 &quot;请输入验证码&quot;，我没有修改其原来的面貌</span><br><span class="line">j_checkcode: 请输入验证码</span><br><span class="line">op: login</span><br><span class="line">spAuthChainCode: (一串字符串)</span><br><span class="line">authnLcKey: (一串字符串)</span><br></pre></td></tr></table></figure><blockquote><p>当然，我这里说 <strong>注意到</strong>，其实有点马后炮之嫌，因为如果不打断点的话，页面直接会跳转到 1 系统，而在进入到 1 系统后再在 <code>Network</code> 中查看，<strong>是看不到这一请求历史的！（因为这是个 <code>js</code> 请求）</strong> 换句话说，在后面使用 <code>requests</code> 模拟请求时，如果缺失了这一步，登录不成功，获取不到 <code>Cookie</code>！我在这一步卡了很久。不过现在发现，如果在 <code>Network</code> 面板勾选 <code>Preserve log</code> 就能看到按下登录按钮后发生的所有事情，而不会因为页面跳转失去之前的内容。这样也就能解决这一问题了。</p></blockquote><p>这些内容是如何获得的？</p><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><p>打个断点调试吧！找到登录按钮的元素，看看 <code>@click</code>，也就是鼠标单击后会发生什么。</p><p><img src="https://static.xialing.icu/img/202501261730192.webp" alt="寻找事件"></p><p>点击③红框中的链接，到了下面的页面：</p><p><img src="https://static.xialing.icu/img/202501261733122.webp" alt="添加断点"></p><p>点击左侧的行号，就会添加断点。这样，等我们按下登录按钮后，页面就不会一下子跳转到登录后的状态，而是一步步执行，让我们可以知道，到底登录过程发生了什么。</p><p><img src="https://static.xialing.icu/img/202501261742528.webp" alt="调试"></p><p>掌握了这些方法，想要获取到登录的全流程仍然比较困难：</p><ol><li><code>js</code> 文件是混淆过的，不知道语句的具体含义；</li><li>运行时函数压栈层层调用，不知道运行到了哪层，贸然跳出当前层很可能导致整个调试过程进行完毕，跳转到登录后的界面；</li><li>登录次数太多会触发系统的验证机制，需要额外输入验证码等。</li></ol><p>应对这些问题，有一些小技巧，例如，把所有和网络请求有关的内容（如 <code>ajax</code> 等）全打上断点，布下天罗地网。或者根据文件名分析函数的功能。但不管怎么说，遇到一个新的问题需要解决时，还是要逐渐摸索。这里就略去这些摸索过程，直接给出结论。</p><h4 id="密码加密"><a href="#密码加密" class="headerlink" title="密码加密"></a>密码加密</h4><p>注意到如下函数会被调用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//RSA加密</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encryptByRSA</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="comment">//debugger;</span></span><br><span class="line">    <span class="keyword">var</span> encrypt = <span class="keyword">new</span> <span class="title class_">JSEncrypt</span>();</span><br><span class="line">    encrypt.<span class="title function_">setPublicKey</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> encrypted = encrypt.<span class="title function_">encrypt</span>(message);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> encrypted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>message</code> 是输入的明文密码，例如，用户输入的密码是 <code>123456</code>，传入的就是 <code>123456</code>。</p><p>经过了 <a href="https://www.npmjs.com/package/jsencrypt">JSEncrypt 库</a> 的加密后，会返回加密后的 <code>encrypted</code>，然后发送给后端。具体的逻辑在 <code>doSubmit</code> 函数中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doSubmit</span>(<span class="params">usernameId</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> authenTypes = $(<span class="string">&quot;#authenTypes&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> spAuthentication = $(<span class="string">&quot;#spAuthentication&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> authMethodIDs = $(<span class="string">&quot;#authMethodIDs&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> passmm=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> dataes=$(<span class="string">&#x27;#&#x27;</span> + tabFromId).<span class="title function_">serialize</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">typeof</span>(passwordId) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; $(<span class="string">&quot;#&quot;</span> + passwordId).<span class="title function_">val</span>().<span class="property">length</span>&lt;<span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> pass=$(<span class="string">&quot;#&quot;</span> + passwordId).<span class="title function_">val</span>();</span><br><span class="line">        passmm=<span class="title function_">encryptByRSA</span>(pass); <span class="comment">// 加密的密码！！！</span></span><br><span class="line">        pass=<span class="built_in">encodeURIComponent</span>(pass);</span><br><span class="line">        dataes=dataes.<span class="title function_">replace</span>(<span class="string">&#x27;j_password=&#x27;</span>+pass,<span class="string">&#x27;j_password=&#x27;</span>+passmm);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> urlPath = basePath + <span class="string">&quot;/authcenter/ActionAuthChain?authnLcKey=&quot;</span>+$(<span class="string">&quot;#authnLcKey&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> view = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;.loginBt&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;disabled&#x27;</span>, <span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: urlPath,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">cache</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">async</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">data</span>: dataes, <span class="comment">// 发送的数据！！！</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 下略</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在发送的数据中，最难获取的就是加密后的密码，其他字段比较容易获得，留作习题。</p><p>发送完密码后，<code>https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?...</code> 会返回 <code>200 OK</code>，进入后续步骤。</p><h4 id="一条龙服务"><a href="#一条龙服务" class="headerlink" title="一条龙服务"></a>一条龙服务</h4><p><code>200 OK</code> 的<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status">状态码</a>并不会重定向浏览器的页面，因此在后续使用 <code>requests</code> 来模拟请求时，需要手动请求后续页面。不过，找到第一个需要请求的页面就好啦，因为后面是一堆 <code>302</code> 重定向。</p><p>先向 <code>https://iam.tongji.edu.cn/idp/AuthnEngine?...</code> 发送 <code>POST</code> 请求，把刚刚发送的内容再发送一遍。</p><p>如果成功了，我们会在响应头的 <code>Set-Cookie</code> 字段获得 <strong><code>_idp_session</code></strong> 这一 <code>Cookie</code>，并被 <code>Location</code> 字段中的位置重定向到 <code>https://iam.tongji.edu.cn:443/idp/profile/OAUTH2/AuthorizationCode/SSO?...</code>。</p><p>在这里，我们会获得 <strong><code>_idp_authn_lc_key</code></strong> 这一 <code>Cookie</code>，并重定向到：<code>https://1.tongji.edu.cn/api/ssoservice/system/loginIn?...</code>。</p><p>现在来到了 1 系统的地盘。</p><p>在这里，我们会获得一个 <code>demoState</code> 的 <code>Cookie</code>，没什么作用。我们会被继续重定向到：<code>http://1.tongji.edu.cn/ssologin?token=xxx;uid=xxx;ts=xxx</code>。</p><p>在这里，我们会被重定向到 <code>https</code> 的链接（上面的链接是 <code>http</code>），这样，登录结束，不再被重定向了，返回 <code>200 OK</code>。</p><p>叙述的有些繁琐，不过，实际的登录就是这样的一个过程。</p><p>目前为止还没有结束，因为通过观察获得消息通知的请求头（见后续章节），有一个 <code>sessionid</code> <code>Cookie</code> 还没有获得。</p><p>注意到会有一个 <code>POST</code> 请求会被发送到 <code>https://1.tongji.edu.cn/api/sessionservice/session/login</code>，携带的数据是：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span><span class="string">&quot;********-****-****-****-************&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span><span class="string">&quot;********************************&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts&quot;</span><span class="punctuation">:</span><span class="string">&quot;1737894675376&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这三个内容在上一步的链接 <code>http://1.tongji.edu.cn/ssologin?token=xxx;uid=xxx;ts=xxx</code> 中可以获得。</p><p>到此为止，登录工作已经分析完成了，接下来需要用 <code>requests</code> 来模拟。</p><h3 id="requests-模拟登录"><a href="#requests-模拟登录" class="headerlink" title="requests 模拟登录"></a><code>requests</code> 模拟登录</h3><p>代码细节参见 <code>fetchNewEvents.py</code> 中的 <code>login()</code> 函数。</p><blockquote><p>—– 第一步：登录前页面 —–</p></blockquote><p>关键：从 <code>URL</code> 中提取 <code>authnLcKey</code>。</p><blockquote><p>—– 第二步：ActionAuthChain —–</p></blockquote><p>关键：获取 RSA 公钥，加密密码。从 <code>js</code> 中获得写死的 <code>spAuthChainCode</code>。整合数据，发送。记得修改请求头，需要添加 <code>Content-Type</code> 和 <code>Content-Length</code>。</p><p>第二步就是上面提到的容易忘记的一步。</p><blockquote><p>—– 第三步：AuthnEngine —–</p></blockquote><p>关键：再次发送一遍刚刚的内容。</p><blockquote><p>—– 第四步：SSO 登录 —–</p></blockquote><p>关键：需要更新 <code>headers</code>，刚刚加上的两个字段不要了。</p><blockquote><p>—– 第五步：LoginIn code &amp; state—–</p><p>—– 第六步：ssologin token—–</p><p>—– 第七步：转 HTTPS —–</p></blockquote><p>源代码这里获取了 <code>AES</code> 公钥的链接，因为存储 <code>AES</code> 公钥的 <code>js</code> 文件名在这个页面的返回内容中可以提取到。</p><blockquote><p>—– 第八步：login —–</p></blockquote><p>关键：把 <code>token</code>、<code>ts</code> 和 <code>uid</code> 发送出去。</p><h3 id="requests-获取通知内容"><a href="#requests-获取通知内容" class="headerlink" title="requests 获取通知内容"></a><code>requests</code> 获取通知内容</h3><p>观察到 1 系统获取通知内容用到了两个方法：<code>findMyCommonMsgPublish</code> 和 <code>findMyCommonMsgPublishById</code>。不管是哪个方法，都需要如下两个 <code>Cookie</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;JSESSIONID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sessionid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yyy&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>第一个比较好获得，只要访问 1 系统就可以，第二个就是前面在最后一步获得的 <code>Cookie</code>。</p><p>这两个方法获取到的内容分别是这样：</p><h4 id="findMyCommonMsgPublish"><a href="#findMyCommonMsgPublish" class="headerlink" title="findMyCommonMsgPublish"></a><code>findMyCommonMsgPublish</code></h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;pageNum_&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;pageSize_&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;total_&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;pageNum_&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span>                              <span class="comment">// 【注意】这个字段没用，正确的 pageNum_ 是外层的</span></span><br><span class="line">                <span class="attr">&quot;pageSize_&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span>                            <span class="comment">// 【注意】这个字段没用，正确的 pageSize_ 是外层的</span></span><br><span class="line">                <span class="attr">&quot;dic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1271</span><span class="punctuation">,</span>                                 <span class="comment">// id 应该是唯一的</span></span><br><span class="line">                <span class="attr">&quot;startTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-10-23 00:00:00.0&quot;</span><span class="punctuation">,</span>       <span class="comment">// 发布时间</span></span><br><span class="line">                <span class="attr">&quot;endTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-10-01 00:00:00.0&quot;</span><span class="punctuation">,</span>         <span class="comment">// 过期时间</span></span><br><span class="line">                <span class="attr">&quot;popStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span>                           <span class="comment">// 是否弹出</span></span><br><span class="line">                <span class="attr">&quot;topStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span>                           <span class="comment">// 是否置顶</span></span><br><span class="line">                <span class="attr">&quot;invalidTopTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-09-01 00:00:00.0&quot;</span><span class="punctuation">,</span>  <span class="comment">// 到了什么时候停止置顶</span></span><br><span class="line">                <span class="attr">&quot;receiverPattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;customGroupId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;faceUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;224,254,20,219,253&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;faceUserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;全校&quot;</span><span class="punctuation">,</span>                     <span class="comment">// 面向的对象，我能接收到的应该只有全校</span></span><br><span class="line">                <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;教学部门首问视频会议室&quot;</span><span class="punctuation">,</span>          <span class="comment">// 标题</span></span><br><span class="line">                <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span>                            <span class="comment">// 【注意】这里不会返回内容，需要用其他方法请求</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;workflowNo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;tagStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;rejectReason&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;createId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12345&quot;</span><span class="punctuation">,</span>                        <span class="comment">// 发布信息的教师工号</span></span><br><span class="line">                <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;夏凌&quot;</span><span class="punctuation">,</span>                       <span class="comment">// 发布信息的教师姓名</span></span><br><span class="line">                <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-03-10 09:25:39.0&quot;</span><span class="punctuation">,</span>      <span class="comment">// 创建消息的时间</span></span><br><span class="line">                <span class="attr">&quot;publishTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2022-03-10 09:26:11.0&quot;</span><span class="punctuation">,</span>     <span class="comment">// 发布消息的时间</span></span><br><span class="line">                <span class="attr">&quot;groupIds&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;noTipsMsg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;ids&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;editExplain&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;evidenceList&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;commonAttachmentList&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;porjIds&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;projIdStr&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;marReadStatus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;publishStartTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;publishEndTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;receiverList&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;userCode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>方法为 <code>POST</code>。</p><p>这一方法会返回当前页面范围内的所有通知，但是不会返回内容和附件。因此，把 <code>pageSize_</code> 开大一点，获取所有的通知数，然后再逐个获取细节即可。</p><h4 id="findMyCommonMsgPublishById"><a href="#findMyCommonMsgPublishById" class="headerlink" title="findMyCommonMsgPublishById"></a><code>findMyCommonMsgPublishById</code></h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pageNum_&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pageSize_&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">2204</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;startTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-01-15 00:00:00.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;endTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-01-22 00:00:00.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;popStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;topStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;invalidTopTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;receiverPattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;customGroupId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;faceUser&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;faceUserName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;全校&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;关于2024-2025学年第二学期本科生、研究生及继续教育（本科）教材选用情况的公示&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;content&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&lt;p&gt;test&lt;/p&gt;&quot;</span><span class="punctuation">,</span> <span class="comment">// 这里存放了内容</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;workflowNo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tagStatus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rejectReason&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12345&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createUser&quot;</span><span class="punctuation">:</span> <span class="string">&quot;夏凌&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-01-15 17:26:41.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;publishTime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2025-01-16 15:11:50.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;groupIds&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;noTipsMsg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ids&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editExplain&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;evidenceList&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commonAttachmentList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="comment">// 这里存放了附件</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;pageNum_&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span> <span class="comment">// 忽略</span></span><br><span class="line">        <span class="attr">&quot;pageSize_&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span> <span class="comment">// 忽略</span></span><br><span class="line">        <span class="attr">&quot;dic&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">10100</span><span class="punctuation">,</span> <span class="comment">// 这个 id 应该是唯一的</span></span><br><span class="line">        <span class="attr">&quot;relationId&quot;</span><span class="punctuation">:</span> <span class="number">2204</span><span class="punctuation">,</span> <span class="comment">// 和通知 id 的关系</span></span><br><span class="line">        <span class="attr">&quot;relationType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;01&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;fileName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span>  <span class="comment">// 文件名</span></span><br><span class="line">        <span class="attr">&quot;fileLacation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span> <span class="comment">// 文件存放地址，需要进行加密后发送下载请求。就是 Lacation!</span></span><br><span class="line">        <span class="attr">&quot;uploadUserId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uploadName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uploadTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;moduleName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;rateStatus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;processRate&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;projId&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;projIdI18n&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;porjIds&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;projIdStr&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;marReadStatus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;publishStartTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;publishEndTime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;receiverList&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;userCode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>方法为 <code>GET</code>。</p><p>链接携带了 <code>id</code> 和时间戳，但其实只携带 <code>id</code> 就够了。</p><p>内容的获取比较简单，先获取所有的通知，然后再逐个遍历即可。当出现新通知的时候，发送邮件提醒。此外，需要判断这条通知有没有记录过，否则会做多余的工作，涉及到数据库的部分。</p><p>因此，接下来依次叙述邮件服务的建立以及数据库表格的设置。</p><h4 id="附件的下载"><a href="#附件的下载" class="headerlink" title="附件的下载"></a>附件的下载</h4><p>1 系统中附件的下载并不是简单地用 <code>&lt;a&gt;&lt;/a&gt;</code> 标签存放文件地址，而是通过一个 <code>js</code> 动态生成的。</p><p>具体的原理是，把附件的 <code>fileLacation</code> 的值（我没打错，就是 <code>FileLacation</code>）经过 <code>AES</code> 加密，获得目标链接即可。<code>AES</code> 加密用到的是 <a href="https://www.npmjs.com/package/crypto-js">Crypto-JS</a> 库。</p><h3 id="邮件通知"><a href="#邮件通知" class="headerlink" title="邮件通知"></a>邮件通知</h3><p>如果不想用属于自己的域名发送邮件提醒，用 QQ 邮箱、163 邮箱，甚至是同济邮箱就足够了（现在想想，同济邮箱甚至可达性更高一些，不过似乎没有 <code>SMTP</code> 功能呢）。</p><p>建立自己的邮件服务，有两个方案：自己搭建或者使用企业邮箱。<a href="https://kabe.dev/%E5%BC%80%E5%A7%8B%E8%87%AA%E5%BB%BA%E9%82%AE%E7%AE%B1%E4%B9%8B%E5%89%8D/">这篇文章</a>写的很不错，只不过一开始我不信邪。</p><h4 id="自己搭建"><a href="#自己搭建" class="headerlink" title="自己搭建"></a>自己搭建</h4><p>我在服务器上采用 <code>Dovecot</code> 和 <code>Postfix</code> 搭建了一个简陋的邮件服务器，也做好了域名解析。然而，因为服务器商一般不会开放 <code>25</code> 端口，也就是 <code>SMTP</code> 服务器端口，用来发送邮件。所以在测试的时候，只能接收到其他邮箱 <strong>发来</strong> 的邮件（<code>POP3</code> &#x2F; <code>IMAP</code>），而无法对外发送邮件。</p><p>因此找到了一些邮件转发服务，如亚马逊 <code>SES</code>。不过，可能对方觉得我的资质不够，没能通过我的申请。</p><p><img src="https://static.xialing.icu/img/202501262116757.webp" alt="Rejected"></p><p>所以这条路走不通啦！我在寻觅下一个邮件转发服务商的过程中想起来了上面那篇被我嗤之以鼻的文章，于是申请了一个阿里云的企业邮箱。</p><h4 id="企业邮箱"><a href="#企业邮箱" class="headerlink" title="企业邮箱"></a>企业邮箱</h4><p>申请的方法很简单，最大的困难可能就是一个自己的域名了。我估计<a href="https://tongji.icu/">乌龙茶</a>的大哥也是这种做法吧。因为很简单，所以不赘述了。</p><h3 id="数据库的配置"><a href="#数据库的配置" class="headerlink" title="数据库的配置"></a>数据库的配置</h3><p>使用的是免费的 <code>MySQL</code> 作为数据库。数据库表格的设置是这样的：</p><blockquote><p>通知表(notifications)</p></blockquote><table><thead><tr><th>关键字</th><th>类型</th><th>描述</th><th>补充说明</th></tr></thead><tbody><tr><td>id</td><td>INT</td><td>通知的唯一标识符</td><td>和 1 系统数据库中的一致</td></tr><tr><td>title</td><td>VARCHAR(500)</td><td>通知的标题</td><td></td></tr><tr><td>content</td><td>LONGTEXT</td><td>通知的内容(HTML)</td><td>用 LONGTEXT，不然存不下 base64 的图片</td></tr><tr><td>start_time</td><td>DATETIME</td><td>通知的发布时间</td><td>用 DATETIME 而不是 TIMESTAMP…</td></tr><tr><td>end_time</td><td>DATETIME</td><td>通知的下架时间</td><td>…是因为 DATETIME 不考虑时区…</td></tr><tr><td>invalid_top_time</td><td>DATETIME</td><td>什么时候停止置顶</td><td>…不过主要还是因为和 1 系统的一致</td></tr><tr><td>created_id</td><td>VARCHAR(45)</td><td>发布人的工号</td><td>不能用 INT，否则存储不了 admin，且 0 开头的工号会略去首 0</td></tr><tr><td>created_user</td><td>VARCHAR(45)</td><td>发布人的姓名</td><td></td></tr><tr><td>create_time</td><td>DATETIME</td><td>通知的创建时间</td><td></td></tr><tr><td>publish_time</td><td>DATETIME</td><td>通知的发布时间</td><td></td></tr></tbody></table><blockquote><p>附件表(attachments)</p></blockquote><table><thead><tr><th>关键字</th><th>类型</th><th>描述</th><th>补充说明</th></tr></thead><tbody><tr><td>id</td><td>INT</td><td>附件的唯一标识符</td><td>和 1 系统数据库中的一致</td></tr><tr><td>file_name</td><td>VARCHAR(500)</td><td>附件文件名</td><td>json 中的 fileName</td></tr><tr><td>file_location_remote</td><td>VARCHAR(500)</td><td>在学校服务器的路径</td><td>json 中的 fileLocation</td></tr><tr><td>file_location_local</td><td>VARCHAR(500)</td><td>本地的存储路径</td><td>不包含前缀地址，即 config.ini 中的 Storage.path</td></tr></tbody></table><blockquote><p>通知和附件的关系表(relations)</p></blockquote><table><thead><tr><th>关键字</th><th>类型</th><th>描述</th><th>补充说明</th></tr></thead><tbody><tr><td>id</td><td>INT</td><td>主键</td><td>它的数值不重要</td></tr><tr><td>notification_id</td><td>INT</td><td>存放通知</td><td></td></tr><tr><td>attachment_id</td><td>INT</td><td>存放附件</td><td></td></tr></tbody></table><p>因为通知和附件是典型的多对多关系（不设置成一对多是为了防止一个附件被多个通知引用，毕竟名字都叫 <code>commonAttachmentList</code> 了）。</p><p>到此为止，我们就把 1 系统的数据爬取到了本地，并且形成了有序的组织结构。接下来对这些数据再次处理，展示到页面上。</p><h3 id="跳板机"><a href="#跳板机" class="headerlink" title="跳板机"></a>跳板机</h3><p>因为服务器在国外（不需要备案），但是总是用国外的 <code>IP</code> 登录学校的系统也不是个好事，正好国内有台上海的服务器，利用起来。</p><p>使用 <code>ssh</code> 新建一个 <code>socks5</code> 代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -D port -i /path/to/your/private/ley cirno@ip_addr</span><br></pre></td></tr></table></figure><p><code>-f</code> 表示放入后台，<code>-N</code> 表示不执行任何命令，<code>-D</code> 指明了端口号，<code>-i</code> 指明了私钥的位置。</p><p>之后再在脚本中使用 <code>pySocks</code> 创建一个代理就好了。</p><p>或许是掩耳盗铃吧。</p><h2 id="Web——数据展示"><a href="#Web——数据展示" class="headerlink" title="Web——数据展示"></a>Web——数据展示</h2><p>数据展示的网站编写采用的技术栈是：</p><ul><li>前端：<code>vue3</code></li><li>后端：<code>flask</code></li><li>数据库：<code>MySQL</code></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>先说数据库，因为后续可能会用到其中的表格信息：</p><blockquote><p>用户表(users)</p></blockquote><table><thead><tr><th>关键字</th><th>类型</th><th>描述</th><th>补充说明</th></tr></thead><tbody><tr><td>id</td><td>INT</td><td>主键</td><td></td></tr><tr><td>username</td><td>VARCHAR(100)</td><td>昵称</td><td></td></tr><tr><td>email</td><td>VARCHAR(100)</td><td>注册邮箱</td><td></td></tr><tr><td>password</td><td>VARCHAR(100)</td><td>加密的密码</td><td></td></tr><tr><td>created_at</td><td>DATETIME</td><td>注册时间</td><td></td></tr><tr><td>receive_noti</td><td>BOOLEAN</td><td>是否接收通知提醒</td><td></td></tr></tbody></table><blockquote><p>登录记录表(login_logs)</p></blockquote><table><thead><tr><th>关键字</th><th>类型</th><th>描述</th><th>补充说明</th></tr></thead><tbody><tr><td>id</td><td>INT</td><td>主键</td><td></td></tr><tr><td>user_id</td><td>VARCHAR(100)</td><td>用户 id</td><td>外键</td></tr><tr><td>ip_address</td><td>VARCHAR(100)</td><td>登录 IP</td><td></td></tr><tr><td>login_at</td><td>DATETIME</td><td>登录时间</td><td></td></tr></tbody></table><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>先说后端，因为后端比较复杂。</p><p>前文说过，计科导的<a href="https://tongji.xialing.icu/">网站大作业</a>并没有用户系统，所以这次我就想做一个比较完备的用户系统，估计也只会做这一次了，因为太麻烦。</p><p>接下来按功能模块来阐述后端的任务。</p><h4 id="用户注册"><a href="#用户注册" class="headerlink" title="用户注册"></a>用户注册</h4><p>新用户需要先用邮箱注册，为了数据安全，只接收同济邮箱（<code>@tongji.edu.cn</code>）。</p><p>如果用户的邮箱正确，则随机生成一个六位验证码。此时会生成一个和用户对应的 <code>session</code>，这样，后续就可以判断用户输入的验证码是否正确了。否则，万一同时有一堆人注册，怎样区分哪个验证码是哪个用户的呢？生成 <code>session</code> 是通过 <code>flask_session</code> 来的。</p><p>存储 <code>session</code> 使用 <code>redis</code> 数据库，而不是存在内存中，这样做有两个好处：</p><ol><li>使用 <code>gunicorn</code> 部署服务时，多线程下可以正常工作；</li><li>服务重启后，<code>session</code> 仍然存在。</li></ol><p>验证码正确，用户就注册成功了。把用户信息写入数据库。这里需要提一嘴密码的处理。明文密码很不安全，因此采用 <code>argon2</code> 加密。数据库中存储的密码长这样：</p><table><thead><tr><th>id</th><th>nickname</th><th>email</th><th>password</th><th>created_at</th><th>receive_noti</th></tr></thead><tbody><tr><td>3</td><td>cirno</td><td><code>cirno@tongji.edu.cn</code></td><td><code>$argon2id$v=19$m=65536,t=3,p=4$mzAj2HA19xJ+3AYe2tLfuw$w1S8Zj885OvJTi6PMIM4B/5tAmXpDScd9+i2AfKzvEI</code></td><td>2025-01-23 14:19:16</td><td>1</td></tr></tbody></table><p>默认的 <code>receive_noti</code> 为 0。也就是说，如果用户想要接受邮件提醒，需要手动设置，这样可以避免不必要的打扰。</p><h4 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h4><p>登录只支持邮箱+密码的登录方式。</p><p>传入的密码经过了 <code>RSA</code> 加密的，和 1 系统的处理方式一样。上文用户注册，下文忘记密码中传送的密码也都是加密过的。<code>RSA</code> 是一种不对称加密。就算在 <code>js</code> 中的公钥被人所知也没关系，因为只有私钥才能破解原来的内容。但相对地，<code>AES</code> 加密就是一种对称加密，只有一把钥匙。因此最好不要用 <code>AES</code> 加密来加密密码。</p><p>后端解密密码使用的是 <code>Cryptodome</code> 库。</p><p>每一次登录，后端会记录登录的 <code>IP</code> 地址和登录时间，写入 <code>login_logs</code> 中。获取时间很简单，如何获取 <code>IP</code> 呢？因为后端服务是使用 <code>nginx</code> 反向代理的，无法直接获得客户端 <code>IP</code>，只能直接获得本机 <code>IP</code>，也就是 <code>localhost</code>。实现的方法是通过 <code>X-Forwarded-For</code> 头部，通过配置 <code>nginx</code>，这一头部会返回一连串的转发 <code>IP</code>，最开始的就是用户的 <code>IP</code>。当然，我现在看到的 <code>IP</code> 还会多一层，因为除了本机的 <code>nginx</code> 一层代理之外，<code>Cloudflare</code> 也有一层代理。</p><h4 id="忘记密码"><a href="#忘记密码" class="headerlink" title="忘记密码"></a>忘记密码</h4><p>如果忘记了密码，就再发送一封邮件到邮箱，接收验证码，输入新密码，和注册的流程类似。</p><h4 id="获取通知"><a href="#获取通知" class="headerlink" title="获取通知"></a>获取通知</h4><p>获取通知的简略内容。从数据库中 <code>SELECT *</code> 就好啦。</p><p>而获取通知的细节内容，只需要针对传入的通知 <code>id</code>，在数据库中查询即可。</p><p>下载附件，则是打开本地文件，返回二进制数据。</p><p>从叙述中可以看出来，如果手中有了数据，想展示出来是很容易的。然而如果想要爬取别人的数据，就需要费许多功夫了。</p><h4 id="凭证的管理"><a href="#凭证的管理" class="headerlink" title="凭证的管理"></a>凭证的管理</h4><p>其他的一些简单方法就不赘述了，最后提一句关于用户登录状态的管理。</p><p>使用 <code>flask-jwt-extended</code> 实现登录凭证。如果登录成功，会发送一个 <code>xl_token</code> 和 <code>csrf_access_token</code>，后者是为了防止一种攻击而设置的，每次在请求头中请求时需要手动加到 <code>headers</code> 里。</p><p>每一个需要登录后才能访问的 <code>api</code> 加上一个 <code>@jwt_required</code> 装饰器就好了。</p><p>登出的时候要清除发放的凭证，使用 <code>unset_access_token</code> 来实现。</p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>前端使用 <code>vue3</code> 的 <code>optionsAPI</code> 形式来实现，使用了 <a href="https://element-plus.org/zh-CN/"><code>Element Plus</code> 组件库</a>，1 系统同款。</p><p>先按页面叙述，最后再说说用的非平凡的技术有哪些。</p><h4 id="登录前页面"><a href="#登录前页面" class="headerlink" title="登录前页面"></a>登录前页面</h4><p><img src="https://static.xialing.icu/img/202501262222652.webp" alt="登录"></p><p>很朴素的登录页面。</p><h4 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h4><p><img src="https://static.xialing.icu/img/202501262225713.webp" alt="首页"></p><p>这个页面可以说一说。</p><p>页面右上方有两个下拉菜单。昵称所在的下拉菜单可以维护个人信息和退出登录；关于所在的下拉菜单指向 <code>Github</code> 仓库。</p><p>绿色的提示条，点击后会开启一个新手指导。</p><p>表格展示了通知的信息，状态列表头旁的下箭头可以筛选通知公告的状态。表格的每一行都是可以点击的，点击后会弹出通知的详细信息，如下：</p><p><img src="https://static.xialing.icu/img/202501262230301.webp" alt="通知内容"></p><h4 id="个人信息维护"><a href="#个人信息维护" class="headerlink" title="个人信息维护"></a>个人信息维护</h4><p><img src="https://static.xialing.icu/img/202501262233290.webp" alt="用户界面"></p><p>在个人信息界面，可以查看基本信息，控制是否接收通知，修改密码，以及查看最近的几次登录记录。</p><h4 id="vue-router——页面跳转"><a href="#vue-router——页面跳转" class="headerlink" title="vue router——页面跳转"></a><code>vue router</code>——页面跳转</h4><p>使用 <code>vue-router</code> 实现页面跳转，值得说明的是，对于一些登录后才能访问的界面，可以在 <code>beforeEnter</code> 中进行设置，只有登录后才能进入对应页面，否则会跳转到 <code>login</code> 界面。反之，如果已经登录过了，则在访问登录、注册等页面时会跳转到根目录。</p><p>比如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/register&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;register&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../views/RegisterView.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">beforeEnter</span>: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (store.<span class="property">state</span>.<span class="property">isLoggedin</span>) &#123;</span><br><span class="line">        <span class="title function_">next</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="vuex——状态存储"><a href="#vuex——状态存储" class="headerlink" title="vuex——状态存储"></a><code>vuex</code>——状态存储</h4><p>使用 <code>vuex</code> 来进行状态的存储，状态的变换要使用 <code>mutations</code>，有点像数字逻辑的有限状态机。还有一些更复杂的方法，项目没有涉及到。</p><p>需要注意的是，如果单纯地使用 <code>vuex</code> 来存储状态，由于状态在内存中存储，所以刷新页面或者打开的新页面并不会保留先前的状态，因此需要把状态存储到 <code>localStorage</code> 或者 <code>sessionStorage</code> 中。</p><h4 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h4><p>仿照 1 系统做的 logo，只需要新建一个渐变色的矩形。之后创建剪切蒙版就好了。</p><p>个人信息维护的背景界面，是调整为灰度后，加了干画笔滤镜、调整色阶得到的。</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>网站还是要部署到服务器上才好。</p><p>服务器是利用学生优惠白嫖了一年的 <code>DigitalOcean</code> 服务器，系统为 <code>Ubuntu 24.04 LTS</code>，地理位置在新加坡，这样不用备案，比较方便。</p><h4 id="Python-环境配置"><a href="#Python-环境配置" class="headerlink" title="Python 环境配置"></a><code>Python</code> 环境配置</h4><p>和本地的配置环境类似，用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m venv venv</span><br></pre></td></tr></table></figure><p>新建一个虚拟环境。</p><p>再使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br></pre></td></tr></table></figure><p>和本地的 <code>.venv/Scripts/activate</code> 略有不同。</p><p>之后再安装包就可以了。</p><h4 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a><code>DNS</code> 解析</h4><p>使用裸 <code>IP</code> 访问很不好，需要使用域名来解析到 <code>IP</code>。如果有域名的话，添加一条 <code>DNS</code> 解析的 <code>A</code> 记录，指向服务器的 <code>IP</code> 就好了。</p><h4 id="SSL-证书"><a href="#SSL-证书" class="headerlink" title="SSL 证书"></a><code>SSL</code> 证书</h4><p>使用 <code>https</code> 比较安全，因此需要申请证书。我的域名在腾讯云注册的，在那里申请的免费证书。</p><h4 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a><code>Nginx</code></h4><p>就像客户端访问网页需要浏览器一样，服务器也需要软件来提供 <code>Web</code> 服务，常见的有 <code>Nginx</code> 和 <code>Apache</code>，我这次试了试后者，感觉好像不是很好用，所以还是用回了熟悉的 <code>Nginx</code>。</p><p><code>Nginx</code> 的配置还算可以理解。网站的配置文件放在 <code>/etc/nginx/sites-available</code> 下，如果要启用这一网站，则在 <code>sites-enabled</code> 下使用 <code>sudo ln -s xxx</code> 创建一个符号链接即可。一个典型的 <code>server</code> 块长这个样子</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> cirno.xialing.icu;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ssl 证书需要配置这两个文件</span></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /path/to/cirno.xialing.icu.crt; </span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /path/to/cirno.xialing.icu.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">root</span> /var/www/dot;</span><br><span class="line">    <span class="attribute">index</span> index.html;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> /api/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://127.0.0.1:8000;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>root</code> 应该指向要部署的网站，这里的 <code>dot</code> 存放了 <code>vue</code> 生成的前端页面。生成这一文件夹的命令是 <code>npm run build</code>。</p><p><code>location /api/</code> 指向了本地的后端服务，并设定了一些头部。</p><h4 id="gUnicorn"><a href="#gUnicorn" class="headerlink" title="gUnicorn"></a><code>gUnicorn</code></h4><p><code>gUnicorn</code> 是用来部署 <code>Flask</code> 的。可以采用系统服务的形式来创建一个部署。新建一个 <code>.service</code> 文件，设定好环境和文件位置，把它放到 <code>/etc/systemd/system</code> 下，启动就好了。</p><h4 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h4><p>和网站部署没关系。爬虫也需要每日定期运行，所以这里顺带着提上一嘴。</p><p>用 <code>cron</code> 来实现定时任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 9 * * * /bin/bash -c <span class="string">&#x27;source /path/to/your/venv/bin/activate &amp;&amp; /path/to/your/venv/bin/python /path/to/your_script.py &gt;&gt; /path/to/logfile.log 2&gt;&amp;1&#x27;</span></span><br><span class="line">0 17 * * * /bin/bash -c <span class="string">&#x27;source /path/to/your/venv/bin/activate &amp;&amp; /path/to/your/venv/bin/python /path/to/your_script.py &gt;&gt; /path/to/logfile.log 2&gt;&amp;1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>花了放假的两周，完成了这一个小项目。目的很单纯，一个是练习爬虫。<a href="https://lib.xialing.icu/">之前</a>爬取的图书馆网站的数据比较简单，因为不需要登录。这次爬一个难度大的。再一个是练习用户管理。最后，或许是为了做一个类似于<a href="https://github.com/shuosc/shu-scheduling-helper">上大</a>的排课助手做准备？也许会做吧，太累了。</p><p>总结这次项目，花了两三天研究明白了统一身份认证，花了两三天模拟了爬虫，登录成功。再花了一周左右设计了数据库表格，写完了前后端。</p><p>虽然对自己写出来的代码不像 <code>OOP</code> 的大作业一样，能够说明白每一句话的具体功能，不过，写了三四个网站，确实是越来越清晰了。向前走下去吧。</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>感谢同济大学提供的数据与网站。</p><p>感谢<a href="https://photo.tongji.edu.cn/">印象同济</a>的背景图片。</p>]]></content>
      
      
      <categories>
          
          <category> 同济 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>同济统一身份认证登录 1 系统</title>
      <link href="//2025/01/tongji-login/"/>
      <url>//2025/01/tongji-login/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>为 1 系统的通知公告内容存档。参见 <a href="https://github.com/XiaLing233/fetch-1-dot-tongji">Github 项目</a>。然而，请求内容需要 <code>Cookies</code>，列表如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;JSESSIONID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sessionid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yyy&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>否则会提示 <code>session</code> 不存在。那么，如何获取这两个 <code>Cookies</code> 就是我们这篇文章的主线。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="访问-https-1-tongji-edu-cn"><a href="#访问-https-1-tongji-edu-cn" class="headerlink" title="访问: https://1.tongji.edu.cn"></a>访问: <code>https://1.tongji.edu.cn</code></h3><p>首先，访问 <code>https://1.tongji.edu.cn</code>，因为之前没有登录过，因此会被重定向到登录界面 <code>https://iam.tongji.edu.cn</code>。</p><p>然而，这其中更细节的过程是什么？</p><p>使用 <code>curl</code> 进行测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -i 的意思是展示请求头</span></span><br><span class="line">curl -i https://1.tongji.edu.cn/ssologin</span><br><span class="line"><span class="comment"># 得到</span></span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Sat, 18 Jan 2025 05:50:45 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 1104</span><br><span class="line"><span class="comment"># 下略</span></span><br></pre></td></tr></table></figure><p>居然没有被重定向，而返回的是 <code>200 OK</code>。推测：从 <code>1.tongji.edu.cn</code> 重定向到其他网站应该是通过 <code>js</code> 实现的。</p><p>在浏览器中进一步排查，使用的方法比较原始。在 <code>Console</code> 中输入 <code>debugger</code>，会逐点暂停，可以观察到每一步的变化。</p><p>在 <code>app.23886001cadcb91ff1bc.js</code> 中，存在</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (o)</span><br><span class="line"><span class="comment">// xxx</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="string">&quot;/ssologin&quot;</span> === e.<span class="property">path</span> || <span class="string">&quot;/locallogin&quot;</span> === e.<span class="property">path</span> || <span class="string">&quot;/accountFreeze&quot;</span> === e.<span class="property">path</span> || <span class="string">&quot;/tip&quot;</span> === e.<span class="property">path</span> ? <span class="title function_">a</span>() : <span class="title function_">a</span>(<span class="number">3</span> === c ? &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/locallogin&quot;</span></span><br><span class="line">    &#125; : &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/ssologin&quot;</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>执行到此，地址栏会被替换为 <code>https://1.tongji.edu.cn/ssologin</code>。</p><p>而后可能会进行是否登录的验证。如果没有登录过，在这一函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">created</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="variable language_">this</span>.$loading(&#123;</span><br><span class="line">        <span class="attr">fullscreen</span>: !<span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">        , t = &#123;</span><br><span class="line">        <span class="attr">uid</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">uid</span>,</span><br><span class="line">        <span class="attr">token</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">token</span>,</span><br><span class="line">        <span class="attr">ts</span>: <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">ts</span></span><br><span class="line">    &#125;;</span><br><span class="line">    t.<span class="property">uid</span> &amp;&amp; t.<span class="property">token</span> ? <span class="variable language_">this</span>.<span class="title function_">init</span>(t, e) : (<span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&quot;clear_login_info&quot;</span>),</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">ssourl</span>) <span class="comment">// 这一步进行跳转</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>跳转到：<code>https://1.tongji.edu.cn/api/ssoservice/system/loginIn</code></p><h3 id="跳转到-https-1-tongji-edu-cn-api-ssoservice-system-loginIn"><a href="#跳转到-https-1-tongji-edu-cn-api-ssoservice-system-loginIn" class="headerlink" title="跳转到 https://1.tongji.edu.cn/api/ssoservice/system/loginIn"></a>跳转到 <code>https://1.tongji.edu.cn/api/ssoservice/system/loginIn</code></h3><p>方法是 <code>GET</code>，返回的非平凡的内容有：</p><ul><li>Cookie: <code>JESSIONID</code></li><li>返回头中的 <code>Location</code></li></ul><p>注意，<code>1.tongji</code> 有一个 <code>JSESSION</code>，<code>iam.tongji</code> 也有一个，两个是不一样的。</p><p>因为返回的状态码是 <code>302</code>，重定向，因此返回头中的 <code>Location</code> 字段存放了下一个要请求的地址。</p><h3 id="跳转到-https-iam-tongji-edu-cn-idp-oauth2-authorize-xxx"><a href="#跳转到-https-iam-tongji-edu-cn-idp-oauth2-authorize-xxx" class="headerlink" title="跳转到 https://iam.tongji.edu.cn/idp/oauth2/authorize?xxx"></a>跳转到 <code>https://iam.tongji.edu.cn/idp/oauth2/authorize?xxx</code></h3><p>方法是 <code>GET</code>，返回的非平凡内容有：</p><ul><li>Cookie: <code>_idp_authn_lc_key</code></li><li>Cookie: <code>SESSION</code></li><li>返回头中的 <code>Location</code></li></ul><h3 id="跳转到-https-iam-tongji-edu-cn-443-idp-AuthnEngine-xxx"><a href="#跳转到-https-iam-tongji-edu-cn-443-idp-AuthnEngine-xxx" class="headerlink" title="跳转到 https://iam.tongji.edu.cn:443/idp/AuthnEngine?xxx"></a>跳转到 <code>https://iam.tongji.edu.cn:443/idp/AuthnEngine?xxx</code></h3><p>方法是 <code>GET</code>，返回的非平凡内容有：</p><ul><li>返回头中的 <code>Location</code></li></ul><h3 id="跳转到-https-iam-tongji-edu-cn-443-idp-authcenter-ActionAuthChain-xxx"><a href="#跳转到-https-iam-tongji-edu-cn-443-idp-authcenter-ActionAuthChain-xxx" class="headerlink" title="跳转到 https://iam.tongji.edu.cn:443/idp/authcenter/ActionAuthChain?xxx"></a>跳转到 <code>https://iam.tongji.edu.cn:443/idp/authcenter/ActionAuthChain?xxx</code></h3><p>方法是 <code>GET</code>，返回的非平凡内容有：</p><ul><li>返回头中的 <code>Location</code></li></ul><h3 id="跳转到-https-iam-tongji-edu-cn-idp-authcenter-ActionAuthChain-xxx"><a href="#跳转到-https-iam-tongji-edu-cn-idp-authcenter-ActionAuthChain-xxx" class="headerlink" title="跳转到 https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?xxx"></a>跳转到 <code>https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?xxx</code></h3><p>方法是 <code>GET</code>，返回 <code>200 OK</code>，不需要额外处理。等待输入。</p><h3 id="稍适休息"><a href="#稍适休息" class="headerlink" title="稍适休息"></a>稍适休息</h3><p>前面的步骤都可以用一个 <code>session</code> 搞定，因为 <code>session</code> 会自动搞定重定向和 <code>Cookie</code> 的事情。换句话说，<code>Cookie</code> 不用显式写在请求头中。</p><p>目前为止，我们获得了什么呢？</p><ul><li><code>JSESSIONID</code></li><li><code>SESSION</code></li><li><code>_idp_authn_lc_key</code></li></ul><p>可以回顾一下这些 <code>Cookie</code> 都是在哪步获得的。</p><p>接下来，需要进行登录操作。如果在浏览器中点击登录，页面就会跳转，能获取到的第一个页面是向 <code>AuthnEngine?</code> 发送的请求。然而要是真的向它第一次发送请求，就会有问题：获取不到后续必要的 <code>Cookie</code>，换言之，就是验证失败了。为什么呢？</p><p>通过一步步排查 <code>js</code>，发现在点击按钮后，在 <code>secondAuth.js?date=202211232022</code> 中会有这样一个函数发送网络请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doSubmit</span>(<span class="params">usernameId</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> authenTypes = $(<span class="string">&quot;#authenTypes&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> spAuthentication = $(<span class="string">&quot;#spAuthentication&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> authMethodIDs = $(<span class="string">&quot;#authMethodIDs&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="comment">//var username = $(&quot;#&quot;+usernameId).val();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*if (typeof(passwordId) != &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">        $(&quot;#&quot; + passwordId).val(encryptByDES($(&quot;#&quot; + passwordId).val()));</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="comment">//debugger;</span></span><br><span class="line">    <span class="keyword">var</span> passmm=<span class="string">&quot;&quot;</span>; </span><br><span class="line">    <span class="keyword">var</span> dataes=$(<span class="string">&#x27;#&#x27;</span> + tabFromId).<span class="title function_">serialize</span>(); <span class="comment">// 储存了表格信息</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">typeof</span>(passwordId) != <span class="string">&quot;undefined&quot;</span> &amp;&amp; $(<span class="string">&quot;#&quot;</span> + passwordId).<span class="title function_">val</span>().<span class="property">length</span>&lt;<span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> pass=$(<span class="string">&quot;#&quot;</span> + passwordId).<span class="title function_">val</span>();</span><br><span class="line">        passmm=<span class="title function_">encryptByRSA</span>(pass); <span class="comment">// RSA 加密并 base64 编码后的密码</span></span><br><span class="line">        pass=<span class="built_in">encodeURIComponent</span>(pass);</span><br><span class="line">        dataes=dataes.<span class="title function_">replace</span>(<span class="string">&#x27;j_password=&#x27;</span>+pass,<span class="string">&#x27;j_password=&#x27;</span>+passmm); <span class="comment">// 把明文密码进行替换</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// basePath 是 /idp</span></span><br><span class="line">    <span class="keyword">var</span> urlPath = basePath + <span class="string">&quot;/authcenter/ActionAuthChain?authnLcKey=&quot;</span>+$(<span class="string">&quot;#authnLcKey&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">var</span> view = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">&#x27;.loginBt&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;disabled&#x27;</span>, <span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123; <span class="comment">// 发送请求，方法是 POST，数据是 dataes</span></span><br><span class="line">        <span class="attr">url</span>: urlPath,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">cache</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">async</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">data</span>: dataes,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ActionAuthChain&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">            $(<span class="string">&quot;#loginButton&quot;</span>).<span class="title function_">html</span>(login1);</span><br><span class="line">            view = data.<span class="property">view</span>;</span><br><span class="line">            <span class="keyword">if</span> (!data.<span class="property">loginFailed</span> || data.<span class="property">loginFailed</span> == <span class="string">&quot;false&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">//覆盖掉 明文密码串</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_">typeof</span>(passwordId) != <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">                    $(<span class="string">&quot;#&quot;</span> + passwordId).<span class="title function_">val</span>(passmm);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                    $(<span class="string">&quot;#loginButton&quot;</span>).<span class="title function_">removeAttr</span>(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">                &#125;,<span class="number">1500</span>);</span><br><span class="line">                <span class="title function_">form_submit</span>();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// $(&quot;#loginButton&quot;).removeAttr(&quot;disabled&quot;);</span></span><br><span class="line">            $(<span class="string">&#x27;.loginBt&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                $(<span class="variable language_">this</span>).<span class="title function_">removeAttr</span>(<span class="string">&#x27;disabled&#x27;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* if (typeof(passwordId) != &quot;undefined&quot;) &#123;</span></span><br><span class="line"><span class="comment">                 $(&quot;#&quot; + passwordId).val(decryptByDESModeEBC($(&quot;#&quot; + passwordId).val()));</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">            $(<span class="string">&quot;#zhezhao&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">            <span class="comment">//show view base view</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 下略...</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="向-https-iam-tongji-edu-cn-idp-authcenter-ActionAuthChain-xxx-发送请求"><a href="#向-https-iam-tongji-edu-cn-idp-authcenter-ActionAuthChain-xxx-发送请求" class="headerlink" title="向 https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?xxx 发送请求"></a>向 <code>https://iam.tongji.edu.cn/idp/authcenter/ActionAuthChain?xxx</code> 发送请求</h3><p>具体发送什么，上面的代码块注释已经说的很清楚了。要补充的一点是，需要设置好 <code>Content-type</code> 和 <code>Content-Length</code>，不然不会得到 <code>Set-Cookie</code> 字段。</p><p>如果登录成功，会返回：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;loginFailed&quot;</span><span class="punctuation">:</span><span class="string">&quot;false&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>如果登录失败，会返回一个 <code>HTML</code> 格式内容，提示要加强认证，也就是手机号接收验证码；或者是登录失败，还有 <code>%d</code> 次尝试机会。要是触发了加强认证，就不太好办，暂时没有想好用什么办法。</p><h3 id="向-https-iam-tongji-edu-cn-idp-AuthnEngine-xxx-发送请求"><a href="#向-https-iam-tongji-edu-cn-idp-AuthnEngine-xxx-发送请求" class="headerlink" title="向 https://iam.tongji.edu.cn/idp/AuthnEngine?xxx 发送请求"></a>向 <code>https://iam.tongji.edu.cn/idp/AuthnEngine?xxx</code> 发送请求</h3><p>该有的还得有，给这个链接发送内容也是必要的。</p><p>发送的内容是一样的，再发送一次，可以得到</p><ul><li>Cookie: <code>_idp_session</code></li><li>Location</li></ul><h3 id="跳转到-https-iam-tongji-edu-cn-443-idp-profile-OAUTH2-AuthorizationCode-SSO-xxx"><a href="#跳转到-https-iam-tongji-edu-cn-443-idp-profile-OAUTH2-AuthorizationCode-SSO-xxx" class="headerlink" title="跳转到 https://iam.tongji.edu.cn:443/idp/profile/OAUTH2/AuthorizationCode/SSO?xxx"></a>跳转到 <code>https://iam.tongji.edu.cn:443/idp/profile/OAUTH2/AuthorizationCode/SSO?xxx</code></h3><blockquote><p>注意需要重新设置一下请求头，不要再带着 <code>Content-xxx</code> 了！</p></blockquote><p>方法是 <code>GET</code>，可以得到</p><ul><li>Cookie: <code>_idp_authn_lc_key</code> 是不是有些眼熟？</li><li>Location</li></ul><h3 id="跳转到-https-1-tongji-edu-cn-api-ssoservice-system-loginIn-xxx"><a href="#跳转到-https-1-tongji-edu-cn-api-ssoservice-system-loginIn-xxx" class="headerlink" title="跳转到 https://1.tongji.edu.cn/api/ssoservice/system/loginIn?xxx"></a>跳转到 <code>https://1.tongji.edu.cn/api/ssoservice/system/loginIn?xxx</code></h3><blockquote><p>终于到了 1 系统的地界了！</p></blockquote><p>我们已经有 <code>JSESSIONID</code> 了。跳转到的这个链接是不是很眼熟（看看第二个 section）？由于之前获取到的 <code>JSESSIONID</code> 并没有过期，所以我们可以使用原 <code>Cookie</code> 来访问。</p><p>当前链接会返回一个 <code>302</code>，给我们重定向到下面的链接。</p><h3 id="跳转到-http-1-tongji-edu-cn-ssologin-token-xxx-uid-yyy-ts-timestamp"><a href="#跳转到-http-1-tongji-edu-cn-ssologin-token-xxx-uid-yyy-ts-timestamp" class="headerlink" title="跳转到 http://1.tongji.edu.cn/ssologin?token=xxx&amp;uid=yyy&amp;ts=timestamp"></a>跳转到 <code>http://1.tongji.edu.cn/ssologin?token=xxx&amp;uid=yyy&amp;ts=timestamp</code></h3><p>和前面跳转到 <code>iam</code> 不同，这次我们跳转到了 1 系统，这个链接同时包含了</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span>  <span class="string">&quot;xxx-yyy-zzzz&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1737777777&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这三个东西很重要，后续请求的时候需要它，来获得 <code>sessionid</code>。</p><p>结束了。当前链接会返回一个 <code>200 OK</code>，然而，我们还缺少一个 <code>sessionid</code> 没有获得呢！</p><p>注意到 <code>Network</code> 中有一个向 <code>https://1.tongji.edu.cn/api/sessionservice/session/login</code> 发送的 <code>POST</code> 请求，设置了这一 <code>Cookie</code>。</p><h3 id="向-https-1-tongji-edu-cn-api-sessionservice-session-login-发送请求"><a href="#向-https-1-tongji-edu-cn-api-sessionservice-session-login-发送请求" class="headerlink" title="向 https://1.tongji.edu.cn/api/sessionservice/session/login 发送请求"></a>向 <code>https://1.tongji.edu.cn/api/sessionservice/session/login</code> 发送请求</h3><p>发送的是 <code>POST</code> 请求，发送的内容就是刚刚提到的三元组。</p><p>返回的非平凡内容有：</p><ul><li>Cookie: <code>sessionid</code></li></ul><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>到此为止，我们获得了全部需要的 <code>Cookies</code>，完结撒花。</p><p>至于说如何进行内容的加密、编码，以及如何模拟请求，会有的。</p>]]></content>
      
      
      <categories>
          
          <category> Cryptography </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>同济的 IP 范围</title>
      <link href="//2025/01/tongji-ip/"/>
      <url>//2025/01/tongji-ip/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>想要让我的网站限制只有同济范围内才能访问，如何实现呢？</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>需要知道同济的 IP 段，有几种方法：</p><ul><li>学校官网等资料</li><li><code>ping foo.tongji.edu.cn</code>，一个一个排查</li><li><code>nslookup</code> 等其他工具</li><li>在线工具</li></ul><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>最终发现，<a href="https://ipinfo.io/">ipinfo.io</a> 有很好的查询方案。</p><p>首先，已经确定了同济的 IP 范围在 <code>202.120.0.0/16</code>，然而，真的同济能这么阔绰，有这么多 <code>IP</code> 拿在手中吗？</p><p><strong>不是的。</strong></p><p>经过排查，<a href="https://ipinfo.io/ips/202.120.0.0/16">https://ipinfo.io/ips/202.120.0.0/16</a>，发现同济的 <code>IP</code> 范围是：</p><ul><li>202.120.163.0&#x2F;24</li><li>202.120.164.0&#x2F;24</li><li>202.120.166.0&#x2F;24</li><li>202.120.188.0&#x2F;24</li><li>202.120.189.0&#x2F;24</li><li>202.120.190.0&#x2F;24</li><li>202.120.191.0&#x2F;24</li></ul><p>这些是同济域名对应的 <code>IP</code> 段，可能不全。</p><p>但是要注意，使用学校的 <code>VPN</code> 之后，<code>IP</code> 块是 <code>111.187.0.0/17</code>，虽然也是上海教育网，但是和学校网站的 <code>IP</code> 段不同（也就是和上面列出来的范围不同）。</p><p>等回学校再看看学校的校园网 <code>IP</code> 是啥。</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>subconverter 后台服务运行</title>
      <link href="//2025/01/subconverter-background-run/"/>
      <url>//2025/01/subconverter-background-run/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>希望使用自定义规则。subconverter 的 release 版本的请求头有一些字段，导致其被一些机场网络服务商屏蔽（<a href="../../../2024/10/clash-sub-link/">参见之前的文章</a>），自己编译的版本每次需要手动打开运行，点击 Clash 进行节点更新，太麻烦。因此使用 Windows 服务的形式来让 exe 后台运行。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>nssm 是一个开源工具，用于将任何 exe 安装为 Windows 服务。下载地址<a href="https://nssm.cc/download">https://nssm.cc/download</a>，国内访问有点慢。</p><h3 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h3><p>把 exe 注册为服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nssm install YourServiceName <span class="string">&quot;C:\path\to\your_program.exe&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>：如果文件名包含空格，需要用双引号括起来。否则执行 <code>net start</code> 会报错：发生特定服务错误：3。请键入 NET HELPMSG 3547。如果已经这样做了，可以通过 <code>nssm edit &lt;service_name&gt;</code> 来修改路径。</p></blockquote><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start &lt;service_name&gt;</span><br></pre></td></tr></table></figure><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>这样应该就可以让节点的定时更新起作用了。当然，还有可能出现无法请求到自定义规则集的情况，到时候再看看吧。</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器常见问题</title>
      <link href="//2025/01/server-experience/"/>
      <url>//2025/01/server-experience/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文总结了在服务器使用上常见的问题。</p><h2 id="MySQL-占用内存过高"><a href="#MySQL-占用内存过高" class="headerlink" title="MySQL 占用内存过高"></a><code>MySQL</code> 占用内存过高</h2><p>参见 <code>https://stackoverflow.com/questions/10676753/reducing-memory-consumption-of-mysql-on-ubuntuaws-micro-instance</code>。</p><p>具体做法</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">performance_schema</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以 cut off 近 20% 的内存占用，我的服务器一共约 900MB 的内存，也就是释放了约 200MB 的空间出来。</p><p>之所以发现这个问题，是因为 2025-01-01 早上起来发现服务器登录不上去，当天凌晨的 CPU 占用率 100%。用 <code>top</code> 命令发现内存只剩下 5% 左右，很容易溢出。</p><p>还有一个方案是</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">key_buffer</span>              = <span class="number">8</span>M </span><br><span class="line"><span class="attr">max_connections</span>         = <span class="number">30</span> <span class="comment"># Limit connections</span></span><br><span class="line"><span class="attr">query_cache_size</span>        = <span class="number">8</span>M <span class="comment"># try 4m if not enough </span></span><br><span class="line"><span class="attr">query_cache_limit</span>       = <span class="number">512</span>K</span><br><span class="line"><span class="attr">thread_stack</span>            = <span class="number">128</span>K</span><br></pre></td></tr></table></figure><p>然而 <code>query_cache_size</code> 和 <code>query_cache_limit</code> 已经 <code>deprecated</code>，而且 <code>key_buffer</code> 要替换为 <code>key_buffer_size</code>，我看了看，效果不是很明显。</p><h2 id="停止再启动服务器后，连接不上了"><a href="#停止再启动服务器后，连接不上了" class="headerlink" title="停止再启动服务器后，连接不上了"></a>停止再启动服务器后，连接不上了</h2><p>这里之所以采用停止再启动的说法，是因为重启不会改变机器的 <code>IP</code>，而停止后会的。所以说，要么申请一个弹性 <code>IP</code>，就始终是你了。要么就每次停止再启动后，手动修改 <code>DNS</code> 解析。还是前者方便一些吧。</p><p>注意，停止再启动后，服务器的 <code>IP</code> 会变，所以可能引发的现象是：原来的域名提示连接超时；通过 <code>XSHELL</code> 等第三方 <code>ssh</code> 连接不上服务器，<code>Connection Failed...</code>。本质就是服务器的 <code>IP</code> 变了。</p><h2 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h2><p>用 Github 白嫖的 DigitalOcean 服务器默认是 root 用户，太可怕了。因此新建一个用户，并进行 ssh 的配置。且看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser xialing <span class="comment"># 新建一个叫 xialing 的用户</span></span><br><span class="line">sudo usermod -aG sudo xialing <span class="comment"># 把用户加到 sudo 组</span></span><br></pre></td></tr></table></figure><p>这样的话，每次使用 sudo 还需要输入密码，不好，因为已经可以通过 ssh 登录了（见下），所以不想输入密码。</p><p>使用 <code>sudo visudo</code> 修改 <code>visudo</code>，其实用 <code>vim</code> 修改 <code>/etc/visudo</code> 也可以。在文件的 <strong>最后一行</strong> 添加 <code>xialing ALL=(ALL) NOPASSWD: ALL</code>。</p><p>通过 ssh 登录，使用 <code>XShell</code> 工具选项卡的密钥对生成工具，把公钥复制到 <code>~</code> 下的 <code>.ssh</code> 下的 <code>authorized_keys</code> 文件中，如果没有的话，新建这个文件夹。</p><p>完毕。</p><h2 id="未完待续…"><a href="#未完待续…" class="headerlink" title="未完待续…"></a>未完待续…</h2>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>定期总结(2024-12)|Letting Go</title>
      <link href="//2024/12/regular-sum-up-2412/"/>
      <url>//2024/12/regular-sum-up-2412/</url>
      
        <content type="html"><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>好久没有动笔写过日记了，这学期的事务繁忙，居然每天抽不出二十分钟写写日记，想来荒唐，居然要用微信语音记录日常。。上午刚刚考完 <code>oop</code>，除了几个知识点没复习到之外，我认为发挥的还是不错的，比高程好。再加上上完了这学期的最后一节课——组合数学（不管是组合数学的最后一节还是所有课程的最后一节），正式宣告了考试周自习时光的开始，有些小激动。之前为了复习 <code>oop</code> 和完成组合数学的作业，熬了两个大夜，两三点钟才睡觉，第二天七八点钟就要起来。我觉得，我先前保持的健康作息，可能就是为了这种时间段预备的吧。</p><h2 id="单向奔赴"><a href="#单向奔赴" class="headerlink" title="单向奔赴"></a>单向奔赴</h2><p>既然现在有时间了，就可以静下心来好好写点自己的近况。有意思的是，从大一下学期开始，每学期我都会喜欢上一个女生，找到她们的闪光点。然后，不管是线下要微信还是线上要微信，之后开始尬聊。第一段呢，是因为我干涉对方的生活太多，可能她心里默念的是：你计拔谁啊？整天时间我？所以我最后也不去找她了。意料之中，从八月小学期结束之后，她也没再来找过我，确实对我一点感觉都没有。</p><blockquote><p>硬盘里的女神下了又删，去年夏天后就没聊过天。——《东京不太热》</p></blockquote><p>这句歌词真是应景啊。</p><p>而这学期，大概是十月中旬吧（因为还没具体文字化这学期的日记），开始留意到有好多门课和我是一个老师的女同学。她独来独往，平常上课坐在第三排，或者是前几排，而且总是和我坐在不同的一侧。比如，计科导，我坐在左边，她就坐在右边；<code>oop</code>，我坐在右边，她又跑到左边去了。我来回换边是为了调剂视力，不然不就斜视了吗，不知道她怎么想，怎么可能这么巧，每节课都和我对着坐呢？</p><p>后来，有一天，我先做了计科导的 <em>pre</em>，再在晚上做了毛概的 <em>pre</em>，可能是说话多了吧，给自己壮了壮胆，犹豫了十分钟，最后在九点钟毛概课上要了对方的微信。这次比上次怂，是线上要的微信。最后是加上了。看到她看着手机在笑，不知道在笑什么，应该只是看到好笑的东西之余接受了我的好友请求吧，别想多了。</p><p>之后呢，有一搭没一搭地和对方聊天，祝她生日快乐啊；偷偷地也到她经常在的图书馆三楼自习啊（当然是隔了十几个桌子）——只不过对方似乎不知道我的存在罢了。后来也就不去了。再之后呢，大概是受到了上次单相思的失败经历影响，觉得，嗯，对方肯定是不喜欢我。那我还热脸贴冷屁股干啥呢？很聪明地（不是自作聪明）给自己定下了一个 <em>ddl</em>，如果到了 15 周周日 23: 59: 59，她仍然不主动联系我，我就心死。</p><p>好巧不巧的是，正好十五周留了个 <code>oop</code> 互验，然后我可能因为和朋友聊天的影响吧，觉得，还是再试一试吧，所以在某天晚上十一点，回宿舍上床之后，给对方发了个微信，问要不要聊聊天。发完我就想睡觉了，我估计，多半是，啊，不好意思，太晚了，改天再说。因为她说过自己睡得早，结果发现比我睡得晚。。随便聊了几句，说了说 <code>oop</code>，聊了聊其他的一些东西吧，我真觉得是尬聊。聊上头差点就表白了，现在想想，幸亏没有。我也不知道是我表达的太隐晦，还是说真的对方比较钝感，居然在我疯狂的暗示下，回复我 <em>“不过，我好像没能理解？”</em>。我倾向于觉得这是在装傻，都大学生了怎么可能察觉不到这种感觉呢。如果不是装傻，那就是对我一点感觉都没有，都没往这方面想。。所以，算了算了。和她约了互验。</p><p>后续当然还在关注她的动态啦。上计科导的时候，有一个女生讲了一个自己做的卡面展示网站，是以 <em>光与夜之恋</em> 为主题的，一个恋爱乙游。看到她偷偷微笑，拿手机拍了张照片（是她拍 ppt，不是我拍对方，我还没那么变态）。当毛概课老师讲到<code>省份A</code>傻子瓜子的事例时，来自<code>省份A</code>的她露出了满脸疑惑的表情，非常可爱。</p><p>不过呢，这些都是我单方面的想法。她平常上课路过我、见到我，也没啥反应，甚至都不往我这边看一眼，说明我在她心中就是个普通人呗。后面还给她发过几次微信，一次是六级结束之后，心力交瘁的时候，想问她，有没有时间线下聊聊天。这也是犹豫了很久才发出去的。她说，能不能考完试再说，并且和朋友已经吐槽好久六级了。她英语是没有那么突出，不是半免生，这学期还有英语课。看完了她的回复，我躺在艺传学院图书馆的椅子上，仰天大笑。这时外面飘忽忽地传来了《卡农》的钢琴曲，让我以为到了图书馆闭馆的时间。</p><p>失败了。后来有一次下了毛概课，我速速离开教室，没想到在扫单车的时候碰到了她。这应该是我第一次和她线下单独说话，不过多半是最后一次了。再后来发现了致臻楼这个好地方，分享给了她。她出我意料地回复了一大串，不过我发完消息就后悔了，觉得是在打扰对方，太不好了。所以尬聊没几句，就以不打扰她学习为由，匆匆收了场。毕竟是期末季呢。</p><p>再后来也就没和她说过话，微信不联系已经有一周了。这周也想了很多事情，在知乎刷啊刷，了解到如果一个女生喜欢自己，会是什么状态。是的呢，我本来就不是一个很主动的人，但是当我遇到自己真心喜欢的人，还是会主动要对方的联系方式，就算自己内耗几个小时，也会给对方发微信，主动起来。回想我和她的不到十次聊天，翻过来覆过去都看遍了，除了 <code>oop</code> 互验这种万不得已的情况，她才会主动联系我一次之外，剩下的都是我主动。如果我代入一下的话，我确实周围也有这些朋友——我觉得这些人不错，偶尔也聊得来，但是我是绝对不会主动找他们聊天的。抛开性别的因素（因为我上了大学，就没有几个异性的联系方式），也绝对不可能发展为男女朋友关系。所以总算是认清事实了。</p><p>这一周考试周，正好都是和她一门课的课程考试，被分配在一个考场。好巧不巧，数字逻辑复习课的时候&#x2F;考计科导的时候，和之前第一段感情的女生隔了一排坐&#x2F;分在一个考场（她这学期没有一门课和我一样），我看到她之后，一点感觉都没有了。所以我有时间翻翻之前的日记，那时候什么命中注定？什么天选之子？净**是放屁！完全是自己臆想出来的结局，单方面的自我**、自我感动。是啊，换个角度想，如果一个和我是这种关系的朋友，内耗了很久，我哪里知道呢？哪里在乎呢（说实话）？所以最终的结局就是，你是我青春的全部（当然也不至于是全部），但我在你青春中屁也不是。</p><blockquote><p>为什么我用尽全身力气，却换来半生回忆？——《原来你也在这里》</p></blockquote><p>说回考试周，和她在一个考场，考第一门的时候，考试时偶尔还会想想她，在想，这道题有坑啊，她会不会看出来呢？不过已经不会再瞟她几眼了。等到后面的考试，就是考完就走，一点也不停留。</p><p>当然可能和她没关系吧？可能是我单纯心死了。不只是对她心死，也是对周遭的世界无情冷酷。甭提什么不主动的事儿，我不主动的时候，求我也没用。和我比不主动？拜托，铁铁，单身了** 20 年的人诶！我也就上大学之后主动过，之前，也有过吧，不过高中这三年是彻底心死了。现在啊，也快了。不过这段感情最好的结局就是现在这样，我读懂了对方的暗示，然后，主动放弃。宁可错认为是礼貌，也不要自作多情越界打扰对方。</p><p>有人说啊，万一对方只是不善于表达呢。不善于表达？那得看对谁。我也是上学期通过互验认识的现在的铁哥们，虽然这几天我有点不爱说话，可能有点伤了他。但是，在我找完他互验之后，剩下好多次都是他主动找我聊天。不是说我是男同，而是说，朋友是这么来的。不可能是我单方面讨好。我客观评价，现在这位兄弟也不是很主动的类型，但是他也会和我聊好多。所以说，什么不善于表达，只是不把富于表达的一面展示给你看而已。跟你倾诉是在消耗情绪，而不是提供给对方情绪价值。我何必一味地讨好对方呢？如果我对她好，她喜欢我。那么当遇到其他对她更好的人的时候，我就只能傻眼看着她跟对方离开，然后心里还会祝福他们——反正只要她幸福就好了，是不是和我一起走下去，那又如何呢？</p><p>所以，</p><blockquote><p>有些故事还没讲完那就算了吧。——《那些花儿》</p></blockquote><p>所以现在的情绪就是，单纯觉得自己配不上对方。啊，对方是国奖啊（虽然我觉得国奖也不一定如何，有些拿了国奖的人着实我看不入眼，但是当自己喜欢的人是国奖的时候，就会自惭形秽了），啊，对方大大方方啊，很有规矩啊，善于表达啊，很可爱啊。发现了她在校史馆志愿讲解，不知道是为了学时还是酬金吧。反正这可能是压死骆驼的最后一根稻草，觉得，我真的配不上对方。不过也算是知道对方一天到晚的日程安排是什么了。</p><p>有时候觉得自己很喜欢破案，体现在很喜欢玩扫雷这款游戏上——通过一些碎片化的线索推理出来一些事情。上大学之前，看到网上有一些什么打破信息差的文章。现在想想，我从来没有这种问题的困扰——加了一堆小群，有什么小道消息，只要有一个群说到了，我都能接触到二手消息，甚至有时候是自己获得第一手消息。不过现在嫌这些群烦，几乎都屏蔽了。虽然说对方似乎不反感这种行为，不过我还是不打扰她了。因为，她的不反感应该是建立在低估我时间水平的基础上的，如果知道我这样窥视她的生活，估计早把我拉黑了吧。</p><h2 id="恋爱循环"><a href="#恋爱循环" class="headerlink" title="恋爱循环"></a>恋爱循环</h2><p>我的每一段恋爱，甚至不能叫恋爱，叫求爱吧，都是这样的循环：</p><p>一开始，是《说爱你》里面唱得那样，</p><blockquote><p>一开始，我只顾着看你，装作不经意，心却飘过去。还窃喜，你没发现我，躲在角落。——《说爱你》</p></blockquote><p>觉得，哇，真的找到这辈子的另一半了？</p><blockquote><p>说好从今以后都牵着手，因为要走很远。——《勾指起誓》</p></blockquote><p>最自我感动的时候，是</p><blockquote><p>从此一生有你我都陪在你身边。——《一生有你》</p></blockquote><p>这时候就开始上头了，每天内耗，啊，和她走一辈子啊，她喜不喜欢我啊，她的某一个动作，某一句话啊。当时毛概课 <em>pre</em> 的时候，还即兴把这段歌词念出来了，不过，我的心意多半是没传达到。最后收到的就是失望而已。不过没关系，一觉醒来，想想周一几乎每节课都能遇到她，周三的数字逻辑，周五的 <code>oop</code>，啊，心里又充满了期待。</p><p>这学期最有干劲的时候就是十一月份，刚加到她微信的时候。因为她周末去图书馆很早，所以我想创造一些线下聊天的机会。造化弄人吧，那个周末她正好出去玩了，我就没能遂愿。后来在图书馆打水的时候，路过她的位置，也好像没看到我一样，一方面是因为人家专注，因为我 <code>coding</code> 的时候也注意不到边上有谁；另一方面就是我也不是什么重要角色。但是现在想想，这种模糊的行为真是越界啊、真是打扰啊。不过如果对方喜欢自己，这种行为反而是加分项吧。所以还是，遇没遇到对的人的问题。</p><blockquote><p>我等的人她在多远的未来？——《遇见》</p></blockquote><p>就开始迷茫啊，内耗啊，睡觉的时候想着情感问题都觉得很享受，可能因为我是偏 <code>m</code> 的吧。很喜欢蔡健雅的歌曲，就像 <em>MusicRadio</em> 的主播评价的，感觉是很成熟的声音。我的青春也不是没伤痕，为了能够体会到爱情，我要</p><blockquote><p>进化成更好的人。——《达尔文》</p></blockquote><p>不过这种进化还是单方面的事情，对方完全感受不到，自己的感情也完全传达不到。每天晚上，出了图书馆（好久没去了）、致臻楼，走回宿舍，看着</p><blockquote><p>一盏一盏街灯烘焙了夜。——《东京不太热》</p></blockquote><p>走过友园 14-15，</p><blockquote><p>悄悄看外面的情侣暧昧牵着手。——《东京不太热》</p></blockquote><p>当然不只有牵手的，啥都有。所以默默回到我偏远而宁静的 19-20 号楼。</p><p>看着这世界那么多人，但，真的很安静。</p><p>熬了两个夜之后，今天下午在宿舍舒舒服服睡了一觉，睡到了晚饭时间。从宿舍出来，沿着嘉五路走。桂花不知道开了第几次，槐树还是梧桐树的叶子掉的差不多了，偶尔有自行车从身边经过——这个世界好安静啊！</p><blockquote><p>身旁那么多人，可世界不声不响。——《这世界那么多人》</p></blockquote><p>虽然心里多少还有点期待烟火气吧，不过真的要是整天让我在四平那种工地一样的、人潮密集的环境里学习，我还是会选择嘉定。不在于校址偏，也不在于住的偏，再偏，身边有那个人，也就够了。吾心安处是故乡。</p><blockquote><p>ごめん好き<br>やっぱ好き<br>ずっと好き<br>君が好き<br>ダメだ好き<br>無理だ好き<br>全部好き<br>君が好き<br>——《初恋のひと。》</p></blockquote><p>这几个 <em>suki</em> 连招真是戳到我了，在单相思最上头的时候，听到这种话，真的觉得要到極楽浄土（ごくらく）了。</p><p>前一段时间很喜欢听收音机，像《达尔文》《霓虹甜心》那些歌曲都是在电台听到的，可以打破信息茧房。突然想到，我姑姑之前和我说过，家严小时候就愿意抱着半导体听评书，这算是遗传吧？前一阵子我特别愿意用歌词和哥们聊天，结果，有一天在家庭的小群里，家严也发了句歌词来回复。唉唉，亲生的，跑不掉了。</p><p>收音机虽然是为了四六级买的，不过因为是德生的，品质不错，所以时常会听一听。听 <em>MusicRadio</em> 比较多，前一阵听到《北极雪》这首歌，旋律很美。</p><blockquote><p>也许我的眼泪，我的笑颜，只是完美的表演。——《北极雪》</p></blockquote><p>后来还有一首周蕙的《话题》，歌词很扎心，非常适合在单相思结束的阶段，给最后一根稻草：</p><blockquote><p>爱不爱结果都叫人伤心，我不知道该怎么做决定。分手是要先哭泣，还是先忘记？你是否也有相同的难题。<br>…<br>该爱着你，该离开你，还是继续，逃避。——《话题》</p></blockquote><p>说到周蕙，了解到这个歌手，还是图书馆的闭馆铃。嘉图的闭馆铃比较多元，不像四平的只有 <em>3 1 2 5 5 2 3 1</em>。有一首《约定》，是很甜的一首歌。</p><p>这学期在图书馆比较多，应该是见证了好几代闭馆铃。暑假军训的时候是 <em>Say Hello</em> 和 <em>Stay With Me</em> 。后来是《同桌的你》《约定》《千千阙歌》《纸飞机》，那段时间我在 10 楼自习得比较多。再后来是 <em>Always With Me</em>， 昼夜的《冬眠》钢琴曲，以及 <em>Variations On The Canon By Pachelbel</em>（也就是我在艺传楼听到的那首歌），这段时间在三楼自习得比较多，每次十点十五铃声一想，她就很准时得收拾东西离开图书馆，所以她应该没听到过后面的几首歌吧？哈哈。</p><blockquote><p>或许就像他们说，爱情只会让人变愚蠢。自作多情爱的太太真。<br><em>That’s why I’m letting go</em>，我终于舍得为你放开手。因为爱你爱到我心痛，但你却不懂。——<em>Letting Go</em></p></blockquote><p>第一次听到这首歌是在新北苑呢。</p><h2 id="continue"><a href="#continue" class="headerlink" title="continue;"></a><code>continue;</code></h2><p>生活还是要继续。</p><p>当我能写下这篇文章的时候，就说明，我心里已经放下这段感情了。人丑就要多读书，提升自己。我算是比较暖的类型吧，喜欢关心对方。如果一次两次的关心，就能让对方感受到情意，那说明对方至少还是喜欢我这个人的，而不是我的好。要是四次五次的，那我就真是舔狗了。虽然不愿意接受这个词。不过，如果两个都是舔狗，互相关心对方，那不就绝杀了？看到知乎有个回答，一个人是小丑，两个人就是王炸（不管是本义还是衍生义上）呢。</p><p>唉，写了这么多，还有 <code>oop</code> 和数字逻辑的大作业要做。</p><p>19 周考完试就赶紧回家吧，世界上最爱你的女人，是妈妈啊。</p><p>2024年12月27日晚<br>致臻楼</p>]]></content>
      
      
      <categories>
          
          <category> 个人总结 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>更新网站上课表的步骤</title>
      <link href="//2024/12/routine-update-course/"/>
      <url>//2024/12/routine-update-course/</url>
      
        <content type="html"><![CDATA[<h2 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h2><p>课表更新的时间有三个阶段：</p><ul><li>上学期 <code>16</code> 周左右的第一轮选课前夕；</li><li>下学期开学后第四轮选课结束，教务处发布某些选修课调整关停的通知后；</li><li>下学期期中退课结束后。</li></ul><h2 id="更新流程与方法"><a href="#更新流程与方法" class="headerlink" title="更新流程与方法"></a>更新流程与方法</h2><h3 id="在个人电脑上"><a href="#在个人电脑上" class="headerlink" title="在个人电脑上"></a>在个人电脑上</h3><blockquote><p><strong>记得备份！记得备份，记得备份！</strong></p></blockquote><h4 id="Excel-表格"><a href="#Excel-表格" class="headerlink" title="Excel 表格"></a>Excel 表格</h4><p>访问 <code>1.tongji.edu.cn</code>，切换到全校课表，把对应学期的全校课表导出为 <code>Excel</code> 表格；</p><p><img src="https://static.xialing.icu/img/202412150945515.webp" alt="步骤一"></p><h4 id="导出为-csv"><a href="#导出为-csv" class="headerlink" title="导出为 .csv"></a>导出为 .csv</h4><p>把 <code>Excel</code> 表格导出为 <code>.csv</code> 文件；</p><p>方法：<code>文件</code>-&gt;<code>另存为</code>-&gt;<code>选择位置</code>-&gt;<code>在下拉菜单选择(.csv)</code>-&gt;<code>保存</code></p><p><img src="https://static.xialing.icu/img/202412150949919.webp" alt="步骤二的部分展示"></p><p>这两个有什么区别吗？如果选择<strong>不含有</strong> <code>UTF-8</code> 的（靠下面的），编码会变成 <code>GB2312</code>，在进行 <code>pandas</code> 处理的时候会有问题，提示无法读取对应编码（因为 <code>pandas</code> 默认读 <code>UTF-8</code>），然而如果在 <code>python</code> 程序中指定 <code>coding</code> 似乎也无法解决问题，所以这时，可以通过 <code>VSCode</code> 打开 <code>.csv</code> 文件，先选择 <code>按编码打开</code>，<code>GB2312</code>；再选择 <code>按编码保存</code>，<code>UTF-8 with BOM</code>，解决！至于说没有 <code>BOM</code> 的单纯 <code>UTF-8</code> 怎样，以后可以试试..</p><h4 id="进行数据处理"><a href="#进行数据处理" class="headerlink" title="进行数据处理"></a>进行数据处理</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新：删除开课学院后面烦人的 \r</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前文件夹中所有 .csv 文件</span></span><br><span class="line">csv_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(<span class="string">&#x27;./ori_csv&#x27;</span>) <span class="keyword">if</span> f.endswith(<span class="string">&#x27;.csv&#x27;</span>) <span class="keyword">and</span> <span class="string">&#x27;学年&#x27;</span> <span class="keyword">in</span> f]</span><br><span class="line"><span class="built_in">print</span>(csv_files) <span class="comment"># 打印读取到的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前文件夹中所有已处理的 .csv 文件</span></span><br><span class="line">edited_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(<span class="string">&#x27;.&#x27;</span>) <span class="keyword">if</span> f.endswith(<span class="string">&#x27;_edited.csv&#x27;</span>)]</span><br><span class="line"><span class="built_in">print</span>(edited_files) <span class="comment"># 打印读取到的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 过滤掉已经处理过的文件</span></span><br><span class="line">csv_files = [f <span class="keyword">for</span> f <span class="keyword">in</span> csv_files <span class="keyword">if</span> f.replace(<span class="string">&#x27;.csv&#x27;</span>, <span class="string">&#x27;_edited.csv&#x27;</span>) <span class="keyword">not</span> <span class="keyword">in</span> edited_files]</span><br><span class="line"><span class="built_in">print</span>(csv_files) <span class="comment"># 打印读取到的文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于存储所有修改后的 DataFrame</span></span><br><span class="line">processed_dfs = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> csv_files:</span><br><span class="line">    <span class="comment"># 从文件名提取学期信息，例如 &quot;2007-2008学年第1学期&quot;</span></span><br><span class="line">    semester = file.split(<span class="string">&#x27;工作安排表&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取 CSV 文件</span></span><br><span class="line">    ori_path = <span class="string">&#x27;./ori_csv/&#x27;</span></span><br><span class="line">    df = pd.read_csv(ori_path + file, skiprows=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(df)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删除“负责人”列（如果存在）</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;负责人&quot;</span> <span class="keyword">in</span> df.columns:</span><br><span class="line">        df = df.drop(columns=[<span class="string">&quot;负责人&quot;</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 添加“开课学院”列并初始化为空字符串</span></span><br><span class="line">    df[<span class="string">&#x27;开课学院&#x27;</span>] = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理“开课学院”的逻辑</span></span><br><span class="line">    current_department = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    skip_next = <span class="literal">False</span>  <span class="comment"># 用于控制跳过下一行的标志</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i, row <span class="keyword">in</span> df.iterrows():</span><br><span class="line">        <span class="comment"># print(row)</span></span><br><span class="line">        <span class="comment"># time.sleep(1)</span></span><br><span class="line">        <span class="keyword">if</span> skip_next:</span><br><span class="line">            <span class="comment"># 如果需要跳过当前行，则重置标志并继续下一次循环</span></span><br><span class="line">            skip_next = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果第1列是 NaN 且第0列是字符串，则更新当前的学院名称</span></span><br><span class="line">        <span class="keyword">if</span> pd.isna(row.iloc[<span class="number">1</span>]) <span class="keyword">and</span> <span class="built_in">isinstance</span>(row.iloc[<span class="number">0</span>], <span class="built_in">str</span>):</span><br><span class="line">            current_department = row.iloc[<span class="number">0</span>].strip()</span><br><span class="line">            skip_next = <span class="literal">True</span>  <span class="comment"># 设置标志跳过下一行</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> pd.isna(row.iloc[<span class="number">0</span>]) <span class="keyword">and</span> pd.isna(row.iloc[<span class="number">1</span>]):</span><br><span class="line">            current_department = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            skip_next = <span class="literal">True</span>  <span class="comment"># 设置标志跳过下一行</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 否则，设置“开课学院”列的值</span></span><br><span class="line">            df.at[i, <span class="string">&#x27;开课学院&#x27;</span>] = current_department</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(df)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 删除部门名行（第1列为 NaN 的行）</span></span><br><span class="line">    df = df.dropna(subset=[df.columns[<span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(df)</span></span><br><span class="line">    <span class="comment"># 添加“学期”列</span></span><br><span class="line">    df.insert(<span class="number">0</span>, <span class="string">&#x27;学期&#x27;</span>, semester)</span><br><span class="line">    <span class="comment"># print(df)</span></span><br><span class="line"></span><br><span class="line">    df = df.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x.rstrip() <span class="keyword">if</span> <span class="built_in">isinstance</span>(x, <span class="built_in">str</span>) <span class="keyword">else</span> x) <span class="comment"># 去除空白符</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 如果每项的末尾有 \r, 则去掉</span></span><br><span class="line">    df = df.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x[:-<span class="number">1</span>] <span class="keyword">if</span> <span class="built_in">isinstance</span>(x, <span class="built_in">str</span>) <span class="keyword">and</span> x.endswith(<span class="string">&#x27;\r&#x27;</span>) <span class="keyword">else</span> x)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重置索引</span></span><br><span class="line">    df = df.reset_index(drop=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将修改后的 DataFrame 添加到列表</span></span><br><span class="line">    processed_dfs.append(df)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 如果 processed_dfs 里面的项也含有 \r, 则去掉</span></span><br><span class="line">    <span class="keyword">for</span> i, df <span class="keyword">in</span> <span class="built_in">enumerate</span>(processed_dfs):</span><br><span class="line">        df = df.<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x[:-<span class="number">1</span>] <span class="keyword">if</span> <span class="built_in">isinstance</span>(x, <span class="built_in">str</span>) <span class="keyword">and</span> x.endswith(<span class="string">&#x27;\r&#x27;</span>) <span class="keyword">else</span> x)</span><br><span class="line">        processed_dfs[i] = df</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存修改后的文件为 &quot;xxx_edited.csv&quot;</span></span><br><span class="line">    new_filename = file.replace(<span class="string">&#x27;.csv&#x27;</span>, <span class="string">&#x27;_edited.csv&#x27;</span>)</span><br><span class="line">    df.to_csv(new_filename, index=<span class="literal">False</span>, header=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> processed_dfs:</span><br><span class="line">    <span class="comment"># 合并所有修改后的 DataFrame</span></span><br><span class="line">    merged_df = pd.concat(processed_dfs, ignore_index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查 merged_schedule.csv 是否存在</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(<span class="string">&#x27;merged_schedule.csv&#x27;</span>):</span><br><span class="line">        <span class="comment"># 如果存在，读取现有的 merged_schedule.csv</span></span><br><span class="line">        existing_df = pd.read_csv(<span class="string">&#x27;merged_schedule.csv&#x27;</span>)</span><br><span class="line">        <span class="comment"># 将新的数据合并到现有的 DataFrame</span></span><br><span class="line">        merged_df = pd.concat([existing_df, merged_df], ignore_index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存合并后的文件</span></span><br><span class="line">    merged_df.to_csv(<span class="string">&#x27;merged_schedule.csv&#x27;</span>, index=<span class="literal">False</span>, header=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;处理完成，所有文件已保存并合并为 merged_schedule.csv&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;没有找到需要处理的文件或所有文件已处理过。&quot;</span>)</span><br></pre></td></tr></table></figure><p>现在的处理逻辑是：</p><ol><li>先查找有没有新的课程表添加进来；</li><li>对新添加的课表进行处理，生成 <code>*_edited.csv</code> 文件；</li><li>读取原来的 <code>*merged.csv</code> 文件到内存中，把新课表 <code>append</code> 到后面。</li><li>保存为新的 <code>*merged.csv</code> 文件。</li></ol><p>所以注意，在进行新学期的添加前，记得备份！记得备份，记得备份！否则就被覆盖了。</p><p>这里的备份指的是把原来的 <code>*merged_csv</code> 复制一份，而不是剪切，不然又乱了。</p><h4 id="导入到数据库"><a href="#导入到数据库" class="headerlink" title="导入到数据库"></a>导入到数据库</h4><p>其实你说，真的有必要生成一份 <code>*merged.csv</code> 文件吗？没必要。只需要把新学期的课程 <code>LOAD</code> 到课表里就行了。不过为了保险，还是存一份原始 <code>.csv</code> 文件吧，方便迁移？或许。</p><p>导入到数据库，除非哪天数据库不小心被我删了，否则<strong>只需要插入更新的一个学期的内容就可以了</strong>，当然现在还没有经历过第一部分说的两个步骤，后续如果需要修改某学期的内容，需要先把对应学期的内容删除掉（否则会有主键重复），到时候再更新这篇文档。</p><p>导入到数据库的原始代码如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATA INFILE <span class="string">&#x27;/path/to/24252.csv&#x27;</span> <span class="comment">-- 原始文件路径</span></span><br><span class="line"><span class="keyword">INTO</span> <span class="keyword">TABLE</span> course_all                 <span class="comment">-- 插入表格</span></span><br><span class="line">FIELDS TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;,&#x27;</span>              <span class="comment">-- 逗号分隔</span></span><br><span class="line">ENCLOSED <span class="keyword">BY</span> <span class="string">&#x27;&quot;&#x27;</span>                       <span class="comment">-- &quot;&quot; 包裹</span></span><br><span class="line">LINES TERMINATED <span class="keyword">BY</span> <span class="string">&#x27;\n&#x27;</span>              <span class="comment">-- \n 结束一行</span></span><br><span class="line">IGNORE <span class="number">1</span> LINES;                       <span class="comment">-- 忽略第一行（表头）</span></span><br></pre></td></tr></table></figure><h4 id="把表格导出为-sql-文件，迁移到服务器"><a href="#把表格导出为-sql-文件，迁移到服务器" class="headerlink" title="把表格导出为 .sql 文件，迁移到服务器"></a>把表格导出为 <code>.sql</code> 文件，迁移到服务器</h4><p><img src="https://static.xialing.icu/img/202412151008920.webp" alt="3-1"></p><p><img src="https://static.xialing.icu/img/202412151011453.webp" alt="3-2"></p><p>这样就得到了 <code>.sql</code> 文件。</p><h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><p>打开 <code>vue</code> 服务的方法是 <code>npm run dev</code>。</p><p>打开 <code>flask</code> 后端的方法是 <code>flask run --port=8000</code>，因为我用的是 <code>8000</code> 端口。</p><h3 id="在服务器上"><a href="#在服务器上" class="headerlink" title="在服务器上"></a>在服务器上</h3><h4 id="使用-XSHELL-连接到服务器"><a href="#使用-XSHELL-连接到服务器" class="headerlink" title="使用 XSHELL 连接到服务器"></a>使用 <code>XSHELL</code> 连接到服务器</h4><p><code>oop</code> 已经使用过很多次了，不赘述。</p><h4 id="把-sql-文件通过-XFTP-上传到对应文件夹"><a href="#把-sql-文件通过-XFTP-上传到对应文件夹" class="headerlink" title="把 .sql 文件通过 XFTP 上传到对应文件夹"></a>把 <code>.sql</code> 文件通过 <code>XFTP</code> 上传到对应文件夹</h4><p>和本地的配置不同，服务器上 <code>app.py</code> 的配置体如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db_config = &#123;</span><br><span class="line">    <span class="string">&#x27;host&#x27;</span>: <span class="string">&#x27;localhost&#x27;</span>,      <span class="comment"># 数据库主机地址，通常是 &#x27;localhost&#x27; 或远程服务器 IP</span></span><br><span class="line">    <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;zhangsan&#x27;</span>,  <span class="comment"># 连接数据库的用户名</span></span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;******&#x27;</span>, <span class="comment"># password</span></span><br><span class="line">    <span class="string">&#x27;database&#x27;</span>: <span class="string">&#x27;ABCDE&#x27;</span>,    <span class="comment"># 数据库名</span></span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span>: <span class="string">&#x27;utf8mb4&#x27;</span>,     <span class="comment"># 字符集设置，保证支持中文等多语言字符</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样可以确保安全，使得后端访问数据库的时候只能读，不能写。这里只是说一句，重点在于，把 <code>.sql</code> 导入到数据库后，对应的 <code>DATABASE</code> 名和 <code>TABLE</code> 名要对应，不然查找不到东西！</p><p>如果存在某个 <code>&lt;database&gt;</code>，直接运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql your_database_name &lt; /path/to/your_file.sql</span><br></pre></td></tr></table></figure><p>即可。</p><p>换句话说，就是不需要进入到 <code>mysql</code> 进程当中。如果不小心进入了，输入 <code>EXIT;</code> 来退出吧！</p><p>如果对应的 <code>&lt;database&gt;</code> 不存在，需要手动创建。这时候需要进入 <code>mysql</code> 进程，进行如下操作：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="operator">&lt;</span>database<span class="operator">&gt;</span>;</span><br></pre></td></tr></table></figure><p>语法应该没错。创建完就 <code>OK</code> 了，可以导入。不用新建表格，设计表的结构，因为直接导入来的 <code>.sql</code> 文件包含了这些信息。（当然到目前为止，这部分内容是我凭空揣测的，等遇到实际应用时再修正）。</p><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><p>有一个 <code>rfs</code> 别名，可能是 <code>Restart Flask Service</code> 的意思吧，忘了具体含义了。别名对应关系是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfs=<span class="string">&#x27;sudo systemctl restart nginx; sudo systemctl restart flask_app.service&#x27;</span></span><br></pre></td></tr></table></figure><p>那这个 <code>flask_app.service</code> 是啥呢？它是一个系统服务，在我的服务器上存放在 <code>/etc/systemd/system</code> 下，内容是：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Gunicorn instance to serve Flask application</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">User</span>=ubuntu</span><br><span class="line"><span class="attr">Group</span>=www-data</span><br><span class="line"><span class="attr">WorkingDirectory</span>=/home/ubuntu/jkd-web/flask-backend/</span><br><span class="line"><span class="attr">Environment</span>=<span class="string">&quot;PATH=/home/ubuntu/jkd-web/flask-backend/venv/bin&quot;</span> <span class="comment"># 当时找这个环境费了我不少时间</span></span><br><span class="line"><span class="attr">ExecStart</span>=/home/ubuntu/jkd-web/flask-backend/venv/bin/gunicorn -w <span class="number">4</span> -b <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8000</span> app:app</span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>这段代码完全是 <code>AI</code> 生成的，现在我几乎看不懂了。以后写大作业的时候一定要留一份文档，给自己看也好。</p><h3 id="结束-之前"><a href="#结束-之前" class="headerlink" title="结束..之前"></a>结束..之前</h3><p>执行到此，应该可以正常在 <code>tongji.xialing.icu</code> 中查询到最新的课程了！这次更新也说明了：我的网站可以自己定位到最近的学期进行选择，很方便。</p><h4 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h4><ol><li>在主页更新本次更新的内容和时间；</li><li>在 <code>footer</code> 更新本次更新的时间。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人工作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《如何拥抱一只刺猬2》书评兼对个人情感的纵深分析</title>
      <link href="//2024/12/book-review-how-to-hug-a-hedgehog-2/"/>
      <url>//2024/12/book-review-how-to-hug-a-hedgehog-2/</url>
      
        <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>这本书是<a href="../../11/book-review-how-to-hug-a-hedgehog-1/">上一本书</a>的续集，主要讲解了几种不同的单身模式。就像我一个朋友说的，心理学的书籍可能就像星座或者人格一样，小狗来了都得中几条。可能是这样吧，不过，如果不对号入座的话，怎么认清自己，认清别人呢？辩证地看吧。</p><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>总体来说，这本书给我的感觉没有上一本那么惊艳，不是书写的不好，可能是我心境变了吧。之前还处在一个恋爱的心境当中，看什么都有一层恋爱滤镜，周围萦绕着不少粉色泡泡。现在这层滤镜消失了，再加上听了一些很讽刺现实的歌曲（这个有机会单独说），加上又到了期末季，可能心情又变得有些低落。最近 HRV 又比较低，但是并没有感冒的症状。我也说不清我到底怎么了，但反正，秋天是忧郁的季节吧。</p><p>下了形策的最后一节课，电脑没电了，走出复楼，看到嘉三路的悬铃木换上了火红的装束，十分好看！</p><p><img src="https://static.xialing.icu/img/jia-san-lu.webp" alt="火红的嘉三路"></p><p>不过确实是有一些萧条吧，这种冷冰冰的感觉。要是再下点凉雨，就仿佛走在北苑前面那一条松柏直冲云霄的小径上了。</p><p>不管看了多少人格，最终发现还是找不到自己的号码牌，仿佛看到了朋友的影子，但是对方又说并不是。到底是他当局者迷，还是说我对他不了解呢？只有天知道。我呢？我对自己又有怎样的了解呢？还是从排除法入手吧。</p><p>列个表格</p><ol><li>契可尼式单身</li><li>迷茫式单身</li><li>错过式单身</li><li>纠结式单身</li><li>沉浸式单身</li><li>自恋式单身</li><li>悬置式单身</li><li>社恐式单身</li><li>虚拟式单身</li></ol><h3 id="排除-1"><a href="#排除-1" class="headerlink" title="排除 1"></a>排除 1</h3><p>从来没有过恋爱经历。</p><h3 id="排除-3"><a href="#排除-3" class="headerlink" title="排除 3"></a>排除 3</h3><p>没有开始，更别提认为上一段比这一段好。</p><h3 id="排除-5"><a href="#排除-5" class="headerlink" title="排除 5"></a>排除 5</h3><p>曾经可能是这样吗？认为单身生活比恋爱生活有趣得多，最后发现可能自己还是需要一个能够谈心的人，不太满足和自己说话了呢。虽然有朋友，虽然未来可能有很成熟的 AI，满足对恋人的一切想象，但是啊，还是没有一个活生生的人在面前好呢。</p><p>又打自己脸了呢。</p><h3 id="排除-6"><a href="#排除-6" class="headerlink" title="排除 6"></a>排除 6</h3><p>虽然我有时候可能有这样一种想法：<strong>啊，每个人都有自己的闪光点啦。TA 在这方面很闪耀，但我在某些方面也不错啦。</strong> 我觉得这种想法不能算是自恋吧？我是觉得“他好，我也好”（这句话不是出自肾宝的广告，而是《蛤蟆先生去看心理医生》），美美与共多好呢。只不过可能对方觉得，我的那些稍微好一点的地方，在她心中权重并不高吧。</p><p>应该不是自恋。</p><h3 id="排除-8"><a href="#排除-8" class="headerlink" title="排除 8"></a>排除 8</h3><p>我曾经是这样，很经典的“为了避免结束，我拒绝开始”。不知道怎么了，反正就是有了信心，相信自己能经营好一段不错的感情。人这种动物真有意思，爱恨就在一瞬间，一些想法，不经意间就转变了。</p><p>虽然我父母确实总是吵架啦，唉，两个东北人，不打起来就不容易了！我这不是地域黑，我也算半个东北人，民风彪悍这句话也不是我说的，是我妈妈对她老家的评价。不过我老家的亲戚中确实是也有十分恩爱的就是了。还是不能一棒子打死，但我爸这枝儿好像就是小心眼、脾气不好。从我爷爷开始就是，我自己也有一点。不断被中和掉吧。</p><h3 id="排除-9"><a href="#排除-9" class="headerlink" title="排除 9"></a>排除 9</h3><p>我虽然头像是琪露诺，但是不至于把这样一个虚拟的、不可能在这辈子见到的人物当做是我的爱人。<strong>废话，人家有大妖精</strong>。emm，这是一个原因啦。一个精神支柱和一个虚拟爱人，区别还是挺大的。</p><p>我也不知道我现在暂时放不下的那个 TA，她的心中，那位是自己的虚拟男友呢？还是说只是一个精神上的符号呢？我不好说。不过，能为了那位游戏人物的生日会到线下参加活动，能看出来真的热爱呢。</p><h3 id="一番比试过后"><a href="#一番比试过后" class="headerlink" title="一番比试过后"></a>一番比试过后</h3><p>剩下的是 2、4、7。</p><h4 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h4><p>迷茫式单身，有点像吗？但是又不像。至少，我会主动找女孩子要微信，不管是线上还是线下。唉，以后感情经验不一定积累多少，要微信可以说是越来越纯熟。这算是一种悲剧吗？？？</p><h4 id="纠结"><a href="#纠结" class="headerlink" title="纠结"></a>纠结</h4><p>纠结，我是有一点啦。倒不至于揪着无辜的小花，她喜欢我，她不喜欢我，她喜欢我，她不喜欢我……但有的时候确实很纠结，因为对方的一个眼神或者一个举动，好像就说明了很大的问题似的。唉，其实在人家心中，我就是个空气吧，没必要给自己加这么多的戏呢。</p><p>但是你说，不纠结，要去表达，我也表达呀，没有得到正反馈而已。荒谬的是，当我想象，如果有个我<strong>无感</strong>（如果不喜欢的话，微信可能都不会给吧，看情况，可能为了维护表面的尊重）的女孩子来和我聊天，我可能会有什么动作？你说，我就回，而且回复得很及时，但好像没有继续下去的可能。</p><p>比如说。唉，算了，不比如了。聊天聊天，总应该想想怎样才能聊下去吧。我第一次要微信的那位女生，算是比较外向直率，当真的没有话题的时候，她会说“老师，我申请换个话题”。这位则是，你的每句话都回应，但是不会引出新的话题。就好像我头上一个进度条，随着时间在递减，如果受到正反馈，会增加。她可能想让我的进度条默默衰减到 0 吧？当然也可能我想多了，人家就是单纯没看到而已。</p><p>一个更有说服力的特征，可能是，只有我想要了解她，而她一点了解我的欲望，连了解我的问题都没有提出过呢。</p><p><em>Letting Go</em>。这首歌就是我以后放下的歌曲。距离我放下还有小两周。好多东西应该量化、如果在 15 周周日的 23: 59: 59 之前，人家没有给我主动发一条消息（我主动了两次），那我就彻底放下，变成 available 的状态。至于说人家后面再联系我，我估计更没有可能。我不会傻乎乎的打直球，啊，**我喜欢你，能做我女朋友吗。虽然确实是很干脆利落的办法，但我不愿意做这种我已经知道大概答案的事情。设定这样一个时间，不是为了让对方怎样，是给自己的心一个交代吧。</p><h4 id="悬置"><a href="#悬置" class="headerlink" title="悬置"></a>悬置</h4><p>这段描述给的很好：“不敢追自己心动的人，又看不上喜欢自己的人，可能是缘分未到吧”。是给自己的自我评价太高了吗？是自己太谨慎了吗？是对自己的那一位要求更高了吗？</p><p>我觉得，我的择偶标准的话：</p><ul><li>长得顺眼，不需要也最好不要花枝招展，那种我受不了。</li><li>三观一致，这一点最重要，我父母就有些三观不合。</li><li>有一些上进心，但不要把自己逼得太紧。</li><li>不盲目追星，看演唱会啥的可以，别穿着婚纱看，别为了自己家哥哥魔怔了就行。我周围总有一堆人在看演唱会，果然大学生是主要的消费群体啊。</li><li>最后一点就是双向奔赴吧。一个人向你奔去，真的好累啊。</li></ul><p>至于说门当户对，那是我父母考虑的问题，哈哈。不过呢，一般来说，如果家庭条件不一样，一般也孕育不出一样的三观来，物质决定意识。</p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>大概就是这样，对于自己的爱情认识得更清晰了。下次不看理论分析了，把心叶和远子的故事看完吧。</p><p>以这样一个巧合的名字结尾，在我想要忘了对方的时候，老天给我开了个玩笑。我不会把这所谓暗示当真的，我已经不是初中的我了。就算有个电视剧的角色名有夏凌和邱樱，那又怎么样呢？巧合而已！和对方早没联系了。而且一个网络剧，现在谁还记得呢？搜索引擎吧。</p><p><img src="https://static.xialing.icu/img/book-yi-yang.webp" alt="易阳"></p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《如何拥抱一只刺猬》书评兼对个人情感的纵深分析</title>
      <link href="//2024/11/book-review-how-to-hug-a-hedgehog-1/"/>
      <url>//2024/11/book-review-how-to-hug-a-hedgehog-1/</url>
      
        <content type="html"><![CDATA[<h2 id="为什么写这篇文章"><a href="#为什么写这篇文章" class="headerlink" title="为什么写这篇文章"></a>为什么写这篇文章</h2><p>好久没用键盘打字了啊，想来有些生疏。这学期比上学期忙，在应付 OOP 之余还要学习艰难的组合数学。这是两个硬骨头，至于那些小碎骨：数据结构（AI 调教教程）、数字逻辑、概率论，懒得提及它们了。连日记都不得不暂时搁笔，改用微信语音，以期寒假有时间把语音转换为文字。虽然说好久没有通过打字的方式来写日记了，但是微信语音的方式也不错——效率更高。晚上十点半图书馆闭馆，从图书馆走回宿舍的这一段路，和自己发发语音，回想一下今天干了什么，也是一个更加自然的过程，只需要说就可以了，不必在意打字是否错误。不过打字也有打字的好，算是另外一种不同的表达形式吧——所以我来了。</p><p>上面是一些吐槽，写了写这学期匆忙的状态。下面来写一下我为啥要写这篇文章。</p><p>最近为情所困啊！好多话、好多情感想要表达出来。和自己说不过瘾，和朋友说吧，好像朋友一是不愿意听，毕竟人家的情感问题也没得到解决；二是人家的状态好像也不是特别好，我就别给他负能量了。唉，没有办法，所以只好和自己说啦，也是没有办法的办法了。只不过不是以和自己对话的形式，而是写成文章发出来，这样在心理上仿佛好像能被别人读到一样。</p><h2 id="看到这本书"><a href="#看到这本书" class="headerlink" title="看到这本书"></a>看到这本书</h2><p>看到这本书，还得说起另一本书的故事。应该是某天知道自己陷入恋爱的情绪了，所以在图书馆一楼的新书架看看有什么新书，看到一本陈果的《好的爱情》，很好奇，我也想知道，到底好的爱情是什么样的。那本书暂且不谈，从那本书开始，我就开始走上探索情感的这条道路。于是就来到了图书馆四楼。</p><p>四楼的 <code>C913</code> 索书号区域存放的都是和爱情、两性关系有关的图书，我自打高中了解到贾宝玉这个人物后，就觉得自己和他很像。虽然没他有才华吧，科举取得了好成绩有舍弃的勇气，但是我对于女孩子的情感，可以说是个暖男吧，不夸张地说。作为一个多愁善感的人，自然也就想看看这些书里，有哪些比较对我胃口。看到这本介绍恋爱人格的书，眼前一亮。想起来《樱花庄的宠物女孩》中，真白遇到空太，问：你最喜欢的颜色是什么呢？（我现在还是觉得这段镜头和远子姐遇到心叶的那段很像，甚至有点合二为一。其实我觉得鸭志田一创作《樱花庄》，多少受到了野村美月的影响，虽然故事的内容不太像，但背后的神韵简直如出一辙。不过确实都是不错的作品）我也想知道，我的恋爱人格到底是什么呢？</p><h2 id="书的内容"><a href="#书的内容" class="headerlink" title="书的内容"></a>书的内容</h2><p>这本书讲了以下这几种人格：</p><ul><li>自恋型</li><li>表演型</li><li>偏执型</li><li>强迫型</li><li>回避型</li><li>依赖型</li><li>边缘型</li><li>抑郁型</li><li>反社会型</li></ul><p>我对前四种不是很感兴趣，一个是不喜欢这一类人，也不愿意和这样的人打交道；二一个是，我也和这种人格一点关系都没有。因此，没动力，也没必要看这几篇内容。不过我还是扫了一眼，毕竟看书嘛，按顺序来应该比较不错。但话说回来了，我生活当中确实遇到过这四种人，也不自觉地想给这些人贴一贴标签，当然不是那种很绝对的啦！因为就像这本书说的，每个人都处在这些人格以外的灰色区域。这些人格就像是 <em>identifier</em>，我们并不是其中的特征元，只是落在这些特征元以外的部分罢了。但从这些特征的角度来看，确实，有的人就是按这样的特征来活的呢。就像我高中音乐老师在讲到戏曲的时候说，每个人都有自己的脸谱：</p><blockquote><p>你在生活中处在哪个行当呢？</p></blockquote><p>有很多人啊，不经意间，真的是按照不知道是谁写下的剧本活着呢。</p><h3 id="先说说反社会人格"><a href="#先说说反社会人格" class="headerlink" title="先说说反社会人格"></a>先说说反社会人格</h3><p>我对后几种比较感兴趣，当然对最后一个没啥兴趣。要说，怎样判断和自己交往的人是不是一个反社会人格呢？To be honest，我首先没有交往的经验，这话说在前头。不过呢，通过一个小小的举动就可以看出来吧，反社会人格经常 PUA 对方，“你不是爱我吗？爱我就要听我的”，“你得听我的”等等等等。这些话<strong>问题不是很大</strong>，我为什么这么说，是因为要看这句话是谁说的，说给谁。</p><p>这句话肯定有问题的，毕竟每个人都是独立的个体，恋爱和婚姻生活中需要磨合，不可能总是有一方腆着脸对对方言听计从，那不是恋爱，那是舔狗。虽然我也有点舔就是了，不过所谓的“舔”，可能是尊重和示好吧。</p><p>所以修正一下这句话，就是，<strong>充分考虑对方的感受和意见</strong>。但就算这句话现在这样说，它也不能算完全正确，因为要看说话的对象。就像汉语的敬词和谦辞一样，敬词是尊敬对方的，谦辞是自谦的。不能说，我给你斧正了文章；更不能说人家的夫人是贱内。<strong>充分考虑对方的感受和意见</strong>，这句话应该是给自己提的要求，而不是给对方提出的苛求。所以很简单，如果对方给自己提过分的要求，只要自己心里有一点怀疑，离开，是正确的。反正，就从我纯爱的角度来看，我是不会给对方提出这些要求的，我也希望，或者觉得，如果一个人真心爱对方，也不会这样和对方说话。</p><p>在我见过的那些人中，<code>J 同学</code> (♂)可以说是最像反社会人格的人吧？大骂年级主任“你他妈谁啊？！”，在 B 站上抨击教育制度、学校规章，我行我素，俨然一个愤青。最后去到中科大轻音部，追求自己的二次元梦，好像过得还挺自在。高中时候找了一个感觉和他差不多的女朋友（初中的时候两人的关系就不清不楚），俩人毕业之后的举动也一样，J 同学直接把我删了；他对象说另起一个微信号，让有需要的人加她。幸好把我删了，我也不想和这样的人有什么交集。高三英语课那天的聊天，是一个筛选吗？筛选之后，他失望了吧？我那时虽然有些 cynical，但不至于像他这样呢。</p><h3 id="我估计是抑郁型人格吧"><a href="#我估计是抑郁型人格吧" class="headerlink" title="我估计是抑郁型人格吧"></a>我估计是抑郁型人格吧</h3><p>书中说到，</p><blockquote><p>抑郁分为内摄型抑郁和依赖型抑郁。</p></blockquote><p>前者主要是自我攻击，自我否定，觉得自己不配。我从高三开始，到大一上学期，基本都是前者。高考考的分数，和清北无缘，给自己编织的美梦破碎了，奇迹没有发生（现在想想，幸好没有发生，那时候懂些什么？！）。想要离开这个世界、觉得自己对不起老师、父母的情感萦绕在我的心中。毕业的同学会没有去（不过就算我考好了，我也不一定会去），化学一科考的极差，都不敢和化学老师说自己的去向。有点无颜面对江东父老的感觉吧？那时候真的是，太傲了，何必呢？追着前面成绩好的人紧追不舍，就不能合作吗？就不知道每个人都有自己的节奏吗？非得搞得你死我活，“别踩我”，当时班里的氛围就是这样的吧。一个年轻好胜的班主任，每次月考结束都把大家的成绩贴出来，太极端了。在北京这样一个相对教育资源丰富的城市，在一六六这样一所本来就不卷的学校，搞成这个样子，无语。</p><p>现在我应该算是依赖型抑郁吧，不知道怎么样，哪天好像就突然开窍了，明白自己要追求什么了，所以也就不在乎和别人的比较了。这东西，别人教我，我学不会，就得靠自己悟吧？我是悟出来了。高三的时候要是能有这份心境，那是更可贵的啊。其实现在想想，去哪里不都一样吗？当时的成绩，能去个不错的 985，其实 211 不也行吗？（一个声音说：等毕业了就知道了）。但我这成绩，一个 985 是可以混上的，当时压力这么大，朝着清北努力，这是最大的一个错误吧。佛系一点咯！</p><p>依赖型抑郁，看重别人的关注，也愿意主动去寻求关注。确实是这样。和另外一位内摄型抑郁的朋友交流，他是不会，而且肯定不会主动去要别人微信的。不过我却已经要了两次，一次比一次熟练（也挺可悲的吧）。我确实看重别人的关注，但是我也不会像在课程群里跳脚的某些人一样，当众人注视下的小丑。我看中我在意的人的关注吧，不过往往好像并不是双向奔赴，所以就很痛苦。</p><p>所以说呢，虽然我有点抑郁型的特征，但是，好像和书中描述的又不太一样。可能我之前是这样吧，所以在我身上还能看到抑郁型的影子。想起来去年同期我日记里的几句话：</p><blockquote><p>今天突然有些感伤，在南楼和自己聊了会天，鬼使神差吧，主要是再次回顾了自己不谈恋爱的三个原因：<br>1.看得上的自己不配，看不上的不愿屈尊；<br>2.害怕自己始乱终弃。为了让自己喜欢的女孩子幸福，让自己上场不一定是最佳方案；<br>3.父母的婚姻给我做了榜样，再甜的校园恋爱，步入结婚之后，逃不过柴米油盐，我最烦的就是争吵，亚达哟；<br>4.现在又补充一条，自己没有共情的能力，比较冷血；<br>5.找不到有共同爱好的，或者说，我没什么爱好。</p></blockquote><p>那时候的我应该可以说“全中”吧？就特征的描述而言。“利他主义”、“两人迟早是要分手的”、“自我否定”。不过我走出来了。<strong>进化成更好的人</strong>，这句话可以成为以上这几点的答案。未来可能会有冲突争吵、可能会面临一些挑战，但我们一起前进吧，一起进化成更好的人吧。</p><p>有时候，是不是寻找自己的爱好，也可以作为解决问题的一个方法呢？我当时居然说自己没什么爱好？现在想想，跑步、读书、捕捉生活中的小乐趣，这兴许是我兴趣所在。提升自己之后，有些想法，有些思绪，就会改变了呢。</p><p>在这我还是很想谢谢《文少》这本书，谢谢远子姐。换个角度想，就可以发现把一个似乎怎样也无法解释通的悲剧结局转变为一个 Happy Ending 的思路方法。</p><h3 id="我还真的挺纯爱的"><a href="#我还真的挺纯爱的" class="headerlink" title="我还真的挺纯爱的"></a>我还真的挺纯爱的</h3><p>依赖型人格，这也算是对我的一个写照，但我又没有那么极端。有时候，和喜欢的人待在一起，就很高兴。和自己喜欢的女孩子在图书馆的相同楼层自习，和她选了一样的课程，在一间教室听课，眼神不自觉地就会往人家身上瞟，内心也在窃笑。幸亏有边界感的存在吧，才让我不至于侵入到人家的生活当中。有时候很好奇，恋爱到底怎样开始呢？好像真的是万事开头难，友情是一样，大学生活也是一样，迷迷糊糊就开始了。开始了好像就停不下来了。不过要是对方不愿意开始，我也不会打扰对方的了。</p><h3 id="永远无法摘星星的人？"><a href="#永远无法摘星星的人？" class="headerlink" title="永远无法摘星星的人？"></a>永远无法摘星星的人？</h3><p>回避型人格者是一群“永远无法”摘星星的人。当这类人遥望星星时，他们会满心欢喜地对着星星许愿，希望自己能获得爱情；但当他们真正靠近星星时，他们觉得星星时一块巨大的陨石，随时可能将自己砸得四分五裂。</p><p>我觉得对于回避型人格的描述，也很适合我呢。我会去主动寻求关系，但是，如果对方对我没有提供及时的积极回应，我就<br>会想，肯定是我耽误了对方的时间，肯定是对方看不上我，我不值得对方去爱。</p><blockquote><p>回避型人格者的主动接近是非常珍贵且脆弱的。</p></blockquote><p>我奉行的就是事不过三原则，现在可能是事不过二了。具体讲，就是，如果我主动了两次，但却没有得到积极的反馈，我就会放弃。说 abort 可能不太准确，而是进入一种等待连接的状态——如果对方主动了，我会很高兴，因为知道我们在双向奔赴；然而更多的情况是，当我 abort connection 之后，对方好像也完全不存在了，放弃了联系。说到底就是不喜欢我呗！我能有这种心态倒也正常：</p><h4 id="一段主动的经历"><a href="#一段主动的经历" class="headerlink" title="一段主动的经历"></a>一段主动的经历</h4><p>上学期喜欢了一位 <code>C 同学</code>，人家很优秀，在汇文楼自习，碰到过几次；后来注意到她和我一节电路理论课，有时候也会来旁听 <code>23057</code> 老师的高程课（谁知道我后来喜欢的 Y 同学也在这课上呢？）。心里暗自注意了她，并在一个周五近纲课上被某个女生很奇怪的搭讪之后鼓起勇气要了人家的微信，过程是这样的：</p><blockquote><p>……看到她到了三楼楼梯口对着的教室，找了个地方坐着了。我还在想，要不要坐到她旁边呢？想想还是算了，去老地方。现在想想，这个决定挺正确，人家毕竟和你不熟。马上 13 点 15 了，在那个门口徘徊，看着那个妹子。先回去签到吧，然后接着徘徊。您还真别说，老天爷可能是眷顾我吧，正好那个妹子要出来，我就打断了她，然后说了些寒暄的话，最后把微信要到了。我现在回忆起那段话，大概是这样的：</p><p>夏凌：同学（迟疑了两秒，然后又叫了一声），我经常看到你在汇文楼自习…<br><code>C 同学</code>：什么？没听清。<br>夏凌：（又说了一遍）<br><code>C 同学</code>：是啊，我是经常在汇文楼，怎么了？<br>夏凌：就是说，看到你学的很认真，挺鼓舞我的吧，我就想，能不能加个微信？<br><code>C 同学</code>：好啊，没问题。<br>夏凌：你扫我吧。</p><p>大概就是这样，然后她急急忙忙下楼了。不知道这算是一个什么印象呢？过了一会，好友申请来了，我如释重负……</p></blockquote><p>我觉得我这段搭讪比早上近纲课的要自然多了，嗐，比烂呗：</p><blockquote><p>第一个课间的时候，我旁边那个女孩问我怎么给笔记本加标签，就是 OneNote 的侧边标签，我说我是 Windows，不是苹果。她表示很惊讶。后来又随便聊了聊什么陶喆啊、表情包之类的，尬聊吧。果然恋爱只会让人变愚蠢，咱这是桃花运来了？但是长得不对我的胃口，但凡长得再好看点，我可能就回应什么了，不过啊，我还是要去嘉定的啊，还是找济勤的更好一些吧？</p></blockquote><p>其实我也是看脸的，所以如果对方通过看脸把我筛选掉，我也不说什么了。不过那段经历也是很有趣吧，先是随便聊聊，后来问了问人家的分流情况（去了计科，而且现在拿了国奖，我真有眼光），再后来上汇编的时候，可能是对方觉得我侵入人家生活太多了吧，给我回复了一个 <code>[敷衍]</code> 的表情，到这我才意识到，自己非常有可能越界了，所以我之后就再没联系过她，对方果然没有再联系过我，而且幸好这学期没有一节课和她一样。当时的小心思还是很有意思的。</p><p><img src="https://static.xialing.icu/img/fuyan.webp" alt="敷衍"></p><blockquote><p>……最后下课的时候，发现那个妹子居然坐在第一排，我都没注意。收拾书包赶紧走了，发现如果抛弃掉那种情情爱爱的、让人迟滞的情感，生活麻利了很多。不过最后还是很贱地装作在门口逗鱼，最后刷存在感一样地从那个妹子边上路过，真的有点像 <code>Q 同学</code>那会的感觉了。在体育课前扫描她的踪影，蹲点信息课，和她聊天。也多亏是初中小孩，啥都不懂；也多亏 <code>Q 同学</code>开朗，没想那么多。我觉得突然有人和我搭话，我是很警觉的。唉，没有那种“这个妹妹我曾见过的”的感觉，这是三次元，哪有那种事情呢？我出生的时候嘴里边又没有叼着一块儿玉。虽然我是叫夏凌。这样看来，人家九成九是对我没意思吧。。唉。其实就有一种什么感觉呢，觉得，如果没有表白的话，错过这个妹子是我一生的遗憾。就有点，啊，如果不和这个妹子共度余生的话，我压根就不敢有和其他妹子谈恋爱的情感，因为我心里有那个她。但我还是相信，这种情感多半会随着时间消逝掉吧，很残酷。像小学的 <code>Z 同学</code>，初中的 <code>Q 同学</code>，曾让我心动的姑娘，如今已悄然无踪影。无踪影，那又如何呢？现在也没觉得怎么样，只不过，现在很痛苦吧！如果未来你看到这段文字，我确实是很纠结。这不是上学期那种考试不通过，想死的那种悲恸，而是想要表白，想要珍惜，但是发现自己没有那个能力，没有能力啊，但是又想要追求。是这种纠缠的情感吧。很纠结，很纠结，不过还是 <em>Letting Go</em> 吧，总会过去的。那个妹子今天梳了个小马尾？不应该是马尾，反正就是一个小揪，挺可爱的，让我想到了 <code>G 同学</code>。</p></blockquote><p>真的可以过去呢，当时那么热烈的情感。在环境学院唱着《东京不太热》发泄情感，“去年夏天后就没聊过天”，真的是呢，真的是呢。不过我觉得我的最低理想已经达到了，就是，不想错过这样一个人吧。因为原来连她的名字都不知道，我觉得能记住她的名字就够了。这段感情结束的本质原因，我觉得是因为两个人没有共同话题吧。人家是艺术家，整天看表演，甚至自己也参加表演，我和她，注定不是一个路子的人呢。看不上我，我认了。不过我现在也看不上她了，虽然人家确实很可爱就是了。唉。</p><p>自打这段主动失败了之后，我觉得我应该再也不会主动了。谁知道这学期又发现了自己在意的人呢？</p><h4 id="另一段主动的经历"><a href="#另一段主动的经历" class="headerlink" title="另一段主动的经历"></a>另一段主动的经历</h4><p>一开始是在课上发现了这位 <code>Y 同学</code>，尤其是在计科导的课上，她坐在靠教室右侧的第二排。后来我发现，她毛概、数字逻辑、OOP 也都坐在另一侧的前排（为啥是和我的另一侧呢，想多了吧？）。很用功啊！而且长得也很可爱。和 <code>C 同学</code> 的风格不一样，<code>C 同学</code> 是有点像动漫人物的那种可爱，<code>Y 同学</code> 是有种知性美吧？给我的感觉就像远子姐，这两种特征的人，我都能接受，而且更看重心灵上的成熟，有趣的灵魂。</p><p>有一次课，趁着计科导点名，暗暗记住了对方的姓名，我觉得这就够了。11 周的计科导展示和毛概展示给我展亢奋了，心里酥麻麻的，在距离 21：00 前的十几分钟前犹豫了一下，到底要不要加人家的微信呢？在自己心里面问了问自己，如果和她过一辈子，我会不会后悔。最后还是发送了好友申请，心里很忐忑，人家同意了，啥话没说，我就发了个表情包问候，和上一段<strong>一样</strong>的开始。</p><p>有一天图书馆二楼人非常多，我就去三楼自习。打水还是收拾东西的时候，瞟到了 <code>Y 同学</code>，很开心！因为自从在汇文楼见过 <code>C 同学</code> 之后，就再也没见过人家了，毕竟沪姐周末要回家。就这样，6 层 &#x3D;&gt; 8 层 &#x3D;&gt; 2 层，现在我开始在三楼自习。一个是因为她在，一个是因为三楼确实人不多。</p><p>好像是哪个周五，趁着中午不打扰对方，闲聊了几句。<code>Y 同学</code>回复比较慢，她说是打字慢，我毛概课留意了一下，好像人家打字确实不是很快。就这样，我说一句，她回一句，聊了一个小时。虽然时间很长，但是信息密度不高，大概有 60% 的时间都是我在等待吧。最后人家以下午有事来收尾了，什么事呢？我怎么好问？不过看来人家确实每周五下午都有事就是了。今天也是周五呢。</p><p>因为人家周末很早就到图书馆，所以想趁着周末和她线下聊聊天，因此我开始早起，期待能在一层的人不是特别多的时候和她聊几句。但是她整个周末都不在图书馆。周日的中午，我又急了，担心人家去哪了。幸好是出去玩了。为啥我这么急呢，是因为下周二是人家生日啊！反正最后祝福了几句，尬聊了几句，感觉对方不是很愿意理我。当我发出 <code>[再见]</code> 的这个表情时，我想这应该是我最后给她发信息了吧。好像是预见到了什么，我总感觉，这段感情如果我一而再再而三地越界下去，消耗对方的精力，可能会给双方带来伤害，弄出个大家都不高兴的结局呢。</p><p>我是不敢想有喜欢的人也喜欢我这样双向奔赴的事情啦，虽然有时候梦里也会想，如果这样的话，生活该多么美好？</p><p>自此之后，我也不再在三楼自习了，我的所谓刷存在感的行为，有没有考虑到对对方的干扰呢？我在四楼确实能看到她，不过，我估计是不会再怎么看了。我终于舍得为你放开手，就这样结束吧，这段感情。</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>我也在想，我以后还会再恋爱吗？我心死了吗？不知道，如果 <code>Y 同学</code> 也愿意和我走下去的话，我也会愿意和她走下去的吧。但从美梦中醒来，转念一想，和她的寥寥数语聊天，有种感觉是，明明有很多种可以让聊天继续下去的方式，她没有选最不能继续下去的，但也足以让聊天中止了。真的是一种礼貌地拒绝吧？我希望处在恋爱气氛中的我能读懂对方的这份善意呢。</p><p>写了这么多，不吐不快，现在是把肚子里的苦水都倒出来了啊。其实很想和某个人分享这些感情的，但是，一个是大家都忙；一个是，这毕竟是负能量的东西。说给谁呢？在现在的社会里，这世界有那么多人，嘉图现在有 1250 人，还 24 小时开放了。这个社会真的越来越不顾一切地向前狂奔了呢。奔车朽索，其可忽乎？</p><p>回避啊回避，抑郁啊抑郁，井上心叶！何尝不是我呢？远子姐真的太好了！！！</p><h2 id="衍生作品"><a href="#衍生作品" class="headerlink" title="衍生作品"></a>衍生作品</h2><ul><li>自恋型人格 —— 《了不起的盖茨比》，被自恋型人格伤害的人</li><li>强迫型人格 —— 《天使爱美丽》，强迫型人格培养下，成长出来的小天使</li><li>回避型人格 —— 《阿飞正传》，虽然说有一些虎子的鬼畜作品调侃了这段情节，不过有机会开始看一看吧</li><li>回避型人格 —— 《海上钢琴师》，虽然在星期音乐会上听老师从爵士乐的角度分析过这部作品，没想到还能从心理学上剖析</li><li>抑郁型人格 —— 《丈夫得了抑郁症》，妻子和丈夫一同前行</li></ul><p>2024 年 11 月 29 日 15: 44<br>写于嘉图四楼，温暖的阳光下</p>]]></content>
      
      
      <categories>
          
          <category> 书评 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Clash 订阅转换无法获取结点</title>
      <link href="//2024/10/clash-sub-link/"/>
      <url>//2024/10/clash-sub-link/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>市面上有许多常用的订阅转换程序，可以让对于机场自带的分流规则不满意的用户实现自己的规则。这一结果的实现有赖于 <code>subconverter</code> 这一开源程序。然而，有些机场禁用了 <code>subconverter</code>，使得其无法获取到结点。那么该如何解决呢？</p><h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>输入订阅链接以及自定义的规则后，在 <code>Clash</code> 中，提示下载失败；在浏览器中可以查询到更详细的信息。</p><p><img src="https://static.xialing.icu/img/202410080956325.webp" alt="订阅转换样例"></p><p>在浏览器中输入获得的整合链接，得到提示：</p><blockquote><p>The following link(<strong>以下简称：整合链接</strong>) doesn’t contain any valid node info: <code>https://api.xxx.top/sub?target=clash&amp;new_name=true&amp;emoji=true&amp;clash.doh=true&amp;filename=XXX&amp;udp=true&amp;url=https%3A%2F%2Fapi.xxx.xyz%2Fosubscribe.php%3Fsid%3Dxxxxx%26token%3Dxxxxxxxxxx</code></p></blockquote><p>翻译过来，就是对应的链接没有有效结点。</p><h2 id="猜测-1：真的没有有效结点吗"><a href="#猜测-1：真的没有有效结点吗" class="headerlink" title="猜测 1：真的没有有效结点吗?"></a>猜测 1：真的没有有效结点吗?</h2><p>赋值该链接到浏览器中，发现下载到了有效的结点信息。</p><h2 id="猜测-2：某些订阅转换的前端被列入黑名单"><a href="#猜测-2：某些订阅转换的前端被列入黑名单" class="headerlink" title="猜测 2：某些订阅转换的前端被列入黑名单"></a>猜测 2：某些订阅转换的前端被列入黑名单</h2><p>市面上有不少订阅转换的前端页面，都是套皮。例如下列的这几个</p><ul><li><a href="https://sub.dler.io/">sub.dler.io</a></li><li><a href="https://sub-web.wcc.best/">sub-web.wcc.best</a></li><li><a href="https://sublink.dev/">sublink.dev</a></li></ul><p>等等等等…无法一一列举。</p><p>有这样多的域名，有些机场主为了防止攻击，将某些 <code>API</code> 列入白名单：</p><blockquote><p>由于API时常被攻击，目前需要直连导入|更新订阅或使用我们的节点进行。由于被攻击，目前也无法使用使用第三方API，教程 FAQ 内的 API 为白名单。</p></blockquote><p>是不是因为我没有用白名单中的订阅链接呢？否！官方推荐的转换服务仍然复现出错误现象。</p><h2 id="猜测-3：链接编码不对"><a href="#猜测-3：链接编码不对" class="headerlink" title="猜测 3：链接编码不对?"></a>猜测 3：链接编码不对?</h2><p>注意到<strong>整合链接</strong>的 <code>url=</code> 部分采用了 <code>url</code> 编码，例如 <code>:</code> 是 <code>%3A</code> 等等。如果我把编码复原成字符，是不是就正确了呢？</p><p>答案是，报错略有不同，但仍然无法获取到有效结点。</p><h2 id="猜测-4：白名单不够白"><a href="#猜测-4：白名单不够白" class="headerlink" title="猜测 4：白名单不够白"></a>猜测 4：白名单不够白</h2><p>真是奇怪了，为什么在浏览器能获取到结点，但是用<strong>整合链接</strong>就访问不到？我试试自建的服务吧！</p><p>在 <a href="https://github.com/tindy2013/subconverter/releases">subconverter</a> 的 <code>Github</code> 仓库下载了 <code>.exe</code> 文件，双击运行。把前端页面（也就是<strong>现象</strong>部分的那张截图）的后端地址改成 <code>http://127.0.0.1:25500/sub?</code>，获取连接。您猜怎么着——仍然无法获得结点，错误提示不变。</p><h2 id="正题：坎坷的搜集资料与解决"><a href="#正题：坎坷的搜集资料与解决" class="headerlink" title="正题：坎坷的搜集资料与解决"></a>正题：坎坷的搜集资料与解决</h2><p>这下奇了，为啥子呢？</p><p>以 <code>The following link doesn&#39;t contain any valid node info</code> 为关键词在 <code>Google</code> 检索到：</p><p><a href="https://github.com/tindy2013/subconverter/issues/209">Github 上 subconverter 的 issue</a>。开发者回应是白名单的问题，这个问题我已经排除。</p><p>不看浏览器了，看看 <code>subconverter</code> 后端的提示信息吧。发现提示了 <code>No nodes were found!</code>。有点不同，但其实本质问题是一样的。不过还是以此为关键词吧，检索到：</p><p><a href="https://github.com/tindy2013/subconverter/issues/579">仍然是 subconverter 中的 issue</a>，不过日期更近了。有大佬回复多半是<a href="https://github.com/tindy2013/subconverter/issues/573#issuecomment-1436012060">请求头的问题</a>，因此考察请求头。</p><blockquote><p>某些时候，有些订阅提供者会根据请求头屏蔽部分请求，<code>subconvertor</code> 带有 <code>SubConverter-Request</code> 和 <code>SubConverter-Version</code> 的请求头，而且目前似乎没有提供更改请求头的方法，目前好像无解。</p><p>或者你可以自己修改源代码然后编译。</p></blockquote><p>根据对照试验的思路：浏览器可以请求，<code>subconverter</code> 无法请求，对比 <code>Request Header</code>，发现 <code>subconverter</code> 的请求多出来了上述两个请求头，评论区里也有大佬给出了注释掉这两条语句后的可执行文件。我也想自己动手来着，但是确实在 <code>Windows</code> 或者 <code>Linux</code> 下配置 <code>CMAKE</code> 环境有点困难，我就坐享其成了。</p><p>最后当然成功了。在 <code>Clash</code> 中可以获取到以自定义规则组织的结点信息。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>在这过程中，有大佬建议修改 <code>.toml</code> 文件中的代理条目，具体<a href="https://github.com/tindy2013/subconverter/issues/579#issuecomment-1587796982">参见</a>。我一开始修改了，仍然不成功。下载别人编译好的文件，发现这个条目并没有被修改。因此要是哪天发现转换不成功了，可能这里需要再修改下吧。目前还能跑，就不动它了。</p>]]></content>
      
      
      <categories>
          
          <category> Network </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言学习总结</title>
      <link href="//2024/08/assembly-sum-up/"/>
      <url>//2024/08/assembly-sum-up/</url>
      
        <content type="html"><![CDATA[<p>本文章是学习王爽老师的《汇编语言 第三版》积累的笔记，<strong>不可以代替原书，只是起到总结的作用</strong>。如果要入门汇编，还是要看王爽老师的教材，阅读完毕后，可以阅读本文章，查漏补缺。</p><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><h3 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h3><h4 id="AX"><a href="#AX" class="headerlink" title="AX"></a>AX</h4><p><code>AX</code>经常被用于中转，和运算相关。例如，要修改段寄存器的值，不可以使用<code>MOV, 立即数</code>，必须将立即数先存到<code>AX</code>中，再转移到段寄存器中。常见的一个用法是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">; 代码的作用：将数据段地址设置为1000h</span><br><span class="line">MOV AX, 1000h</span><br><span class="line">MOV DS, AX</span><br></pre></td></tr></table></figure><p>关于其在加减法、乘除法的作用，参见<code>DX</code>部分。</p><h4 id="BX"><a href="#BX" class="headerlink" title="BX"></a>BX</h4><p><code>BX</code>和地址相关。如果要通过寄存器间接寻址，<code>AX</code>，<code>CX</code>，<code>DX</code>这三个通用寄存器在语法不支持，必须使用<code>BX</code>，这是8086硬件导致的。<code>BX</code>间接寻址的用法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV BX, 1000h</span><br><span class="line">MOV AX, [BX]</span><br></pre></td></tr></table></figure><p><code>BX</code>默认的数据段是<code>DS</code>，也可以使用<code>ES:[BX]</code>进行段跨越。8086中，物理地址的构成是段地址+偏移地址，这里BX储存的就是偏移地址，构成真正的物理地址，要进行下列运算：例如<code>(DS)</code>&#x3D;1000H，<code>(BX)</code>&#x3D;0010H，则物理地址(<code>PA</code>)&#x3D;10000+0010&#x3D;10010H。</p><p><code>BX</code>常用在循环<code>loop</code>中，作为可以改变的偏移地址。</p><h4 id="CX"><a href="#CX" class="headerlink" title="CX"></a>CX</h4><p><code>CX</code>常作为计数器。<code>CX</code>存储了多少，循环就进行多少次。所以每次在执行循环之前，都要指定<code>CX</code>的值。看这个简单循环：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">; 作用：将FFFF:0开始的64字节空间复制到2000:0开始的空间</span><br><span class="line">assume cs:code</span><br><span class="line">    code segment</span><br><span class="line">    </span><br><span class="line">    MOV AX, 0FFFFh ; 0开头，因为汇编不允许字母开头的数字</span><br><span class="line">    MOV DS, AX</span><br><span class="line"></span><br><span class="line">    MOV AX, 2000H</span><br><span class="line">    MOV ES, AX</span><br><span class="line"></span><br><span class="line">    MOV BX, 0</span><br><span class="line"></span><br><span class="line">    MOV CX, 64</span><br><span class="line">s:</span><br><span class="line">; MOV ES:[BX], DS:[BX] 错误：不可同时对两块内存空间操作！</span><br><span class="line">MOV DL, DS:[BX]</span><br><span class="line">MOV ES:[BX],DL</span><br><span class="line">INC BX</span><br><span class="line">LOOP s</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="DX"><a href="#DX" class="headerlink" title="DX"></a>DX</h4><p><code>DX</code>在运算部分很有用，根据运算数的宽度，决定只使用<code>AX</code>或者同时使用<code>AX</code>和<code>DX</code>。就像在字母表的位置上，D比A大一样，<code>DX</code>一般存储结果的高位。</p><h3 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h3><h4 id="CS（IP）"><a href="#CS（IP）" class="headerlink" title="CS（IP）"></a>CS（IP）</h4><p><code>CS</code>的中文名叫指令指针寄存器，它和<code>IP</code>（指令指针寄存器）两个是8086最重要的两个寄存器，和指令的执行有关。<strong>注意：IP不是段寄存器，但为了方便，在这里一同介绍。</strong></p><p>8086执行指令，按照<code>(CS)</code>*16+<code>(IP)</code>的结果来确定执行指令的地址。这个其他地址的确定方法类似，都是<strong>段地址+偏移地址</strong>的形式。上面提到的循环指令得以执行，和<code>IP</code>密切相关。</p><p><strong>方法一：</strong></p><p>要修改<code>CS</code>和<code>IP</code>，当然可以借助某个寄存器，使用<code>MOV</code>指令。8086大部分寄存器的值（思考：哪些不行呢。提示：段寄存器。），都可以通过<code>MOV</code>改变，<code>MOV</code>又被称作传送指令。</p><p><strong>方法二：</strong></p><p>可以使用<code>JMP</code>指令。</p><p>同时修改<code>CS</code>、<code>IP</code>的内容，使用<code>JMP 段地址:偏移地址</code>，如<code>JMP 2AE3:3</code>，执行后，<code>CS</code>变成2AE3H，<code>IP</code>变成0003H。</p><p>只修改<code>IP</code>的内容，使用<code>JMP 某一合法寄存器</code>，如<code>JMP AX</code>，若<code>(AX)</code>&#x3D;1000H，则执行后，<code>(CS)</code>不变，而<code>(IP)</code>&#x3D;1000H。</p><h4 id="DS"><a href="#DS" class="headerlink" title="DS"></a>DS</h4><p><code>DS</code>是数据段寄存器，默认用来存放数据的段地址。例如，上面出现过的一个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV BX, 1000h</span><br><span class="line">MOV AX, [BX]</span><br></pre></td></tr></table></figure><p>此时，如果<code>(DS)</code>&#x3D;2000H，<code>(2100H)</code>&#x3D;03AEH，则存入<code>AX</code>的值为03AEH。</p><p>对于数据的访问，可以按字访问或者按字节访问。到底按哪种方式呢？</p><p><strong>方法一：根据目标寄存器的宽度</strong></p><p>如<code>MOV AX, 255</code>就是按字访问；<code>MOV AL, 255</code>就是按字节访问。</p><p><strong>方法二：强制类型转换</strong></p><p>C语言中有强制类型转换，汇编也有。如<code>WORD PTR</code>或者<code>BYTE PTR</code>，加到目的前即可。</p><h4 id="SS（SP）"><a href="#SS（SP）" class="headerlink" title="SS（SP）"></a>SS（SP）</h4><p><code>SS</code>是栈段寄存器。在讲<code>SS</code>的同时，就把栈顺带说了吧。</p><p>栈就是一个杯子，<code>SS</code>存储栈段的段地址，<code>SP</code>存储栈顶指针的偏移地址。比如，如果把1000H;00-1000H:FF作为栈使用，则<code>(SS)</code>&#x3D;1000H，在栈为空时，<code>(SP)</code>&#x3D;100H。为什么呢，因为当进栈的时候，要先将<code>SP</code>的值-2，然后将一个字的数据写入内存。栈顶从高字节开始，逐渐向低字节增长。</p><p>有关<code>POP</code>和<code>PUSH</code>的作用，请参见<strong>常用指令</strong>。</p><p>栈顶当然有可能越界，这个是要人为通过高级语言来保证的。换句话说，汇编语言并不能检测栈顶越界的错误。</p><h4 id="ES"><a href="#ES" class="headerlink" title="ES"></a>ES</h4><p><code>ES</code>又叫扩展寄存器，通常是作为扩展段来使用。比如，要从<code>1000H:0</code>开始，复制16个字节的内容到<code>2000H:0</code>。此时就可以将<code>DS</code>和<code>ES</code>分别设置为<code>1000H</code>和<code>2000H</code>，<code>BX</code>设置为偏移地址，进行循环操作，每次<code>(BX)</code>+1，便可以实现内容的复制，很方便。</p><h3 id="地址寄存器（BX、BP、SI、DI）"><a href="#地址寄存器（BX、BP、SI、DI）" class="headerlink" title="地址寄存器（BX、BP、SI、DI）"></a>地址寄存器（BX、BP、SI、DI）</h3><p>和寻址有关的寄存器，有<code>BX</code>、<code>BP</code>、<code>SI</code>、<code>DI</code>四个。如果理解了各自的英文全称，就可以区分它们的功能了</p><table>    <thead>    <tr>        <th>名称</th>            <th>全称</th>            <th>用途</th>            <th>默认段</th>        </tr>    </thead>    <tbody>    <tr>        <td>BX</td>            <td>Base Register</td>            <td>基址寄存器</td>            <td>DS</td>        </tr>        <tr>        <td>BP</td>            <td>Base Pointer</td>            <td>通常和访问堆栈有关</td>            <td>SS</td>        </tr>        <tr>        <td>SI</td>            <td>Source Index</td>            <td>通常作为源的变址</td>            <td>DS</td>        </tr>        <tr>        <td>DI</td>            <td>Destination Index</td>            <td>通常作为目标的变址</td>            <td>DS（字符串操作：ES）</td>        </tr>    </tbody></table><p><code>BX</code>和数据段绑定，<code>BP</code>和栈段绑定。而关于<code>SI</code>和<code>DI</code>，就像在段寄存器-<code>ES</code>部分阐述过的一样，对于字符串的复制，使用<code>SI</code>和<code>DI</code>很方便。那他们当然默认的段就是<code>DS</code>和<code>ES</code>了啊！但是对于一般的内存访问，<code>DI</code>的默认段寄存器还是<code>ES</code>。</p><h3 id="标志寄存器"><a href="#标志寄存器" class="headerlink" title="标志寄存器"></a>标志寄存器</h3><p>标志寄存器和其他寄存器不同，它每个位都表示各自的含义，组合起来的2<code>Byte</code>并没有含义。下面介绍几个常用的标志，这些标志了解即可，因为后续我们不需要对标志进行操作，只需要在逻辑上调用使用了这些标志的指令即可。</p><h4 id="ZF标志"><a href="#ZF标志" class="headerlink" title="ZF标志"></a><code>ZF</code>标志</h4><p>零（<em>Zero</em>）标志位。如果指令执行后的结果为0，则<code>zf</code>&#x3D;1，否则为0。</p><h4 id="PF标志"><a href="#PF标志" class="headerlink" title="PF标志"></a><code>PF</code>标志</h4><p>奇偶（<em>Parity</em>）标志位。如果结果的所有bit位1的个数为偶数，<code>pf</code>&#x3D;1，否则位0。</p><h4 id="SF标志"><a href="#SF标志" class="headerlink" title="SF标志"></a><code>SF</code>标志</h4><p>符号（<em>Sign</em>）标志位。<strong>对有符号数而言</strong>，如果结果为负，则<code>sf</code>&#x3D;1，否则为0。和补码的符号位是不是很相似？</p><h4 id="CF标志"><a href="#CF标志" class="headerlink" title="CF标志"></a><code>CF</code>标志</h4><p>进位（<em>Carry</em>）标志位。<strong>对无符号数而言</strong>，如果结果有进位，则<code>cf</code>&#x3D;1，否则为0。</p><h4 id="OF标志"><a href="#OF标志" class="headerlink" title="OF标志"></a><code>OF</code>标志</h4><p>溢出(<em>Overflow</em>)标志位。如果<strong>有符号数</strong>超过了机器可以表示的范围，则<code>of</code>&#x3D;1，否则为0。什么叫溢出？什么叫超过表示范围？例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov al, 98</span><br><span class="line">add al, 99</span><br><span class="line">; 得到的结果是197</span><br></pre></td></tr></table></figure><p>得到的结果197无法在8位寄存器中正确表示，因为<code>al</code>的表示范围是-128~127。因此，最终得到所谓的98+99&#x3D;-59，这是不可接受的。</p><p><strong>注意：</strong><code>SF</code>、<code>CF</code>、<code>OF</code>的改变，和逻辑上正在进行哪种运算无关。比如上面的例子，假设逻辑上我们在执行无符号运算，按理说，我们不在乎<code>SF</code>和<code>OF</code>的值，但是<code>SF</code>和<code>OF</code>也可能改变。换句话说，对于机器而言，它操作的数据就是一串二进制数据，得到的结果也是一串二进制数据。在操作过程中和得到的结果中，根据有符号和无符号的两种理解方式，修改标志的值，与人对于数字的理解无关。</p><h4 id="DF标志"><a href="#DF标志" class="headerlink" title="DF标志"></a><code>DF</code>标志</h4><p>方向（<em>Direction</em>）标志位。在串处理指令中，控制每次操作后<code>si</code>、<code>di</code>的增减。和它有关的指令为：</p><ul><li><code>std</code>，<em>Set Direction</em>，将<code>df</code>&#x3D;1，递减；</li><li><code>cld</code>，<em>Clear Direction</em>，将<code>df</code>&#x3D;0，递增。</li></ul><h4 id="TF标志"><a href="#TF标志" class="headerlink" title="TF标志"></a><code>TF</code>标志</h4><p>陷阱（<em>Trap</em>）标志位。<code>(tf)</code>&#x3D;1时，单步调试。</p><h4 id="IF标志"><a href="#IF标志" class="headerlink" title="IF标志"></a><code>IF</code>标志</h4><p>中断允许（<em>Interrupt Enable</em>）标志位。当<code>(if)</code>&#x3D;1时，是不可屏蔽中断；否则为可屏蔽中断。</p><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><h3 id="MOV"><a href="#MOV" class="headerlink" title="MOV"></a>MOV</h3><p><code>MOV</code>叫传送指令，就是把源的值赋给目标。</p><h3 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h3><p><code>ADD</code>是简单加法，很简单。</p><p>用法：<code>ADD AX, BX</code>，意思是把<code>AX</code>和<code>BX</code>储存的值相加，并把结果储存在<code>AX</code>中。</p><p>可以看出，寄存器中存的内容，到底是当做值，还是当做地址，完全看我们用什么样的指令来操作。不同的指令，对于二进制内容会有不同的理解方式。</p><p>注意，两个寄存器的位数要对应，和<code>MOV</code>一样。</p><h3 id="SUB"><a href="#SUB" class="headerlink" title="SUB"></a>SUB</h3><p>和<code>ADD</code>的用法类似，不赘述了。</p><h3 id="ADC"><a href="#ADC" class="headerlink" title="ADC"></a>ADC</h3><p><code>ADC</code>执行带进位的加法。利用<code>CF</code>上记录的进位值。这样，理论上可以实现无穷长度的数据的加法计算。</p><h3 id="SBB"><a href="#SBB" class="headerlink" title="SBB"></a>SBB</h3><p><code>SBB</code>执行带借位的减法。和<code>ADC</code>的原理类似，藉此可以实现对无穷长度数据的减法运算。</p><h3 id="MUL"><a href="#MUL" class="headerlink" title="MUL"></a>MUL</h3><ul><li>两个相乘的数，要么都是8位，要么都是16位；</li><li>如果都是8位，一个默认在<code>AL</code>中，另一个放在8位<code>reg</code>或者内存单元中；结果默认放在<code>AX</code>中；</li><li>如果都是16位，一个默认放在<code>AX</code>中，另一个放在16位<code>reg</code>或者内存单元中；结果高位默认在<code>DX</code>存放，低位在<code>AX</code>中存放。</li></ul><p><strong>注意：</strong></p><ul><li>对于内存单元的寻址方式，需要给出数据的宽度，即需要强制类型转换；</li><li>注意到乘法不支持立即数。</li></ul><h3 id="DIV"><a href="#DIV" class="headerlink" title="DIV"></a>DIV</h3><p><code>DIV</code>是除法指令。</p><ul><li>如果除数为8位，则被除数是16位；除数在一个<code>reg</code>或内存单元中，被除数默认在<code>AX</code>中；结果<code>AL</code>存放商，<code>AH</code>存放余数；</li><li>如果除数为16位，则被除数为32位；除数在一个<code>reg</code>或内存单元中，被除数在<code>DX</code>存放高16位，<code>AX</code>存放低16位；结果<code>AX</code>存放商，<code>DX</code>存放余数。</li></ul><h3 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h3><p><code>POP</code>用来出栈。先将内容写到目标地址，然后将<code>(IS)</code>+2。</p><h3 id="PUSH"><a href="#PUSH" class="headerlink" title="PUSH"></a>PUSH</h3><p><code>PUSH</code>用来压栈，或者叫进栈。先将<code>(IS)</code>-2，然后将内容写到栈中。</p><p>可以看到，<code>POP</code>和<code>PUSH</code>只能一次修改一个字(2Byte)的内容。</p><h3 id="PUSHF与POPF"><a href="#PUSHF与POPF" class="headerlink" title="PUSHF与POPF"></a>PUSHF与POPF</h3><p><code>pushf</code>将标志寄存器的值压栈，<code>popf</code>将栈中的值压入标志寄存器。它们不接受参数，但可以通过修改栈的值，间接改变标志寄存器的值。</p><h3 id="AND"><a href="#AND" class="headerlink" title="AND"></a>AND</h3><p><code>AND</code>用来执行<code>与</code>运算，例如，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov al, 01100011B</span><br><span class="line">and al, 00111011B</span><br></pre></td></tr></table></figure><p>的结果为：<code>00100011B</code>。</p><p>达成的效果是：将可操作对象的相应位（掩码为0的位）设为0，其他位不变。</p><h3 id="OR"><a href="#OR" class="headerlink" title="OR"></a>OR</h3><p><code>OR</code>用来执行<code>或</code>运算，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov al, 01100011B</span><br><span class="line">or al,  00111011B</span><br></pre></td></tr></table></figure><p>的结果为：<code>01111011B</code>。</p><p>达成的效果是：将可操作对象的相应位（掩码为1的位）设为1，其他位不变。</p><h3 id="SHL"><a href="#SHL" class="headerlink" title="SHL"></a>SHL</h3><p><code>SHL</code>的作用是左移位，把最高位存储到<code>CF</code>标志中，低位补0。</p><h3 id="SHR"><a href="#SHR" class="headerlink" title="SHR"></a>SHR</h3><p><code>SHR</code>的作用是右移位，把最低位存储到<code>CF</code>标志中，高位补0。</p><p><strong>注意：</strong></p><ul><li><p>在<code>SHL</code>和<code>SHR</code>的使用中，如果移动的位数为1，可以使用立即数，形如<code>shl, ax, 1</code>；</p></li><li><p>如果移动的位数大于1，则需要使用<code>CL</code>存储移动的位数。</p></li></ul><h3 id="CMP"><a href="#CMP" class="headerlink" title="CMP"></a>CMP</h3><p><code>cmp</code>指令对两个操作对象进行比较，通过比较的结果修改标志寄存器中对应的值。它通常和条件跳转指令连用。</p><h3 id="LEA"><a href="#LEA" class="headerlink" title="LEA"></a>LEA</h3><p><code>LEA</code>指令获得某个标签对应的偏移地址。用法：<code>LEA BX, 标号</code>。</p><h3 id="SEG"><a href="#SEG" class="headerlink" title="SEG"></a>SEG</h3><p><code>SEG</code>指令获得某个标签对应的段地址。用法：<code>mov ax, seg datasg</code>。</p><h2 id="转移指令"><a href="#转移指令" class="headerlink" title="转移指令"></a>转移指令</h2><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><p>在汇编语言中使用循环，需要涉及到<code>loop</code>伪指令。</p><p>一般的循环结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">; Basic Circulation</span><br><span class="line">mov cx, 10</span><br><span class="line">s: add ax, ax</span><br><span class="line">loop s</span><br></pre></td></tr></table></figure><p>进入循环之前，先给<code>CX</code>赋值，因为<code>(CX)</code>决定了循环的执行次数。</p><p>循环的标志是标号，标号开头是循环的内容，一直到<code>loop</code>前。</p><p><code>loop</code>的执行逻辑是：</p><ul><li>先将<code>(CX)</code>-1</li><li>判断<code>(CX)</code>是否不为0，如果为0，则执行<code>loop</code>下方语句，否则跳转到标号语句</li></ul><p><code>loop</code>通常可以和<code>[BX]</code>联合使用，从而方便地进行内容的复制等操作。</p><p>注意<code>loop</code>只能实现短转移喔！</p><h3 id="跳转"><a href="#跳转" class="headerlink" title="跳转"></a>跳转</h3><p>无论哪种跳转，实现的底层逻辑都是修改<code>CS、IP</code>的值。</p><h4 id="无条件跳转"><a href="#无条件跳转" class="headerlink" title="无条件跳转"></a>无条件跳转</h4><p>无条件跳转的指令是<code>jmp</code>，可以只修改<code>IP</code>，也可以同时修改<code>CS</code>和<code>IP</code>。</p><ul><li><code>jmp short s</code>实现的是段内短转移，对<code>IP</code>修改的范围是-128~127，机器码中<strong>不包含转移的目的地址，而是位移</strong>；</li><li><code>jmp near ptr</code>实现段内近转移，对<code>IP</code>的修改范围是-32768~32767，机器码也包含位移；</li></ul><p><strong>关于位移的计算，是(目的偏移地址)-(源的下一条指令的偏移地址)。</strong></p><ul><li><code>jmp far ptr s</code>实现远转移，机器码中<strong>包含转移的目的地址</strong>。</li><li><code>jmp 2AE3:3</code>会同时修改<code>CS</code>和<code>IP</code>的值；</li><li><code>jmp AX</code>会只修改<code>IP</code>的值，用寄存器的值覆盖；</li><li>如果转移地址在内存中，根据宽度的不同，也分成段内转移和段间转移<ul><li><code>jmp word ptr 内存单元地址</code>只修改<code>IP</code>的值；</li><li><code>jmp dword ptr 内存单元地址</code>修改<code>CS</code>和<code>IP</code>的值，<code>CS</code>的值在高位；</li></ul></li></ul><p>有必要对<code>jmp short s</code>和<code>jmp far ptr s</code>进行辨析。</p><p><img src="https://static.xialing.icu/img/202408031608099.webp" alt="摘自王爽《汇编语言第三版》P178"></p><p>一个常考的题目是：已知机器码<code>EB03</code>，判断跳转的目标地址；或者已知反汇编的指令<code>JMP 000B</code>，判断机器码为<code>EB??</code>。</p><p>要指出的是，内存当中存放的是跳转的偏移量，例如<code>03</code>就是偏移量。那为什么不跳转到<code>0BBD:0009</code>，而是<code>000B</code>？这就要回顾指令执行的顺序：</p><ol><li>从<code>CS:IP</code>指向内存单元读取指令，读取的指令进入指令缓冲器；</li><li><code>(IP)</code>&#x3D;<code>(IP)</code>+所给指令的长度，从而指向下一条指令；</li><li>执行指令。转到1重复这个过程。</li></ol><p><code>EB03</code>就是根据指令中的<code>03</code>修改了<code>IP</code>的值。</p><p>读取<code>EB03</code>这个指令后，<code>IP</code>指向下一条指令，偏移地址是<code>0008H</code>。之后，再执行<code>EB03</code>，把<code>(IP)</code>再加3，就指向<code>000BH</code>啦！</p><p>反过来，如果知道指令是<code>JMP 000B</code>，知道<code>JMP</code>指令下一条指令的偏移地址是<code>0008H</code>，二者相减，得到的就是<code>03</code>啦！</p><p>但是对于<code>jmp far ptr s</code>来说，注意到机器码中直接包含了段地址和偏移地址。需要注意，段地址在高位置，并且在一个字中，按照高放高来安排字节的存储。谁在高位？按照最左侧一列的排布，原来一行中右侧的内容反而在高位。</p><p><img src="https://static.xialing.icu/img/202408031617726.webp" alt="摘自王爽《汇编语言第三版》P181"></p><h4 id="条件跳转"><a href="#条件跳转" class="headerlink" title="条件跳转"></a>条件跳转</h4><ul><li><code>jcxz 标号</code>，如果<code>(cX)</code>&#x3D;0，则跳转；</li><li><code>loop 标号</code>，如果<code>(CX)</code>!&#x3D;0，则跳转。</li></ul><p>这两个指令可以一起记忆。<strong>所有的条件跳转都只能实现短转移</strong>。</p><ul><li>检测比较结果的条件跳转指令（通常和<code>cmp</code>连用）</li></ul><table>    <thead>    <tr>        <th>指令</th>            <th>含义</th>            <th>检测的相关标志位</th>        </tr>    </thead>    <tbody>    <tr>        <td>je</td>            <td>等于则转移</td>            <td>zf=1</td>        </tr>    <tr>        <td>jne</td>            <td>不等于则转移</td>            <td>zf=0</td>        </tr>    <tr>        <td>jb</td>            <td>低于则转移</td>            <td>cf=1</td>        </tr>          <tr>        <td>jnb</td>            <td>不低于则转移</td>            <td>cf=0</td>        </tr>        <tr>        <td>ja</td>            <td>高于则转移</td>            <td>cf=0且zf=0</td>        </tr>             <tr>        <td>jna</td>            <td>不高于则转移</td>            <td>cf=1或zf=1</td>        </tr>             </tbody></table><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><ul><li><code>ret</code>把<code>IP</code>的值出栈，实现近转移；</li><li><code>retf</code>把<code>CS</code>和<code>IP</code>的值进栈&#x2F;出栈，实现远转移。注意<code>CS</code>的值在高位。</li><li><code>call</code>不能实现短转移，以下几种转移方法，可以和<code>jmp</code>的方法类比<ul><li><code>call 标号</code>：令<code>IP</code>进栈，实现近转移（-32768~32767），仍然注意内存的存放问题；</li><li><code>call far ptr 标号</code>，令<code>CS</code>和<code>IP</code>先后进栈，实现段间转移；</li><li><code>call 16位reg</code>，压栈<code>IP</code>，用寄存器的值修改<code>IP</code>的值；</li><li>转移地址在内存中：<ul><li><code>call word ptr 内存单元地址</code>，相当于实现近转移；</li><li><code>call dword ptr 内存单元地址</code>，相当于实现段间转移。</li></ul></li></ul></li></ul><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><h3 id="系统参数"><a href="#系统参数" class="headerlink" title="系统参数"></a>系统参数</h3><p>为了防止提供的文件污染环境，选择使用VMware的虚拟机来运行。</p><ul><li><p>系统版本：Windows XP SP2 64bit</p></li><li><p>虚拟机：VMware Workstation 17 Pro</p></li></ul><p>多说一句，选XP是因为，支持运行DOS和masm，并且虚拟机的速度相对比较快。</p><h3 id="所需软件"><a href="#所需软件" class="headerlink" title="所需软件"></a>所需软件</h3><ul><li>DOSBox0.74-2-win32</li><li>masmplus</li><li>DEBUG32</li><li>DEBUG</li></ul><p>注：王爽老师的汇编语言教材使用的是<code>DEBUG</code>，而学校提供的是<code>DEBUG 32</code>。二者差不多，指令也差不多，但是<code>DEBUG32</code>不支持<code>MOV AX, [0]</code>这种指令，即指令中不能出现中括号。<a href="http://122.51.85.215/software/Assembly/">下载地址</a></p><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><ol><li>关闭防火墙</li><li>双击安装DOSBox，地址可以用默认的，反正是虚拟机</li><li>双击安装masmplus，如果发现显示乱码，可能是当前系统不支持中文，自行检索给对应系统安装中文的办法</li><li>把DEBUG或DEBUG32放到<code>masmplus的安装目录/Project</code>下。例如，我的<code>masmplus</code>安装在<code>C:/Assembly/masmplus</code>下，则把两个DEBUG放到<code>C:/Assembly/masmplus/Project</code>下。</li><li>打开DOSBox，输入<code>mount c: C:/Assembly/masmplus/Project</code>，每次重新打开都要输入。</li><li>输入<code>c:</code>，切换到<code>c:</code>盘符，输入<code>debug</code>或<code>debug32</code>进入调试。</li><li>使用<code>asmsplus</code>编写文件：<code>文件</code>-&gt;<code>新建</code>-&gt;<code>MASM工程</code>-&gt;<code>第一个DOS EXE</code>-&gt;<code>确定</code>-&gt;<code>修改文件名，注意以.asm结尾</code>-&gt;<code>Save</code>。最后会得到一个默认程序。可以完全删掉，因为默认程序的语法和王爽的书上的语法略有不同，后者也可以在DOS和masm的环境跑起来。</li></ol><p><img src="https://static.xialing.icu/img/202407312344601.webp"></p><p><img src="https://static.xialing.icu/img/202407312344864.webp"></p><ol start="8"><li>编写好文件后，点击<code>编译</code>-&gt;<code>编译(ASM)</code>-&gt;<code>连接(OBJ)</code>，最终得到了一个同文件名，扩展名为<code>.exe</code>的文件。</li></ol><p><img src="https://static.xialing.icu/img/202407312347927.webp"></p><ol start="9"><li>要运行，在DOS下输入<code>文件名</code>即可</li><li>要在<code>Debug</code>下调试，在DOS下输入<code>Debug 文件名</code>即可</li></ol><h3 id="Debug的使用"><a href="#Debug的使用" class="headerlink" title="Debug的使用"></a>Debug的使用</h3><p>Debug 有几个比较常用的指令：</p><table>    <thead>    <tr>        <th>命令</th>            <th>功能</th>            <th>助记</th>        </tr>    </thead>    <tbody>        <tr>        <td colspan="3">查看与修改内容</td>        </tr>        <tr>            <td>r</td>            <td>查看寄存器的内容</td>            <td><strong>R</strong>egister</td>        </tr>        <tr>        <td>d</td>            <td>查看一块内存空间的内容</td>            <td><strong>D</strong>ump</td>        </tr>        <tr>        <td>e</td>            <td>修改一块内存的内容</td>            <td><strong>E</strong>dit</td>        </tr>        <tr>        <td colspan="3">程序的执行</td>        </tr>                <tr>        <td>t</td>            <td>单步执行某个程序</td>            <td><strong>T</strong>race</td>        </tr>                <tr>        <td>g</td>            <td>跳转到某个偏移地址执行指令</td>            <td><strong>G</strong>o</td>        </tr>        <tr>        <td>p</td>            <td>执行循环，直到cx为0为止</td>            <td><strong>P</strong>trong</td>        </tr>        <tr>        <td colspan="3">汇编相关</td>        </tr>            <tr>        <td>a</td>            <td>选定一块内存空间，进行汇编程序的编写</td>            <td><strong>A</strong>ssemble</td>        </tr>              <tr>        <td>u</td>            <td>将内存的内容反汇编</td>            <td><strong>U</strong>nassemble</td>        </tr>    </tbody></table><p>具体的使用方法，这里就不赘述了，请参见王爽的教材。</p><h2 id="在编辑器中编写一个-asm程序"><a href="#在编辑器中编写一个-asm程序" class="headerlink" title="在编辑器中编写一个.asm程序"></a>在编辑器中编写一个<code>.asm</code>程序</h2><p>示例使用的是masmplus，使用其他编辑器也可以。</p><p>程序的基本框架如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">; An example program</span><br><span class="line"></span><br><span class="line">assume cs:codesg</span><br><span class="line"></span><br><span class="line">datasg segment</span><br><span class="line">db 20 dup(?)</span><br><span class="line">datasg ends</span><br><span class="line"></span><br><span class="line">stacksg segment</span><br><span class="line">db 16 dup(?)</span><br><span class="line">stacksg ends</span><br><span class="line"></span><br><span class="line">codesg segments</span><br><span class="line">start:mov ax, datasg</span><br><span class="line">mov ds, ax</span><br><span class="line">mov ax, stacksg</span><br><span class="line">mov ss, ax</span><br><span class="line"></span><br><span class="line">        mov cx, 10</span><br><span class="line">s:add ax, ax</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax, 4c00H</span><br><span class="line">int 21h</span><br><span class="line">codesg ends</span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p>其中，<code>datasg</code>、<code>stacksg</code>、<code>codesg</code>分别代表数据段、栈段以及代码段。因为一个段最大只能占64KB，因此把代码分段进行处理可以让看代码的人更容易理解、同时程序在执行过程中更不容易出错。</p><p><code>assume</code>把寄存器和对应的段关联起来，我们不关心它具体的作用，就把它当成汇编源程序编译之前的必要吟唱吧。</p><p><code>start:</code>表明了程序执行的第一条语句，<code>IP</code>会指向它。如果代码段的第一条语句并不是第一条想要执行的语句，就需要加上<code>start:</code>，同时，在<code>end</code>后也要把<code>start</code>写上。这里，<code>start</code>只是一个名字，换成<code>aa</code>也是可以的，只需要确保和<code>end</code>后面的名字对应。</p><p>注意，上边提到的<code>datasg</code>等段名仍然只是一个标号。如何让CPU知道各个段的含义呢？</p><ul><li>对于代码段，<code>start:</code>标号指向的语句为程序的入口，<code>CS:IP</code>会指向这条语句的首地址，也就让其所在的<code>codesg</code>成为了代码段；</li><li>对于栈段和数据段，通过在代码段中，把段名送入对应的段寄存器中，就实现了寄存器和段的关联。</li></ul><h2 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h2><p>寻址的方法列举如下</p><ul><li>立即数：<code>MOV AX, 1000H</code>，等价于<code>(AX)</code>&#x3D;1000H。之前没有说过这个符号，<code>(寄存器名/地址)</code>指的是这个寄存器或地址存储的值。</li><li>寄存器：<code>MOV AX, BX</code>，等价于<code>(AX)</code>&#x3D;<code>(BX)</code>。注意位数到对应，8bit对8bit，16bit对16bit。<strong>错误示例</strong>：<code>MOV AX, BL</code>。</li><li>直接寻址：<code>MOV AX, [1000H]</code>。如果<code>(1000H)</code>&#x3D;2345H，则该语句使得<code>(AX)</code>&#x3D;2345H。这里要说明，在<code>Debug</code>中，[0]理解为DS:0，而在<code>masm</code>中，[0]理解为数字0。</li><li>直接寻址——数据标号法：<code>MOV AX, VAL</code>。如果<code>(VAL)</code>&#x3D;2345H，则该语句使得<code>(AX)</code>&#x3D;2345H。也要注意位数的对应。</li><li>间接寻址：<code>MOV AX, [BX]</code>。如果<code>(BX)</code>&#x3D;2345H，则该语句使得<code>(AX)</code>&#x3D;2345H。注意，几个通用寄存器中，只有<code>[BX]</code>可以用来间接寻址。还可以间接寻址的有：<code>BP</code>，<code>SI</code>，<code>DI</code>，它们默认的段寄存器不全相同。</li><li>相对寻址：<code>MOV AX, VAL[COUNT]，(AX)=(DS:(VAL+COUNT))</code>。</li><li>基址变址寻址：<code>MOV AX,[BP][DI]</code>，<code>(AX)</code>&#x3D;<code>(SS:(BP+DI))</code>。两层括号，强调存进去的是地址存储的值，而不是地址本身。且必须一个基址+一个变址，不可以两个寄存器类型相同。</li><li>相对基址变址寻址，是上边两个的结合，可以类比。<code>MOV AX, VAL[BI][SI]</code></li></ul><p>这几种寻址方法，各有各的应用场景。到底采取哪种寻址方法，和寻址的要求是密切相关的。换句话说，如果需要一个变量，<code>[BX]</code>就足够了，如果要两个变量，可能就需要<code>[BX]和[DI]</code>共同起作用，如果还需要一个常量，那就需要<code>idata</code>。这里不去阐述到底哪种数据类型适合哪种寻址方式，只是点到为止。<strong>但需要强调的是，如果要采取基址变址的寻址方式，一定是一个基址寄存器+一个变址寄存器的形式！</strong></p><h2 id="伪指令"><a href="#伪指令" class="headerlink" title="伪指令"></a>伪指令</h2><h3 id="db、dw、dd"><a href="#db、dw、dd" class="headerlink" title="db、dw、dd"></a><code>db</code>、<code>dw</code>、<code>dd</code></h3><ul><li><code>db</code>用来定义字节型数据，<em>Define Byte</em></li><li><code>dw</code>用来定义字型数据，<em>Define Word</em></li><li><code>dd</code>用来定义双字型数据，<em>Define Dword</em></li></ul><h3 id="dup"><a href="#dup" class="headerlink" title="dup"></a><code>dup</code></h3><p><code>dup</code>用来进行数据的重复。</p><p>如<code>db 3 dup (0)</code>定义了三个字节宽度的内容，每个字节的内容都是0。</p><h3 id="offset"><a href="#offset" class="headerlink" title="offset"></a><code>offset</code></h3><p><code>offset</code>用来计算标号的偏移地址，相对于谁的偏移地址呢？相对于段地址的！哪个段地址？写在<code>assume</code>伪指令里的。</p><p>看一个有些难度的例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">assume cs:codesg</span><br><span class="line">codesg segment</span><br><span class="line">s:mov ax, bx;mov ax, bx 的机器码占两个字节</span><br><span class="line">mov si, offset s;si一般存储源偏移地址</span><br><span class="line">mov di, offset s0;di一般存储目的偏移地址</span><br><span class="line">mov ax, cs:[si];思考：为什么要用ax作为中转</span><br><span class="line">mov cs:[di], ax;答案：因为不可同时对两块内存操作</span><br><span class="line">s0:nop;nop的机器码占一个字节</span><br><span class="line">nop</span><br><span class="line">codesg ends</span><br><span class="line"></span><br><span class="line">end s</span><br></pre></td></tr></table></figure><p>这段代码的作用，是把第一条指令复制到<code>s0</code>标号处。</p><h3 id="数据标号"><a href="#数据标号" class="headerlink" title="数据标号"></a>数据标号</h3><p>之前的程序，使用的是地址标号来表示数据的地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">;例子摘自王爽《汇编语言 第三版》P287</span><br><span class="line">assume cs:code</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line">a: db 1, 2, 3, 4, 5, 6, 7, 8</span><br><span class="line">b: dw 0</span><br><span class="line"></span><br><span class="line">start:mov si, offset a</span><br><span class="line">mov bx, offset b</span><br><span class="line">mov cx, 8</span><br><span class="line">s:mov al, cs:[si]</span><br><span class="line">mov ah, 0</span><br><span class="line">add cs:[bx], ax</span><br><span class="line">inc si</span><br><span class="line">loop s</span><br><span class="line"></span><br><span class="line">mov ax, 4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p>在上面的例子中，使用标号<code>a</code>、<code>b</code>指明了代码段中一些数据存放的地址。通过<code>offset</code>伪代码可以计算出对应地址，进行数据的操作。</p><p><strong>但如果去掉<code>:</code>呢？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">;例子摘自王爽《汇编语言 第三版》P288</span><br><span class="line">assume cs:code</span><br><span class="line"></span><br><span class="line">code segment</span><br><span class="line">a db 1, 2, 3, 4, 5, 6, 7, 8</span><br><span class="line">b dw 0</span><br><span class="line"></span><br><span class="line">start:mov si, 0</span><br><span class="line">mov cx, 8</span><br><span class="line">s:mov al, a[si]</span><br><span class="line">mov ah, 0</span><br><span class="line">add b, ax</span><br><span class="line">inc si</span><br><span class="line">loop s</span><br><span class="line">        </span><br><span class="line">mov ax, 4c00h</span><br><span class="line">int 21h</span><br><span class="line"></span><br><span class="line">code ends</span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p>此时的<code>a</code>、<code>b</code>具有两层含义：</p><ol><li>表示内存地址</li><li>表示单元长度</li></ol><p>例如，<code>a</code>标号表示了8个数字中第一个数字的字节地址，并且指明了每个数据占一个字节。</p><p>通过这样的方法，寻址表达更加简洁。</p><p><strong>问题是，计算机怎么知道一个数据编号到底代表哪里？换句话说，有多个段的情况，应该如何处理？</strong></p><p>知道偏移量，相对于哪个代码段的偏移量呢？编译器怎么知道？CPU又怎么知道呢？</p><ul><li>对于编译器问题的解答：编译器通过<code>assume</code>伪指令把寄存器和代码段关联起来。例如，<code>assume cs:codesg</code>让编译器认为，<code>codesg</code>的段地址存放在<code>CS</code>中。</li><li>对于CPU问题的解答：CPU通过访问对应段寄存器的值寻找对应的段地址。</li></ul><p>举个例子，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">; 自己想的例子</span><br><span class="line">assume ds:datasg, cs:codesg</span><br><span class="line"></span><br><span class="line">datasg segment</span><br><span class="line">a db 10 dup(?)</span><br><span class="line">datasg ends</span><br><span class="line"></span><br><span class="line">codesg segment</span><br><span class="line">start:mov ax, datasg</span><br><span class="line">mov ds, ax</span><br><span class="line"></span><br><span class="line">mov dl, a</span><br><span class="line">codesg ends</span><br><span class="line"></span><br><span class="line">end start</span><br></pre></td></tr></table></figure><p>当写下<code>mov dl, a</code>的时候，CPU在编译器的帮助下，理解的指令是这样的：</p><p><code>mov dl, ds:a</code>，也是<code>mov dl, ds:[0]</code></p><ul><li>编译器做了什么？在编译的时候，看到标号<code>a</code>。”<code>a</code>在哪里？“，编译器问道。由第二行的伪指令<code>assume</code>，它知道，应该到数据段中寻找，把<code>a</code>标号的段地址理解为数据段的；</li><li>CPU做了什么？他通过编译器的翻译，知道了，<code>a</code>的偏移地址要到<code>DS</code>中寻找，把我们写的源程序理解为<code>mov dl, ds:a</code>；</li><li>我们应该做什么？写好<code>assume</code>伪指令，把寄存器和数据段对应正确，让编译器理解清楚；给对应的段寄存器通过<code>mov</code>指令正确赋值，使得CPU能够访问到正确的段地址。</li></ul><h3 id="直接定址表"><a href="#直接定址表" class="headerlink" title="直接定址表"></a>直接定址表</h3><p>如果要把内存当中的<code>0-F</code>输出为字符<code>0-F</code>，有什么好的方法吗？</p><p>当然可以注意到，数字<code>0-9</code>和字符<code>0-9</code>，数字<code>A-F</code>和字符<code>A-F</code>之间各自有对应的线性映射。但问题是，这两个映射并不是同一个映射，一个是<code>+30H</code>，另一个是<code>+37H</code>。怎么才好？分类讨论不够方便，如果能建立一个表格就好了。</p><p><code>table db 0123456789ABCDEF</code></p><p>这样，根据数字的偏移量，就可以通过<code>table[bx]</code>来访问对应的字符啦！这就是一个通用的线性映射。</p><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><p>这里，我们只关注内中断。本来中断就不是授课内容，所以这部分是感兴趣才阅读下来的。和外中断相比，还是内中断更重要一些。为什么呢？因为理解了中断，才能明白程序最后的两句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov ax, 4c00h</span><br><span class="line">int 21h</span><br></pre></td></tr></table></figure><p>到底是什么意思啊！</p><p>关于中断的总结，从略，总结的目的是为了理解上面两行代码。</p><p>中断的过程是：</p><ol><li>CPU收到中断信息</li><li>将<code>标志寄存器</code>压栈，设置<code>CS</code>和<code>IP</code>，并且置<code>TF</code>和<code>IF</code>为0</li><li>根据中断向量表，寻找到相应中断编号的中断处理程序入口地址</li><li>中断处理程序开始运行</li></ol><p><strong>理解这两行的背景知识：</strong></p><ul><li><code>AH</code>存放调用的子程序</li><li><code>AL</code>存放参数</li><li><code>int</code>意思是调用中断处理程序</li></ul><p>所以，这两行的意思是：</p><ul><li>传递<code>4c00h</code>给<code>AX</code></li><li>调用<code>21h</code>号中断处理程序的<code>4c</code>号子程序</li><li>根据<code>al</code>的值，返回值为0</li></ul>]]></content>
      
      
      <categories>
          
          <category> Assembly </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx与Ubuntu</title>
      <link href="//2024/07/nginx-with-ubuntu/"/>
      <url>//2024/07/nginx-with-ubuntu/</url>
      
        <content type="html"><![CDATA[<h2 id="一些题外话"><a href="#一些题外话" class="headerlink" title="一些题外话"></a>一些题外话</h2><p>暑假捣鼓捣鼓Nginx，花了大价钱在腾讯云买了个服务器，结果通过域名访问需要备案。其实我早就料到了这一点，只是想赌一赌，结果还是需要备案啊。。我还花了很大功夫提交了备案申请，但想想算了，太麻烦，后边还得公安备案。等我一年的服务器到期之后，迁移到国外就行了。</p><p>话说为啥要用服务器呢？想折腾折腾吧。说是想模仿一个用户登录系统，才发现，我原来欠缺了好多东西：前端、后端、数据库，都是我没接触到的。大一光顾着学数学了，一些技术一直没研究。所以先从文件存储开始，看看如何访问文件吧。这就引出了<code>Nginx</code>。</p><h2 id="使用Nginx"><a href="#使用Nginx" class="headerlink" title="使用Nginx"></a>使用Nginx</h2><p>服务器的操作系统为<code>Ubuntu 22.04 LTS</code>。我还奇怪呢，为什么我哦在VMware的虚拟机有图形化界面，服务器的只有命令行？原来服务器为了节约资源，一般不装图形界面。原来如此，为了体验纯正的Linux，还得用服务器。</p><h3 id="Nginx的安装"><a href="#Nginx的安装" class="headerlink" title="Nginx的安装"></a>Nginx的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p><strong>其中：</strong></p><p><code>sudo</code>意味以管理员模式运行，权限很高</p><h3 id="找到配置文件，进行修改"><a href="#找到配置文件，进行修改" class="headerlink" title="找到配置文件，进行修改"></a>找到配置文件，进行修改</h3><p>这部分很绕，查找了不少资料。有一个比较权威的<a href="https://serverfault.com/questions/527630/difference-in-sites-available-vs-sites-enabled-vs-conf-d-directories-nginx">链接</a>，但是我没看懂XD。</p><p>我当前系统的情况是这样的。安装完后，出现默认的Nginx欢迎页面。</p><p><img src="https://static.xialing.icu/img/202407240024807.webp" alt="默认欢迎页面"></p><p>这个页面的配置文件，保存在<code>/etc/nginx/sites-available/default</code>中，<code>default</code>是配置文件。除此之外，有的博客会建议修改<code>/etc/nginx/</code>下的<code>nginx.conf</code>或者在<code>/etc/nginx/conf.d</code>中新建配置文件。这两种建议我都尝试过，但是没能达到预期，只能在屏幕上收到403 Forbidden或者404 Not Found。</p><p><strong>我的修改方法</strong></p><p>不敢说是正确的修改方法，但是确实起作用：</p><ol><li><strong>只</strong>修改default文件。把原来的所有内容都注释掉，采用<code>#</code>注释。</li><li>输入以下配置：</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line"><span class="attribute">server_name</span> 你的IP地址或者域名（如<span class="number">10.80.42.245</span>或者example.com）</span><br><span class="line"></span><br><span class="line">root /var/www;</span><br><span class="line"></span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line"><span class="attribute">autoindex</span> <span class="literal">on</span>; <span class="comment"># 自动索引</span></span><br><span class="line">        <span class="attribute">autoindex_exact_size</span> <span class="literal">off</span>; <span class="comment"># 显示文件大小</span></span><br><span class="line">        <span class="attribute">autoindex_localtime</span> <span class="literal">on</span>; <span class="comment"># 显示本地时间</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>说明：</strong></p><ul><li><code>server</code>体放到最外层。如果发现文件中有<code>http</code>开头的大括号，说明找错了文件，找的可能是<code>nginx.conf</code>；</li><li><code>listen</code>表示监听的端口，HTTP用80即可；</li><li><code>server_name</code>表示服务器名，写IP地址或者域名；</li><li><code>root</code>表示在本地存储的根目录。比如按当前设置，当有人向服务器请求<code>example.com/</code>的文件时，<code>Nginx</code>会查找本地存储<code>/var/www/</code>下的文件，<code>www</code>后边的<code>/</code>，来自于<code>location</code>后方。换句话说，<code>root</code>的地址和<code>location</code>后面的地址是<strong>拼接</strong>。另一种方式是<code>alias /var/www/</code>。这里的区别是，<code>alias</code>是对地址进行<strong>替换</strong>，所以<code>www</code>后方的<code>/</code>不可以省略；</li><li><code>autoindex</code>表示是否自动开启索引。注意，如果要<code>autoindex</code>起作用，需要在当前目录下没有<code>index.html</code>等索引文件。</li></ul><h2 id="修改文件（vim）"><a href="#修改文件（vim）" class="headerlink" title="修改文件（vim）"></a>修改文件（vim）</h2><p><code>Ubuntu</code>自带的修改文件程序为<code>vim</code>，如何使用<code>vim</code>修改文件呢？</p><h3 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h3><p>如何打开想要的文件？这里展示几种和路径有关的常见命令：</p><p><code>ls</code> 显示当前目录下的文件夹和文件；</p><p><code>cd ..</code>打开上一级；</p><p><code>cd /path</code>打开名为<code>path</code>的文件夹；</p><p><code>touch filename.html</code>新建一个名为<code>filename.html</code>的文件；</p><p><code>sudo rm filename.html</code>删除名为<code>filename.html</code>的文件。</p><p>这些操作比较简单，但对于我们当前的使用已经足够了。</p><h3 id="使用vim打开文件"><a href="#使用vim打开文件" class="headerlink" title="使用vim打开文件"></a>使用<code>vim</code>打开文件</h3><p>输入<code>sudo vim /path/to/your/file/test.html</code>使用<code>vim</code>编辑文件。这里，<code>sudo</code>是因为修改有些文件需要管理权限。</p><p><img src="https://static.xialing.icu/img/202407240048900.webp" alt="vim页面概览"></p><ul><li><p>输入<code>i</code>进入到插入（INSERT）模式，可以修改内容，就像一般的文本编辑器一样；</p></li><li><p>进入插入模式后，按<code>Esc</code>退出该模式；</p></li><li><p>在上一步的基础上，完成编辑，保存退出，用<code>:wq</code>。</p></li></ul><p>这些操作，暂时够用了。</p><h2 id="使设置生效"><a href="#使设置生效" class="headerlink" title="使设置生效"></a>使设置生效</h2><p>使修改后的Nginx设置生效，使用<code>sudo nginx -s reload</code>。再打开网页，发现大功告成：</p><p><img src="https://static.xialing.icu/img/202407240052676.webp" alt="大功告成"></p><h2 id="重装Nginx"><a href="#重装Nginx" class="headerlink" title="重装Nginx"></a>重装Nginx</h2><p>有时候，走了太多弯路，想要恢复Nginx的默认设置，怎么办呢？</p><p><a href="https://henchat.net/%E5%AE%8C%E6%95%B4%E9%87%8D%E8%A3%85nginx/">参考</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove --purge nginx nginx-full nginx-common</span><br><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>有可能需要<code>sudo</code>，第二行可以替换为等效语句（如2.1Nginx安装的两句话）。</p><h2 id="选择什么文件夹共享？"><a href="#选择什么文件夹共享？" class="headerlink" title="选择什么文件夹共享？"></a>选择什么文件夹共享？</h2><p>我一开始选择的是自定义的一个文件夹，也按照要求修改了权限，但是仍然显示<code>403 Forbidden</code>。修改为<code>\var\www</code>后，发现可以正常共享。不知道哪里设置出了问题。</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机|如何让VMware虚拟机使用Clash代理访问外网</title>
      <link href="//2024/07/clash-vmware-proxy/"/>
      <url>//2024/07/clash-vmware-proxy/</url>
      
        <content type="html"><![CDATA[<p>软件：VMware Workstation Pro 17</p><h1 id="主机部分"><a href="#主机部分" class="headerlink" title="主机部分"></a>主机部分</h1><h2 id="获取本机-IP"><a href="#获取本机-IP" class="headerlink" title="获取本机 IP"></a>获取本机 IP</h2><p><code>cmd</code> -&gt; <code>ipconfig</code></p><p>例如，本机 IP 为：<code>192.168.31.195</code></p><p><img src="https://static.xialing.icu/img/202407222336245.webp"></p><p>一定要找对主机连接的网络，在<code>ipconfig</code>的输出中，往往有多个网络信息，我们需要的，是<strong>主机和外部网络的连接</strong>。换句话说，就是你电脑连的WiFi，或者插着网线的网络。</p><h2 id="打开虚拟网络编辑器"><a href="#打开虚拟网络编辑器" class="headerlink" title="打开虚拟网络编辑器"></a>打开虚拟网络编辑器</h2><p><code>编辑</code>-&gt;<code>虚拟网络编辑器</code>，选择<code>VMNet8</code>。</p><h3 id="修改子网-IP"><a href="#修改子网-IP" class="headerlink" title="修改子网 IP"></a>修改子网 IP</h3><p>前两项与主机 IP 一致，<strong>但第三项必须不同</strong>，如 <code>192.168.21.0</code>。</p><p><strong>注意，这里<em>没有</em>把31打错成21！！！</strong></p><p><strong>注意，这里<em>没有</em>把31打错成21！！！</strong></p><p><strong>注意，这里<em>没有</em>把31打错成21！！！</strong></p><p>一般<strong>第四项</strong>为0，<strong>第三项</strong>可以看心情修改。</p><blockquote><p>注：这里有一个小技巧。当设置完子网IP后，点击窗口右下角的<code>应用</code>，其余的配置都由VMware自动配置完成，不需要再手动设置了。换句话说，本节“主机部分”剩下的内容不必再看，直接进入VMware部分即可。</p></blockquote><h3 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h3><p>一般为 <code>255.255.255.0</code>，不论真实连接的网络的子网掩码是多少。默认不用动。</p><h3 id="NAT-设置"><a href="#NAT-设置" class="headerlink" title="NAT 设置"></a>NAT 设置</h3><ol><li><p>将VMnet信息改为 NAT 模式。</p></li><li><p>网关 IP 前三项与子网 IP 相同，第四项一般为2，如<code>192.168.21.2</code>。</p></li></ol><h3 id="DHCP-设置"><a href="#DHCP-设置" class="headerlink" title="DHCP 设置"></a>DHCP 设置</h3><p>起始 IP 地址与结束 IP 地址的前三项和主机 IP 相同，第四项默认的不需要改，如分别为<code>192.168.21.128</code>，<code>192.168.21.254</code>。</p><h2 id="网络适配器设置"><a href="#网络适配器设置" class="headerlink" title="网络适配器设置"></a>网络适配器设置</h2><p>打开控制面板：<code>cmd</code>-&gt;<code>control</code>-&gt;网络和Internet-&gt;网络和共享中心-&gt;更改适配器选项</p><p>VMNet8的IPv4 的地址设置为 <code>192.168.21.1</code>，前三项与子网 IP 相同，第四项一般是1。</p><p>子网掩码仍为<code>255.255.255.0</code>。</p><h1 id="VMware部分"><a href="#VMware部分" class="headerlink" title="VMware部分"></a>VMware部分</h1><p>在<code> 虚拟机</code>-&gt;<code>设置</code> 中，将硬件网卡（网络适配器）设置为 VMnet8 网络适配器。</p><h1 id="虚拟机部分"><a href="#虚拟机部分" class="headerlink" title="虚拟机部分"></a>虚拟机部分</h1><p>随后，启动虚拟机。</p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>系统：Ubuntu22.04.4 LTS，有图形界面</p><p>Clash 的端口默认为<code>7890</code>，打开虚拟机的代理设置（<code>Settings</code>-&gt;<code>Network</code>-&gt;<code>Network Proxy</code>），IP 为本机 IP，即最开头提到的<code>192.168.31.195</code>，端口为 Clash 的端口，即<code>7890</code>。</p><p><img src="https://static.xialing.icu/img/202407222356202.webp"></p><h2 id="Windows-XP"><a href="#Windows-XP" class="headerlink" title="Windows XP"></a>Windows XP</h2><p>如果喜欢倒腾老系统，应该如何设置代理呢？</p><p>XP的代理设置的一个办法是：打开IE，在IE的设置中可以找到代理设置。</p><p>另一个方法和Win7类似，也是在控制面板中找到类似的设置即可。懒得补图了，差别就在于选项卡的名字不太一样，但总归是网络那部分的选项。进到<code>LAN Settings</code>之后，一切都一样了。</p><h2 id="Windows-7"><a href="#Windows-7" class="headerlink" title="Windows 7"></a>Windows 7</h2><p>Win7是我很喜欢的一个系统，怎么设置Win7的代理呢？</p><p>打开<code>控制面板</code>-&gt;<code>网络和共享中心</code>，剩下的按图操作即可：</p><p><img src="https://static.xialing.icu/img/202407311400589.webp" alt="win7的操作"></p><p>没注意过XP是否可以如此操作。如果可以的话，这就是个通法了。</p><h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><ul><li>在家和学校不同网络下，本机 IP 会变化，这时候，需要修改 IP 到现在的 IP。</li><li>有时候，会出现修改 IP 后，即使设置正确，虚拟机仍无法联网的问题。笔者遇到了这种情况，不知道什么原因。我成功 Debug 的一个方案，就是恢复虚拟机网络的默认设置，删除 VMnet8，再重新设置。注意此时保证虚拟机是关闭的。</li><li>如果在进行操作后，发现Clash无法代理，具体表现为，在主机浏览器中输入任何地址，都会显示无法访问。此时很可能是Clash的端口被占用，发生冲突。可以在命令行窗口(<code>win+R</code> -&gt; <code>cmd</code>)输入<code>netstats -ano</code>查看7890端口被哪个PID占用。之后在任务管理器中的详细信息部分可以查到占用此端口的程序，大概率是vmware。这个时候，把Vmnet8中NAT设置中的端口清空即可。</li><li>如果发现，可以正常访问网页，但是无法登录，具体表现为，打开任何一个网站（百度、B站、学校的统一身份认证），输入账号和密码，提示找不到用户或者重定向后仍然是未登录状态。问题可能在于，使用了浏览器的<code>ModHeader</code>扩展修改了请求头。禁用该扩展后，可以正常登录。</li><li>如果操作后，发现仍然无法上网。可以检查一下，是否在“修改子网IP”的步骤中把第三位设置为了和主机不同的IP。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>建站相关|用于Github Pages的域名被其他用户使用</title>
      <link href="//2024/07/site-domain-takeover/"/>
      <url>//2024/07/site-domain-takeover/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我的<code>Github Pages</code>只绑定了<code>blog.xialing.icu</code>这一域名，其他的<code>@.xialing.icu</code>以及<code>www.xialing.icu</code>没有投入使用，<br>此前，访问后两个网站，显示无法连接，符合预期。今天访问的时候，突然指向了另一个页面，如下图：<br><img src="https://static.xialing.icu/img/202407221744765.webp" alt="域名被其他人使用"><br><strong>我没有配置过这个页面，为什么会出现这种问题？</strong></p><h2 id="原因推测"><a href="#原因推测" class="headerlink" title="原因推测"></a>原因推测</h2><ol><li>是不是域名被劫持了？关掉魔法，发现不管是在美国还是在国内，都会指向该页面，排除运营商干扰；</li><li>是不是我在腾讯云DNS解析的配置有误？发现解析指向正确，并没有指向别的网址（这种做法能不能实现博客的访问暂时不谈，至少不会指向别的页面）<br><img src="https://static.xialing.icu/img/202407221748647.webp" alt="正确的腾讯云配置"></li><li>难道是<code>Github</code>的问题？尝试能不能把自定义域名改成<code>xialing.icu</code>，发现提示域名已被占用！<br><img src="https://static.xialing.icu/img/202407221751433.webp" alt="Github的错误提示"><br>大概定位到问题所在了，应该是别人把我拥有的域名用于他的<code>Github Pages</code>。这还了得！哪能白占我便宜！</li></ol><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><p>跟随<a href="https://docs.github.com/pages/configuring-a-custom-domain-for-your-github-pages-site/verifying-your-custom-domain-for-github-pages">链接</a>，找到<strong>Verify</strong>域名的方法，在腾讯云的DNS解析中添加一次TXT记录即可。如下图操作：<br><img src="https://static.xialing.icu/img/202407221806495.webp" alt="左侧是腾讯云的配置页面，右图为Github帮助文档的示例"><br>之后点击<code>Verify</code>即可。如此操作后，还要大概等待一周左右，才能把被占用的页面释放。</p><h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>为什么我的页面会被其他人占用？网页上的原文为：</p><blockquote><p>Domain takeovers can happen when you delete your repository, when your billing plan is downgraded, or after any other change which unlinks the custom domain or disables GitHub Pages while the domain remains configured for GitHub Pages and is not verified.</p></blockquote><p>也就是说，域名被其他人占用，需要具备：</p><ol><li>域名未验证(<code>verified</code>)；</li><li>域名已配置为<code>Github Pages</code>；</li><li>域名和先前的<code>Github Pages</code>解除了关系。</li></ol><p>我怀疑，造成我的域名被其他人占用的原因，一个是域名没有验证；再一个是，我曾经使用其他的域名配置过<code>Github Pages</code>，但后来又把这个域名解除掉了。这样就满足了以上三点。</p><p>对方怎么操作的呢？只要把自己的个人<code>Github</code>页面的自定义域名写成我的即可。因为我的域名已经配置好了<code>Github Pages</code>。但更细节的原因，由于我欠缺相关知识，不知道如何解释。感兴趣的读者欢迎在知乎私信我。</p><p>目前还不能准确排查出来问题的原因是什么，但是如果验证了自己的域名，这种问题一定不会发生。不幸的是，个人建站的许多教程中并没有提到验证域名这一关键步骤，导致有些人乘虚而入。七天之后，我再检验一下，此方法是否有效。</p><p><strong>更新：</strong></p><p>此法有效。现在<a href="https://xialing.icu/">我的网站</a>已经指向正确。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Latex教程学习笔记</title>
      <link href="//2024/07/learn-latex-1/"/>
      <url>//2024/07/learn-latex-1/</url>
      
        <content type="html"><![CDATA[<h1 id="学习链接"><a href="#学习链接" class="headerlink" title="学习链接"></a>学习链接</h1><ul><li><a href="https://www.overleaf.com/latex/learn/free-online-introduction-to-latex-part-1">Part 1</a></li><li><a href="https://www.overleaf.com/latex/learn/free-online-introduction-to-latex-part-2">Part 2</a></li><li><a href="https://www.overleaf.com/latex/learn/free-online-introduction-to-latex-part-3">Part 3</a></li><li><strong>本文最好配合链接中的ppt食用</strong></li></ul><h1 id="第一部分：基础"><a href="#第一部分：基础" class="headerlink" title="第一部分：基础"></a>第一部分：基础</h1><h2 id="态度的转变"><a href="#态度的转变" class="headerlink" title="态度的转变"></a>态度的转变</h2><ul><li>用指令描述“这段文字是什么”，而不是“它应该长什么样”<ul><li>这个观点很发人深省</li></ul></li><li>注重内容</li><li>让Latex进行排版工作</li></ul><h2 id="文章的起点"><a href="#文章的起点" class="headerlink" title="文章的起点"></a>文章的起点</h2><p>在写每一篇文章之前，都需要指明这篇文章的类型，用<code>\documentclass&#123;&#125;</code></p><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><ul><li>要显示单引号，形如：&#96;&#96;text’&#96;；</li><li>要显示双引号，形如：&#96;&#96;&#96;text’’&#96;</li><li>要打印字面<code>%</code>, <code>#</code>, <code>&amp;</code>, <code>$</code>，需要在字符前加上\来进行转义，或者理解为指令</li></ul><h3 id="符号——表示数学公式"><a href="#符号——表示数学公式" class="headerlink" title="$符号——表示数学公式"></a><code>$</code>符号——表示数学公式</h3><p>$符号在Latex中用来表示数学公式，使用时要配对，会自动忽略公式中的空格</p><ul><li><code>^</code>表示上标<ul><li>如<code>2^3</code></li></ul></li><li><code>_</code>表示下标<ul><li>如<code>F_n</code></li></ul></li><li><code>&#123;&#125;</code>把公式组成一组<ul><li>如<code>F_&#123;n-1&#125;</code></li></ul></li><li>用<code>\</code>开头还可以指明希腊字母<ul><li>如<code>\mu</code></li></ul></li><li><code>$$</code>包裹的是行内公式，如果要打印比较大的行间公式，使用<code>\begin&#123;equation&#125;</code>和<code>\end&#123;equation&#125;</code></li></ul><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>刚刚提到的<code>\begin&#123;equation&#125;</code>和<code>\end&#123;equation&#125;</code>之间的部分就是一个环境。</p><p>在环境当中，一些成分的显示可能会有不同，如<code>\sum</code>指令显示的<code>大\sigma</code>会更大，上下标的位置也会有不同。</p><p>有一些有用的环境，如<code>itemize</code>和<code>enumerate</code>。前者创建一个无标号的列表，后者创建一个有标号的列表。</p><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><p>上面提到的命令和环境都是<code>Latex</code>自带的，除此之外，还可以使用其他的宏包。</p><h2 id="再看数学公式"><a href="#再看数学公式" class="headerlink" title="再看数学公式"></a>再看数学公式</h2><p>这次，使用<code>amsmath</code>这一宏包下的指令写一些数学公式。</p><ul><li><p>使用略有不同的<code>\begin&#123;equation*&#125;</code>，可以让行间公式不参与编号。</p></li><li><p>使用<code>\min</code>，<code>\max</code>等指令可以让公式更好看。可以用<code>\operatorname</code>指定自己的变量名，达到和<code>min</code>一样的效果。</p></li><li><p>要对齐等式，使用<code>align*</code>环境，&amp;符分隔了&#x3D;两侧，指明了对齐的参考系。</p></li></ul><h1 id="第二部分：有结构的文档与更多"><a href="#第二部分：有结构的文档与更多" class="headerlink" title="第二部分：有结构的文档与更多"></a>第二部分：有结构的文档与更多</h1><h2 id="标题和摘要"><a href="#标题和摘要" class="headerlink" title="标题和摘要"></a>标题和摘要</h2><ul><li>在导言区创建标题、作者、日期等内容，注意，这里只是声明了相关内容，并没有实际创建（回忆C语言中关于声明和定义的区别）。如果要创建标题，需要在<code>document</code>环境中使用<code>\maketitle</code>命令。</li><li>在<code>document</code>环境中，用<code>\begin</code>与<code>\end</code>创建<code>abstract</code>环境。以后为了行文方便，简写为创建某环境。</li></ul><h2 id="分节"><a href="#分节" class="headerlink" title="分节"></a>分节</h2><ul><li>使用<code>\section</code>和<code>\subsection</code>即可</li><li>命令的结尾带上<code>*</code>，意思是在目录中不显示该节，和数学公式带<code>*</code>的含义相同</li></ul><h2 id="标签与引用"><a href="#标签与引用" class="headerlink" title="标签与引用"></a>标签与引用</h2><ul><li>用<code>\label</code>指明一个标签，用<code>\ref</code>在行文中引用标签，这部分内容会被替换为标签对应的小节号，或者用<code>amsmath</code>的命令<code>\eqref</code>来引用公式。<ul><li>使用的时候，先指明<code>\section</code>或<code>equation</code>环境，再在下一行划定<code>\label</code></li></ul></li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ul><li>需要使用<code>graphicx</code>宏包<ul><li>使用宏包带的<code>\includegraphicx</code>指令，这里，<code>[]</code>与<code>&#123;&#125;</code>不同，方括号表示可选参数，可写可不写，有点像C++中带默认参数的函数</li><li><code>\documentclass</code>命令也允许可选参数，如文字大小，纸张大小等</li><li>图片要在<code>figure</code>环境中插入</li><li>可以在<code>figure</code>环境中指定<code>\caption</code>，有说明文字的图片也可以加上标签来引用(<code>\ref</code>)</li></ul></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul><li>需要使用<code>tabular</code>宏包<ul><li>使用<code>tabular</code>环境，参数指定了每栏的对齐方式：左<strong>l</strong>对齐或右<strong>r</strong>对齐</li><li>在参数部分可以用<code>|</code>指定垂直线，在每栏的末尾用<code>\hline</code>可以画水平线</li><li>用<code>&amp;</code>分隔每栏，用<code>\\</code>另起一行，和数学公式的对齐是不是很类似？</li></ul></li></ul><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol><li>把<code>bibtex</code>格式的引用放到<code>.bib</code>文件中</li><li>每个引文的_key_用来在正文中指向这篇引用</li><li>可以使用<code>natbib</code>包来引用文献，使用<code>\cite</code>也行</li><li>在文末用<code>\bibliography</code>命令生成引用，还可以指定参考文献方式<code>\bibliographystyle</code></li></ol><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><ul><li><code>\tableofcontents</code>生成目录</li><li>可以更改文章的类型为<ul><li><code>\documentclass&#123;scratcl&#125;</code></li><li><code>\documentclass[12pt]&#123;IEEEtran&#125;</code></li></ul></li><li>用<code>\newcommand</code>生成自己的命令</li><li>包<ul><li><code>beamer</code>生成ppt</li><li><code>todonotes</code>待办事项</li><li><code>tikz</code>更好的图片</li></ul></li></ul><h2 id="安装Latex"><a href="#安装Latex" class="headerlink" title="安装Latex"></a>安装Latex</h2><ul><li>在Windows或Linux上的环境：TEXLive</li></ul><h1 id="第三部分：不只是论文"><a href="#第三部分：不只是论文" class="headerlink" title="第三部分：不只是论文"></a>第三部分：不只是论文</h1><h2 id="幻灯片"><a href="#幻灯片" class="headerlink" title="幻灯片"></a>幻灯片</h2><ul><li>用<code>beamer</code>包</li><li>文档类型为<code>beamer</code></li></ul><h3 id="标题页"><a href="#标题页" class="headerlink" title="标题页"></a>标题页</h3><ul><li>设定的信息有所不同<ul><li><code>\title</code></li><li><code>\author</code></li><li><code>\institute</code></li><li><code>\date</code></li></ul></li><li><code>\titlepage</code>来生成标题页</li></ul><h3 id="一页Frame"><a href="#一页Frame" class="headerlink" title="一页Frame"></a>一页Frame</h3><ul><li>一页幻灯片就是一个<code>frame</code>环境<ul><li>用<code>\frametitle</code>给<code>frame</code>一个标题</li><li>添加内容和文档中的方式一样</li></ul></li></ul><h3 id="小节"><a href="#小节" class="headerlink" title="小节"></a>小节</h3><ul><li>就像Powerpoint一样，也可以用<code>\section</code>来新增节</li></ul><h3 id="分栏"><a href="#分栏" class="headerlink" title="分栏"></a>分栏</h3><ul><li>用<code>columns</code>环境包含许多个<code>column</code>环境来分栏，<code>column</code>环境的参数决定了栏的宽度</li><li><code>multicol</code>包可以自动分栏</li></ul><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><ul><li>用<code>\emph</code>或者<code>\alert</code>来强调，前者是斜体，后者是红色</li><li>加粗或者斜体，使用<code>\textbf</code>或者<code>\textit</code></li><li>指定颜色，使用<code>\textcolor&#123;COLOR&#125;&#123;CONTENTS&#125;</code>(美式拼写)</li></ul><h3 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h3><p>图表的方式，和文档的一致</p><h3 id="块"><a href="#块" class="headerlink" title="块"></a>块</h3><ul><li>创建<code>block</code>环境可以让幻灯片的一页上出现有标题的组织块</li></ul><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul><li>使用<code>\usetheme</code>来自定义主题</li><li>在<a href="https://deic.uab.es/~iblanes/beamer_gallery/index_by_theme.html">这个链接上</a>展示了许多可供选择的主题</li></ul><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><ul><li>一个<code>Frame</code>可以产生许多幻灯片</li><li>用<code>\pause</code>命令来只显示一页的一部分</li><li><code>\only</code>, <code>\alt</code>, <code>\uncover</code>也是很有意思的命令</li></ul><h2 id="用tikz作图"><a href="#用tikz作图" class="headerlink" title="用tikz作图"></a>用<code>tikz</code>作图</h2><p>需要在<code>tikzpicture</code>环境中</p><h3 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h3><ul><li>默认的坐标是厘米</li><li>标定起止坐标，可以画出方格辅助线</li></ul><h3 id="线"><a href="#线" class="headerlink" title="线"></a>线</h3><ul><li>用<code>-&gt;</code>等类似的参数，可以画出箭头，并指定虚实</li></ul><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><ul><li>用多个点连接起来可以画出一条路径，命令具体的形式是<code>--</code></li><li><code>cycle</code>用来封闭一个回路</li></ul><h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><ul><li>颜色也是<code>\draw</code>命令的可选参数</li></ul><h3 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h3><ul><li><code>tikz</code>有内置的简单图形，如circle或者rectangle</li></ul><h3 id="结点"><a href="#结点" class="headerlink" title="结点"></a>结点</h3><ul><li>用<code>\node</code>在一点上放置简单文本</li><li>并可以用结点名来代替坐标</li></ul><h3 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h3><p>略</p>]]></content>
      
      
      <categories>
          
          <category> Latex </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>同济大学四平路校区自习地点汇总</title>
      <link href="//2024/07/study-tj-sp/"/>
      <url>//2024/07/study-tj-sp/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在四平的一年，也是唯一一年，去了不少地方寻找自习地点。以后就去嘉定了，不需要和四平的朋友们抢空间，所以把我知道的自习地点都汇总一下。</p><h2 id="主图"><a href="#主图" class="headerlink" title="主图"></a>主图</h2><p><img src="https://static.xialing.icu/img/202407051247626.webp"></p><ul><li>开放时间：7:30-22:30</li><li>说明：<strong>据说暑假图书馆要馆舍改造，所以很可能暑假后，这部分内容就不适用了。</strong></li><li>人数：上午人少。期末季人很多。</li></ul><h3 id="一层教参阅览室"><a href="#一层教参阅览室" class="headerlink" title="一层教参阅览室"></a>一层教参阅览室</h3><ul><li><p>插座：无</p></li><li><p>预约：是</p></li><li><p>描述：光线一般，阅览室内有饮水机，阅览室外有卫生间。我不常去，有时候用来充当中午吃饭时候的存包处。</p></li></ul><h3 id="一层综合图书阅览室"><a href="#一层综合图书阅览室" class="headerlink" title="一层综合图书阅览室"></a>一层综合图书阅览室</h3><ul><li><p>插座：有，充足</p></li><li><p>预约：是</p></li><li><p>描述：光线一般，单人座位比较少。饮水机在阅览室一侧。男女卫生间分立两侧。</p></li></ul><h3 id="二层科技图书阅览室"><a href="#二层科技图书阅览室" class="headerlink" title="二层科技图书阅览室"></a>二层科技图书阅览室</h3><ul><li><p>插座：有，充足</p></li><li><p>预约：是</p></li><li><p>描述：算是主图条件最好的自习地点之一，在平面和夹层都有单人座位。光线很好。图书馆一般上午人不多。如果只需要自习一上午，就不必盯着单人座位抢了。大家一般都很默契地分散着坐，预约连起来的座位，大多数情况下不必担心旁边有人。饮水机在阅览室一侧。男女卫生间分立两侧。</p></li></ul><p><img src="https://static.xialing.icu/img/202407051008966.webp" alt="科技图书阅览室"></p><p><img src="https://static.xialing.icu/img/202407051008017.webp" alt="夹层俯瞰"></p><p><img src="https://static.xialing.icu/img/202407051009154.webp" alt="稍微有点艺术性"></p><h3 id="书库"><a href="#书库" class="headerlink" title="书库"></a>书库</h3><ul><li>插座：有，部分</li><li>预约：否</li><li>描述：书库这三层我都待过。三层有在墙上固定的凳子，有点像火车卧铺车厢过道的座位。二层有时候会刷出来一个木凳子。插座，三层的部分椅子旁边是有的。二层，好像也有。一层因为人员来来往往太吵，所以我待的次数不多，不太清楚。狭小的空间，阴暗的环境，很适合像波奇酱一样的同学自习。说是自习，我在这里主要是实践费曼学习法，给自己讲讲课本。这里可以说话，只要不太大声，不会影响到别人。而且这里除了借书的同学之外，除了和我一样目的的同学之外，也不会有什么人了。</li></ul><p><img src="https://static.xialing.icu/img/202408051918449.webp" alt="书库的座椅与插座"></p><h3 id="高层：6-9层"><a href="#高层：6-9层" class="headerlink" title="高层：6-9层"></a>高层：6-9层</h3><ul><li>插座：有，部分</li><li>预约：否</li><li>描述：这几层的布局大致一致。桌子和凳子是木头的。一个桌子配四五把凳子，但是一般两三个人占一个桌子。只有部分外墙的柱子上有插座，所以靠插座的座位就比较抢手。奇怪，自习了那么多次，居然一张照片都找不到了，等回学校之后补几张。饮水机在中部附近。男女卫生间分立两侧。（注：现在图书馆装修了，也没有机会再拍了，桌椅的样式和人文学院图书馆的类似）</li><li>注：五层是办公空间</li></ul><h3 id="十层：闻学堂"><a href="#十层：闻学堂" class="headerlink" title="十层：闻学堂"></a>十层：闻学堂</h3><ul><li>插座：有，部分</li><li>预约：否</li><li>描述：闻学堂的环境比较古风，椅子带软垫。有的桌子底下有插座。我没怎么去过。似乎要存包？又好像管的不严？不太清楚了。饮水机在中部附近。男女卫生间分立两侧。</li></ul><h3 id="十一层：研习室"><a href="#十一层：研习室" class="headerlink" title="十一层：研习室"></a>十一层：研习室</h3><ul><li>插座：有，充足</li><li>预约：是</li><li>描述：有单人研习室和多人研习室。我也凑不到那么多人，所以一般预约的是单人的。一共就两个单人研习室，很抢手。但有的时候不经意间打开同心云，发现居然有可预约的时间段。还是看运气。饮水得去十层。男女卫生间分立两侧。</li></ul><p><img src="https://static.xialing.icu/img/202407051021917.webp" alt="单人研习室1108"></p><h3 id="“十二层”"><a href="#“十二层”" class="headerlink" title="“十二层”"></a>“十二层”</h3><ul><li>插座：无</li><li>预约：否</li><li>描述：我也是大一下学期才想到这个地方。在电梯间旁边，一般没人来。可以给自己讲讲课程，但是录视频就算了。电梯间的机械声太吵。在梅雨季，这儿还算干燥一些。但要是大太阳，这里就比较热了。也就是在期末季将就一下。</li></ul><p><img src="https://static.xialing.icu/img/202407051032545.webp"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>一楼也有部分空间可以自习。</li><li>一楼和二楼的阅览室有一些不需要预约的座位。</li><li>秋高气爽的日子里，在图书馆大厅和裙房之间的小空间，背背书，还可以仰望高墙上的三角的天空。</li></ul><p><img src="https://static.xialing.icu/img/202407051039482.webp"></p><h2 id="南北楼"><a href="#南北楼" class="headerlink" title="南北楼"></a>南北楼</h2><ul><li><p>开放时间：约7:00-21:30</p><ul><li><p>早上的开放时间不清楚，但吃完早饭，教室一般都开了。</p></li><li><p>不同教室锁门的时间不一样。比如，周二下午一般只有形策，三层四层的好多教室早早就锁上了。但如果是其他日子，教室就会晚一点关，没课大概七点左右吧。周末只开一层或者一些阶梯教室（因为阶梯教室周末有课）。</p></li><li><p>总的来说，二层及以上的教室关闭时间不确定，这里的21:30，指的是一层教室关闭的时间。后边会提到通宵教室。</p></li></ul></li><li><p>人数：南楼人多，北楼人少一些。期末季人数显著增加，但相比之下，北楼的人还是略少。</p></li><li><p>饮水机在二、三、四层的两侧。卫生间在一层的两侧。</p></li></ul><h3 id="南楼"><a href="#南楼" class="headerlink" title="南楼"></a>南楼</h3><ul><li>插座：有，部分</li><li>预约：否</li><li>描述：南楼的条件比北楼好。一层和二层，靠墙的桌子下方有插座；中间的桌子没有插座。三层，两侧墙上有插座。四层是智慧教室，插座的分布比较多样，插座一般比下边的几层少。在没课的时候，四层的人比较少，基本上是一个人或两个人占一个教室，还可以和自己聊聊天，体验比较不错。</li></ul><h3 id="北楼"><a href="#北楼" class="headerlink" title="北楼"></a>北楼</h3><ul><li>插座：有，少</li><li>预约：否</li><li>描述：北楼就比较寒酸了。一层，只有教室后墙有两个，而且插座两孔的部分很松，稍微一碰，插头就从插座里脱落了。二层没去过几次，大概差不多吧。三层和四层也似乎没几个插座。虽然没插座，但是人少啊！如果不需要充电，想要看本书，北楼是不错的选择。</li></ul><h3 id="特殊事件：通宵教室"><a href="#特殊事件：通宵教室" class="headerlink" title="特殊事件：通宵教室"></a>特殊事件：通宵教室</h3><p>在学期末，从16周到19周，会将南北楼的自习时间延长到12点，也就是所谓的通宵教室。虽然通不了宵，但坊间就是这样称呼的。</p><p><img src="https://static.xialing.icu/img/202407051256026.webp"></p><p><img src="https://static.xialing.icu/img/202407051256514.webp"></p><p>因为条件的差异，南楼会比北楼的人多很多。到底是为了插座人挤人，还是为了躲人去北楼，那就仁者见仁智者见智了。</p><p>**此时，过了九点半，这两个教室只会开面向图书馆一侧的中央大门。**这句话有两个意思：背离图书馆一侧的三个门不会开；面向图书馆一侧的两个侧门不会开。</p><p>下图的对比可能不是很好。南楼摄于晚上八点半，北楼摄于十一点。都是期末季。</p><p><img src="https://static.xialing.icu/img/202407051050373.webp" alt="南楼的自习教室人很多"></p><p><img src="https://static.xialing.icu/img/202407051051298.webp" alt="快关门之前的北楼"></p><h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><ul><li>南楼四层的中庭会有一些座位。北楼我记得也有啊，但之前考察的时候，发现那里的桌椅不知道哪里去了。</li></ul><h2 id="汇文楼（外国语学院）"><a href="#汇文楼（外国语学院）" class="headerlink" title="汇文楼（外国语学院）"></a>汇文楼（外国语学院）</h2><p><img src="https://static.xialing.icu/img/202407051248557.webp"></p><ul><li>开放时间：约7:00-约21:00<ul><li>这个开放时间，我一直没摸清楚。晚上有时候八点半门卫就赶人，有时候能待的久一些。</li></ul></li><li>正门进去，楼梯下方有一个饮水机。在东侧的三层、四层（大概是这两层）也各有一个饮水机。卫生间在靠东侧。西侧老师的办公室尽头也有卫生间。</li></ul><h3 id="一层AI中心"><a href="#一层AI中心" class="headerlink" title="一层AI中心"></a>一层AI中心</h3><ul><li>插座：有，充足</li><li>预约：否</li><li>描述：说是AI中心，其实就是外院的图书馆。应该是新装修好的，条件非常好。有单人的座位，虽然旁边也有桌子，但是两人之间有隔板。还有类似于吧台的座位。还有沙发等等。有的屋子还有隔音房——一个带门的方盒子，可以容纳一个人自习。但我试了试，开了通风都很闷，而且桌子很小，都放不下电脑，可能适合别的用途。</li><li>人数：但现在知道这个地方的人太多了。上午还好，到了下午，基本没什么特别好的座位了。期末季更甚。</li></ul><h3 id="高层空教室"><a href="#高层空教室" class="headerlink" title="高层空教室"></a>高层空教室</h3><ul><li>插座：有</li><li>预约：否</li><li>人数：少</li><li>描述：插座要看情况。四楼德语系的教室插座就很多，三层日语系的教室基本没插座。不过现在汇文楼装修了，这都是老黄历了。装修之前，大部分教室都是废置的，我只见过几间教室有课程安排。但是呢，屋子有股霉味，通通风会好一些。装修之后，插座会很多，就是不知道能不能随便进出了。</li></ul><p><img src="https://static.xialing.icu/img/202407051103098.webp" alt="装修前"></p><p><img src="https://static.xialing.icu/img/202407051104539.webp" alt="装修中，和上图是一个教室"></p><p><img src="https://static.xialing.icu/img/202407051104441.webp" alt="装修后的另一间屋子，和上面两个图不是一个屋子"></p><h3 id="其他-2"><a href="#其他-2" class="headerlink" title="其他"></a>其他</h3><ul><li>除此之外，五层靠东侧还有一个小地方可以坐着，没有插座，但是没多少人。</li><li>从正门进去，每层的中央会有沙发，当然也没插座。</li></ul><h2 id="云通楼（人文学院）"><a href="#云通楼（人文学院）" class="headerlink" title="云通楼（人文学院）"></a>云通楼（人文学院）</h2><h3 id="一层大厅"><a href="#一层大厅" class="headerlink" title="一层大厅"></a>一层大厅</h3><ul><li>开放时间：约7:00-22:00</li><li>人数：较少</li><li>插座：有，充足</li><li>预约：否</li><li>饮水机在三层靠东的卫生间旁。一层有卫生间。</li><li>描述：虽然叫一层大厅，但进了云通楼的大门， 需要走向下的楼梯。自习空间很多，有和主图二楼一样的座位，也有不少是单人座位。就是小虫子比较多，原生态。因为在地下，在这里学习，察觉不到不到时间的流逝。</li></ul><p><img src="https://static.xialing.icu/img/202407051121907.webp" alt="一种单人座位和四人座位"></p><p><img src="https://static.xialing.icu/img/202407051127050.webp" alt="另一种单人自习座位"></p><p><img src="https://static.xialing.icu/img/202407051128140.webp" alt="和嘉定图书馆的单人座位是同一样式"></p><h3 id="人文学院图书分馆"><a href="#人文学院图书分馆" class="headerlink" title="人文学院图书分馆"></a>人文学院图书分馆</h3><ul><li>开放时间：约7:00-20:30</li><li>人数：少</li><li>插座：有，充足</li><li>预约：否</li><li>描述：需要刷校园卡进入。里面是木质桌子，和图书馆高层一样。每个桌子上有插排。除了外间，还有里间，即外文书籍阅览室。里边有三个小桌子，两个靠墙的有插座。一般没人来，可以小声说话，关上门后不会影响到外面自习的同学。</li></ul><p><img src="https://static.xialing.icu/img/202408051916083.webp" alt="人文学院图书分馆"></p><h3 id="其他-3"><a href="#其他-3" class="headerlink" title="其他"></a>其他</h3><ul><li>三楼有一些座位可以自习，无插座。</li><li>二层（一进门），玻璃门后面的空间也可以自习，无插座。</li></ul><h2 id="明净楼（环境科学与工程学院）"><a href="#明净楼（环境科学与工程学院）" class="headerlink" title="明净楼（环境科学与工程学院）"></a>明净楼（环境科学与工程学院）</h2><ul><li>开放时间：略</li><li>卫生间：每层的西侧</li><li>饮水机：一层，在奖状墙的背后</li></ul><h3 id="环境学院图书分馆"><a href="#环境学院图书分馆" class="headerlink" title="环境学院图书分馆"></a>环境学院图书分馆</h3><ul><li>开放时间：8:00-22:00</li><li>插座：有，充足</li><li>人数：中</li><li>预约：否<ul><li>说是要刷卡选座，但我看没几个人这样做</li></ul></li><li>描述：人时而多，时而少。不过总能找到比较舒服的位置。到了学期末，我经常坐在咖啡机边上，守着一个插座。效果也不错。每个桌子下方或上方都有插座。</li></ul><p><img src="https://static.xialing.icu/img/202408051914138.webp" alt="开放时间"></p><p><img src="https://static.xialing.icu/img/202407101556759.webp" alt="环境学院与MagicBall"></p><h3 id="其他-4"><a href="#其他-4" class="headerlink" title="其他"></a>其他</h3><ul><li>每层都有一些桌椅，无插座。就是只能白天待着，晚上没有光照，很暗。</li></ul><h2 id="明成楼（建筑与城市规划学院B楼）"><a href="#明成楼（建筑与城市规划学院B楼）" class="headerlink" title="明成楼（建筑与城市规划学院B楼）"></a>明成楼（建筑与城市规划学院B楼）</h2><ul><li>开放时间：略</li><li>人数：中</li><li>插座：有，较少</li><li>预约：否</li></ul><h3 id="图书分馆"><a href="#图书分馆" class="headerlink" title="图书分馆"></a>图书分馆</h3><ul><li>描述：进去得存包，登记，拿号牌。我猜测闻学堂如果严格落实管理，大概和这差不多吧。我嫌麻烦，没怎么去过。我记得之前不用啊，我没登记也进去过几回，看来是之前运气好。有的桌子有插座。在靠里有个高一点的台子，那里的桌子都没插座，但是人很少，可以看看书，或者自习到设备没电。</li></ul><p><img src="https://static.xialing.icu/img/202407051150198.webp" alt="建规图书馆一隅"></p><h3 id="其他-5"><a href="#其他-5" class="headerlink" title="其他"></a>其他</h3><ul><li>二楼的类似于制图间的地方也可以自习，有插座，光线比较暗。</li><li>楼梯下方有个空间也可以自习，没插座，但可以交谈，夏天要小心蚊子。</li></ul><p><img src="https://static.xialing.icu/img/202407051154069.webp"></p><h2 id="马克思主义学院"><a href="#马克思主义学院" class="headerlink" title="马克思主义学院"></a>马克思主义学院</h2><ul><li>开放时间：略</li><li>饮水机：二楼水房</li></ul><h3 id="马克思主义学院图书分馆"><a href="#马克思主义学院图书分馆" class="headerlink" title="马克思主义学院图书分馆"></a>马克思主义学院图书分馆</h3><ul><li><p>人数：多</p></li><li><p>预约：否</p></li><li><p>描述：光线很暗，似乎没几个插座。很古朴的桌子，有点像党早期的会议室。人数中等偏多。需要刷卡进入。好处是，在图书馆外侧有好多报纸可以看，比如China Daily等等，每天都会更新。没去过几次，整个学院最亮堂的，当属图书馆外墙的这句话：</p></li></ul><p><img src="https://static.xialing.icu/img/202407051214652.webp"></p><h2 id="土木工程学院"><a href="#土木工程学院" class="headerlink" title="土木工程学院"></a>土木工程学院</h2><ul><li>开放时间：?-23:00</li><li>卫生间与饮水机：未曾留意过</li></ul><h3 id="一层与二层的图书角"><a href="#一层与二层的图书角" class="headerlink" title="一层与二层的图书角"></a>一层与二层的图书角</h3><ul><li>预约：否</li><li>人数：中</li><li>插座：无</li><li>描述：一进门就能看到这片自习区域。这里没有插座，环境也谈不上多好，但它关的晚啊！我把它当做写日记的地方。反正怎样，就是不愿意回寝室。写日记到11点，一天的学习也就差不多了。土木楼是在通宵教室开放前，开得比较晚的一处地方了。配合上22:00云通楼关门，走到土木楼继续完成收尾工作是个不错的搭配。而且，就是因为待得时间不长，所以对卫生间和饮水机的分布不了解。</li></ul><h2 id="德文图书馆"><a href="#德文图书馆" class="headerlink" title="德文图书馆"></a>德文图书馆</h2><ul><li>开放时间：7:30-22:30</li><li>描述：不太了解德图的构造。似乎插座不多。一层的大厅有不少凳子，可以小声讨论，没插座。有两个阅览室，不知道有无插座，人不少。可能是因为离西南七太近。</li></ul><h2 id="西南九地下一站式生活空间"><a href="#西南九地下一站式生活空间" class="headerlink" title="西南九地下一站式生活空间"></a>西南九地下一站式生活空间</h2><ul><li>开放时间：略，印象中开放时间比图书馆短</li><li>描述：去过一两次，灯光比较暗，插座少，不是很喜欢这种风格。</li></ul><h2 id="西南七"><a href="#西南七" class="headerlink" title="西南七"></a>西南七</h2><p><img src="https://static.xialing.icu/img/202407051250859.webp"></p><ul><li>开放时间：24h</li><li>因为我住在西南七，所以讲讲西南七的自习地点。不过西南七在我搬走后就要装修了啊，希望能多点自习空间。23级济勤学堂的学生绝大部分住在西南七，所以周边的德图啊、人文学院啊、土木楼啊，在下学期，总能遇到不少人写高程。自习空间很少，和别的宿舍楼没法比，这就是济勤。听老学长说，搬到嘉定（或者其他校区）的学生大一的宿舍都很差。</li></ul><h3 id="党建室"><a href="#党建室" class="headerlink" title="党建室"></a>党建室</h3><ul><li>人数：多</li><li>描述：党建室，你不能在地点层面上描述这个地方。它是一个小圈子，在这里面自习的人都相互熟悉，都是常客，而且感觉不是很欢迎外人。所以我除非是因为忍不了室友，万不得已才会来一两次。</li></ul><h3 id="乒乓房"><a href="#乒乓房" class="headerlink" title="乒乓房"></a>乒乓房</h3><ul><li>人数：少，但得碰运气</li><li>插座：有，充足，感谢贡献插排的哥们</li><li>描述：乒乓房，听起来有点突兀。但我在23:00后自习的地方多半在这里。有时候这里已经有人打球或自习，那就没办法，只能早早睡觉。大多数情况下，过了23点，乒乓房的灯是黑的，那我就能进去自习咯。有点潮湿，蚊子很多，一小时拍死过四五个。之前碰见过一只强哥，送它到了天国。但宿舍嘛，也就这个样子。党建室和乒乓房的大小差不多，似乎比乒乓房还小，高峰时期能装大概七八个人，所以我更不愿意挤在党建室了。</li></ul><p><img src="https://static.xialing.icu/img/202407051230894.webp"></p><h3 id="宿舍"><a href="#宿舍" class="headerlink" title="宿舍"></a>宿舍</h3><p>别提了。**四个人的桌子是连成一排的！**加上室友打游戏、音箱外放音乐，宿舍是我最不愿意待的地方。图我就不放了。</p><h2 id="赤峰路全家"><a href="#赤峰路全家" class="headerlink" title="赤峰路全家"></a>赤峰路全家</h2><ul><li>开放时间：24h</li><li>人数：中，看运气</li><li>插座：有</li><li>描述：主要是晚上，图书馆关门之后，在那里写高程。也就去过一两次，刚开学的时候高程作业确实太多了。环境吧，也就那样，靠窗的吧桌有插座。空气里一股饭味，能通宵啊，要求这么高干啥。我一般买点饮料，当是使用费，自习起来心里没那么大负担。没通过宵，顶多待到快一点就回宿舍了。</li></ul><h2 id="其他-6"><a href="#其他-6" class="headerlink" title="其他"></a>其他</h2><ul><li>数院、海洋学院、测绘学院没有适合自习的地方<ul><li>数院有图书馆，但是只能复印图书馆的教材，没法自习</li><li>海洋学院的空间利用率很高（褒义），有一些无插座的座位，但是和其他学院的座位相比，没有明显优势</li><li>测绘学院有一些机房，但是好像不开放</li></ul></li><li>物理学院、化学学院、医学院没去过，不清楚</li><li>校外经管学院和设创学院没去过</li><li>春秋季节，在河边的一些座位上看看书也不错</li><li>瑞安楼一层有一些吧桌，没换桌子之前污渍较多，有人交谈，而且插座几乎没有，所以没去过</li><li>衷和楼似乎有地方能通宵，但我没考虑过，也没找到比较好的自习地点，空中花园没插座</li><li>中法中心，不太行。B101教室都没插座，别的地方更别指望了</li><li>西南八的党建室，挺不错，就是人很多。但如果不是本寝室楼的，都找不到地方上卫生间，人家独立卫浴</li></ul>]]></content>
      
      
      <categories>
          
          <category> 同济 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Missing Semester 学习笔记(1)</title>
      <link href="//2024/02/missing-1/"/>
      <url>//2024/02/missing-1/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p><a href="https://missing.csail.mit.edu/">Missing Semester</a>的第一课，大致介绍了 Shell 的用法。注意，课堂使用的是 Bash Shell，全称为 “Bourne Again SHell”。所以 Windows 自带的 PowerShell 或者命令行窗口不能100%完成命令。</p><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="使用-Shell"><a href="#使用-Shell" class="headerlink" title="使用 Shell"></a>使用 Shell</h2><p>Notes 讲解了几个 Shell 的基本用法：</p><ul><li><code>date</code>  命令可以输出当前日期；</li><li><code>echo</code> 重复我们说过的话，默认输出到屏幕上；<ul><li>如果参数有空格，则需要用引号（单引号或双引号）括起来；</li><li>或者可以使用转义字符 <code>\</code></li></ul></li><li>程序通过环境变量知晓 <code>date</code> 与 <code>echo</code> 程序的位置，Shell 就是一个编程环境，所以叫环境变量。<ul><li>通过 <code>echo $PATH</code> 可以输出环境变量的内容。<code>$</code> 形象地表示 PATH 的值；</li><li>可以通过 <code>which</code> 命令获得某一程序的位置，如 <code>which echo</code>；</li></ul></li></ul><h2 id="在-Shell-中航行"><a href="#在-Shell-中航行" class="headerlink" title="在 Shell 中航行"></a>在 Shell 中航行</h2><ul><li><p><code>pwd</code>，打印当前工作的文件夹(present working directory)；</p></li><li><p><code>ls</code> ，列出当前文件夹内所有的内容，默认是当前文件夹；</p><ul><li><p>用 <code>-l</code> flag 可以打印出更详细的信息，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 1 missing  <span class="built_in">users</span>  4096 Jun 15  2019 missing</span><br></pre></td></tr></table></figure></li><li><p>第一个字母 <code>d</code> 表示当前环境是个文件夹；其后三个由三个字母组成的组合 <code>rwx, r-x, r-x</code> 分别表示所有者，所有组，以及所有用户的权限；</p></li><li><p>对文件而言，显然 <code>r</code> 表示读取，<code>w</code> 表示写入，<code>x</code> 表示执行；</p></li><li><p>对文件夹而言，<code>r</code> 表示获取文件夹所含内容，<code>w</code> 表示修改文件夹，<code>x</code> 表示进入文件夹。</p></li></ul></li><li><p><code>cd</code> ，改变当前打开的文件夹，changing directory；</p><ul><li><code>.</code> 表示当前文件夹，可以通过相对路径打开文件夹；</li><li><code>..</code> 表示父文件夹。</li></ul></li><li><p><code>mv</code> 表示重命名或移动一个文件，<code>cp</code> 是复制，<code>mkdir</code> 来新建一个文件夹；</p></li><li><p>用 <code> man</code> 更详细地了解一个指令的参数等信息。<strong>man</strong> 表示 <strong>manual</strong> 。</p></li></ul><h2 id="连接程序"><a href="#连接程序" class="headerlink" title="连接程序"></a>连接程序</h2><p>程序默认的输入输出环境都是终端，可以通过一些符号达到修改流向的目的。</p><h3 id="与"><a href="#与" class="headerlink" title="&gt; 与 &lt;"></a>&gt; 与 &lt;</h3><ul><li><code>&lt;</code> 表示修改输入；</li><li><code>&gt;</code>表示修改输出。</li></ul><h4 id="一个例子："><a href="#一个例子：" class="headerlink" title="一个例子："></a>一个例子：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> hello &gt; hello.txt</span><br><span class="line"><span class="built_in">cat</span> hello.txt</span><br><span class="line">hello</span><br><span class="line"><span class="built_in">cat</span> &lt; hello.txt &gt; hello2.txt</span><br><span class="line"><span class="built_in">cat</span> hello2.txt</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><ul><li><p>这里，第一行通过 <code>&gt;</code> 将 hello 写入到 <code>hello.txt</code> 中;</p></li><li><p><code>cat</code> 可以<code>cat</code>enate 文件，输出文件的内容。这里，用 <code>&gt;</code> 把输出路径改成了 <code>hello2.txt</code> ，输入路径用 <code>&lt;</code> 改为 <code>hello.txt</code>。</p></li><li><p>还可以用 <code>&gt;&gt;</code> 在末尾附加内容。</p></li></ul><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>用 <code>|</code> 运算符可以将多个程序连接到一起。这样，一个程序的输入就成了另一个程序的输出。</p><h2 id="超级用户"><a href="#超级用户" class="headerlink" title="超级用户"></a>超级用户</h2><p><code>sudo</code> 表示 <strong>Super User</strong>，拥有一切权限，可以修改一些系统设置。</p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>以下练习是在 Ubuntu 虚拟机下完成的。</p><ol><li>For this course, you need to be using a Unix shell like Bash or ZSH. If you are on Linux or macOS, you don’t have to do anything special. If you are on Windows, you need to make sure you are not running cmd.exe or PowerShell; you can use Windows Subsystem for Linux or a Linux virtual machine to use Unix-style command-line tools. To make sure you’re running an appropriate shell, you can try the command echo $SHELL. If it says something like &#x2F;bin&#x2F;bash or &#x2F;usr&#x2F;bin&#x2F;zsh, that means you’re running the right program.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:~$ <span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><ol start="2"><li>Create a new directory called <code>missing</code> under <code>/tmp</code>.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:~$ <span class="built_in">cd</span> /tmp</span><br><span class="line">xialing@xialing-virtual-machine:/tmp$ <span class="built_in">mkdir</span> missing</span><br><span class="line">xialing@xialing-virtual-machine:/tmp$ <span class="built_in">ls</span></span><br><span class="line">missing</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><ol start="3"><li>Look up the <code>touch</code> program. The <code>man</code> program is your friend.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:~$ man <span class="built_in">touch</span></span><br><span class="line">NAME</span><br><span class="line">       <span class="built_in">touch</span> - change file timestamps</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       <span class="built_in">touch</span> [OPTION]... FILE...</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><ol start="4"><li>Use <code>touch</code> to create a new file called <code>semester</code> in <code>missing</code>.</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ touch semester</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ ls</span><br><span class="line">semester</span><br></pre></td></tr></table></figure><ol start="5"><li>Write the following into that file, one line at a time:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">curl --<span class="built_in">head</span> --silent https://missing.csail.mit.edu</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ <span class="built_in">touch</span> semester</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ <span class="built_in">echo</span> <span class="string">&#x27;#!/bin/sh&#x27;</span> &gt; semester</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ <span class="built_in">echo</span> curl --<span class="built_in">head</span> --silent https://missing.csail.mit.edu &gt;&gt; semester</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ <span class="built_in">cat</span> semester</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">curl --<span class="built_in">head</span> --silent https://missing.csail.mit.edu</span><br></pre></td></tr></table></figure><p>**Note: **The first line might be tricky to get working. It’s helpful to know that <code>#</code> starts a comment in Bash, and <code>!</code> has a special meaning even within double-quoted (<code>&quot;</code>) strings. Bash treats single-quoted strings (<code>&#39;</code>) differently: they will do the trick in this case. See the Bash <a href="https://www.gnu.org/software/bash/manual/html_node/Quoting.html">quoting</a> manual page for more information.</p><ul><li>即，如果用双引号，感叹号有特殊含义，会报错：<code>bash: !/bin/sh: event not found</code>；</li><li>如果不用引号，<code>#</code> 会将后边的语句注释掉，文档内容为空；</li><li>所以，应该使用字面输入的单引号。</li></ul><ol start="6"><li>Try to execute the file, i.e. type the path to the script (<code>./semester</code>) into your shell and press enter. Understand why it doesn’t work by consulting the output of <code>ls</code> (hint: look at the permission bits of the file).</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ ./semester</span><br><span class="line">bash: ./semester: Permission denied</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ <span class="built_in">ls</span> -l</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r-- 1 xialing xialing 0 Feb 28 22:32 semester</span><br></pre></td></tr></table></figure><p>对于文件，没有执行权限 <code>x</code> ，因此无法执行文件。</p><ol start="7"><li>Run the command by explicitly starting the <code>sh</code> interpreter, and giving it the file <code>semester</code> as the first argument, i.e. <code>sh semester</code>. Why does this work, while <code>./semester</code> didn’t?</li></ol><p><a href="https://zacheller.dev/missing-semester0">有的网站</a>指出了差别。 <code>sh semester</code> 可以忽略执行位。</p><ol start="8"><li>Look up the <code>chmod</code> program (e.g. use <code>man chmod</code>).</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ man <span class="built_in">chmod</span></span><br><span class="line">NAME</span><br><span class="line">       <span class="built_in">chmod</span> - change file mode bits</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><ol start="9"><li>Use <code>chmod</code> to make it possible to run the command <code>./semester</code> rather than having to type <code>sh semester</code>. How does your shell know that the file is supposed to be interpreted using <code>sh</code>? See this page on the <a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">shebang</a> line for more information.</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ chmod u+x semester</span><br><span class="line">xialing@xialing-virtual-machine:/tmp/missing$ ls -l</span><br><span class="line">total 0</span><br><span class="line">-rwxrw-r-- 1 xialing xialing 0 Feb 28 22:32 semester</span><br></pre></td></tr></table></figure><ol start="10"><li>Use <code>|</code> and <code>&gt;</code> to write the “last modified” date output by <code>semester</code> into a file called <code>last-modified.txt</code> in your home directory.</li></ol>]]></content>
      
      
      <categories>
          
          <category> Missing Semester </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C Primer Plus 第四章编程练习笔记</title>
      <link href="//2024/02/cpp-c4-pe/"/>
      <url>//2024/02/cpp-c4-pe/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>今天完成了第四章的习题，把自己的解题代码分享在这里。就不像上次那么啰嗦了，这回只展示源代码，需要注意的地方，在注释里已经注明。</p><h2 id="C4Q1"><a href="#C4Q1" class="headerlink" title="C4Q1"></a>C4Q1</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that asks for your first name, your last name, and then prints the names<br>in the format <em>last, first</em> .</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q1.c 姓名的输入输出</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> first[<span class="number">40</span>];</span><br><span class="line"><span class="type">char</span> last[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input your first name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, first); <span class="comment">// no need to add &#x27;&amp;&#x27; prefix</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input your last name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, last); <span class="comment">// no need to add &#x27;&amp;&#x27; prefix</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s, %s&quot;</span>, last, first);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    -------</span></span><br><span class="line"><span class="comment">    Please input your first name: Ling</span></span><br><span class="line"><span class="comment">    Please input your last name: Xia</span></span><br><span class="line"><span class="comment">    Xia, Ling</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q2"><a href="#C4Q2" class="headerlink" title="C4Q2"></a>C4Q2</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that requests your first name and does the following with it:<br>&nbsp;&nbsp;&nbsp;&nbsp;a. Prints it enclosed in double quotation marks<br>&nbsp;&nbsp;&nbsp;&nbsp;b. Prints it in a field 20 characters wide, with the whole field in quotes and the name at the right end of the field<br>&nbsp;&nbsp;&nbsp;&nbsp;c. Prints it at the left end of a field 20 characters wide, with the whole field enclosed in quotes<br>&nbsp;&nbsp;&nbsp;&nbsp;d. Prints it in a field three characters wider than the name</p></blockquote><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q2.c 名字的多种输出格式</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> first[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input your first name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, first);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\&quot;%s\&quot;\n&quot;</span>, first); <span class="comment">// in double quotation marks</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\&quot;%20s\&quot;\n&quot;</span>, first);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\&quot;%-20s\&quot;\n&quot;</span>, first);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%*s\n&quot;</span>, <span class="built_in">strlen</span>(first)+<span class="number">3</span>, first); <span class="comment">// 3 characters wider than the name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    -------</span></span><br><span class="line"><span class="comment">    Please input your first name: Ling</span></span><br><span class="line"><span class="comment">    &quot;Ling&quot;</span></span><br><span class="line"><span class="comment">    &quot;                Ling&quot;</span></span><br><span class="line"><span class="comment">    &quot;Ling                &quot;</span></span><br><span class="line"><span class="comment">        Ling</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q3"><a href="#C4Q3" class="headerlink" title="C4Q3"></a>C4Q3</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that reads in a floating-point number and prints it first in decimal-point notation and then in exponential notation. Have the output use the following formats (the number of digits shown in the exponent may be different for your system):<br>a. The input is <code>21.3</code> or <code>2.1e+001</code> .<br>b. The input is <code>+21.290</code> or <code>2.129E+001</code> .</p></blockquote><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q3.c 浮点数的输出</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> num;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input a floating-point number: &quot;</span>); <span class="comment">//21.290</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;num); <span class="comment">// remember &#x27;&amp;&#x27; mark!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The input is %.1f or %.1le.\n&quot;</span>, num, num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The input is %+.3f or %.3E.\n&quot;</span>, num, num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    --------</span></span><br><span class="line"><span class="comment">    Input a floating-point number: 21.290</span></span><br><span class="line"><span class="comment">    The input is 21.3 or 2.1e+01.</span></span><br><span class="line"><span class="comment">    The input is +21.290 or 2.129E+01.</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q4"><a href="#C4Q4" class="headerlink" title="C4Q4"></a>C4Q4</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that requests your height in inches and your name, and then displays the information in the following form:<br><code>Dabney, you are 6.208 feet tall</code><br>Use type <code>float</code> , and use &#x2F; for division. If you prefer, request the height in centimeters and display it in meters.</p></blockquote><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q4.c 输出名字和身高</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> name[<span class="number">40</span>];</span><br><span class="line"><span class="type">double</span> height;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your height in inches: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;height); <span class="comment">// remember &#x27;&amp;&#x27; mark!</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s, you are %.3f feet tall\n&quot;</span>, name, height);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    --------</span></span><br><span class="line"><span class="comment">    Please enter your name: Dabney</span></span><br><span class="line"><span class="comment">    Please enter your height in inches: 6.208</span></span><br><span class="line"><span class="comment">    Dabney, you are 6.208 feet tall</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q5"><a href="#C4Q5" class="headerlink" title="C4Q5"></a>C4Q5</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that requests the download speed in megabits per second (Mbs) and the size of a file in megabytes (MB). The program should calculate the download time for the file. Note that in this context one byte is eight bits. Use type <code>float</code> , and use &#x2F; for division. The program should report all three values (download speed, file size, and download time) showing two digits to the right of the decimal point, as in the following:<br><code>At 18.12 megabits per second, a file of 2.20 megabytes</code><br><code>downloads in 0.97 seconds.</code></p></blockquote><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q5.c 下载</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> speed, size, time;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please give me current download speed(Mbs) and the size of a file(MB) in order: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;speed, &amp;size); <span class="comment">// &#x27;&amp;&#x27; mark!</span></span><br><span class="line"></span><br><span class="line">time = (size * <span class="number">8</span>) / speed;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;At %.2f megabits per second, a file of %.2f megabytes\ndownloads in %.2f seconds.&quot;</span>, speed, size, time);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    ---------</span></span><br><span class="line"><span class="comment">    Please give me current download speed(Mbs) and the size of a file(MB) in order: 18.12 2.20</span></span><br><span class="line"><span class="comment">    At 18.12 megabits per second, a file of 2.20 megabytes</span></span><br><span class="line"><span class="comment">    downloads in 0.97 seconds.</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q6"><a href="#C4Q6" class="headerlink" title="C4Q6"></a>C4Q6</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that requests the user’s first name and then the user’s last name. Have it print the entered names on one line and the number of letters in each name on the following line. Align each letter count with the end of the corresponding name, as in the following:</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Melissa Honeybee</span><br><span class="line">      <span class="number">7</span>        <span class="number">8</span></span><br></pre></td></tr></table></figure><blockquote><p>Next, have it print the same information, but with the counts aligned with the beginning of each name.</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Melissa Honeybee</span><br><span class="line"><span class="number">7</span>       <span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q6.c 姓名与字符数的输出</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> first[<span class="number">40</span>], last[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your first name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, first);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your last name: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, last);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, first, last);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%*d %*d\n&quot;</span>, <span class="built_in">strlen</span>(first), <span class="built_in">strlen</span>(first), <span class="built_in">strlen</span>(last), <span class="built_in">strlen</span>(last));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, first, last);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-*d %-*d\n&quot;</span>, <span class="built_in">strlen</span>(first), <span class="built_in">strlen</span>(first), <span class="built_in">strlen</span>(last), <span class="built_in">strlen</span>(last));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    --------</span></span><br><span class="line"><span class="comment">    Please enter your first name: Melissa</span></span><br><span class="line"><span class="comment">    Please enter your last name: Honeybee</span></span><br><span class="line"><span class="comment">    Melissa Honeybee</span></span><br><span class="line"><span class="comment">        7        8</span></span><br><span class="line"><span class="comment">    Melissa Honeybee</span></span><br><span class="line"><span class="comment">    7       8</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q7"><a href="#C4Q7" class="headerlink" title="C4Q7"></a>C4Q7</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that sets a type <code>double</code> variable to 1.0&#x2F;3.0 and a type <code>float</code> variable to 1.0&#x2F;3.0. Display each result three times—once showing four digits to the right of the decimal, once showing 12 digits to the right of the decimal, and once showing 16 digits to the right of the decimal. Also have the program include <code>float.h</code> and display the values of <code>FLT_DIG</code> and <code>DBL_DIG</code> . Are the displayed values of 1.0&#x2F;3.0 consistent with these values?</p></blockquote><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q7.c float 和 double 类型对数值的存储精度</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;float.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//float f_num = 1.0 / 3.0; // error</span></span><br><span class="line"><span class="comment">//double d_num 1.0 / 3.0; // error</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f_num;</span><br><span class="line"><span class="type">double</span> d_num;</span><br><span class="line"></span><br><span class="line">f_num = <span class="number">1.0</span> / <span class="number">3.0</span>;</span><br><span class="line">d_num = <span class="number">1.0</span> / <span class="number">3.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%25.4f %25.4f\n&quot;</span>, f_num, d_num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%25.12f %25.12f\n&quot;</span>, f_num, d_num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%25.16f %25.16f\n&quot;</span>, f_num, d_num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Further:\n%25.20f %25.20f\n&quot;</span>, f_num, d_num);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;FLT_DIG:%d\nDBL_DIG:%d\n&quot;</span>, FLT_DIG, DBL_DIG); <span class="comment">// FLT_DIG: Minimum number of significant decimal digits for a float</span></span><br><span class="line">                                                      <span class="comment">// 一个浮点数的最小有效数字位数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">output:</span></span><br><span class="line"><span class="comment">----------</span></span><br><span class="line"><span class="comment">                   0.3333                    0.3333</span></span><br><span class="line"><span class="comment">           0.333333343267            0.333333333333</span></span><br><span class="line"><span class="comment">       0.3333333432674408        0.3333333333333333</span></span><br><span class="line"><span class="comment">Further:</span></span><br><span class="line"><span class="comment">   0.33333334326744079590    0.33333333333333331483</span></span><br><span class="line"><span class="comment">FLT_DIG:6</span></span><br><span class="line"><span class="comment">DBL_DIG:15</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="C4Q8"><a href="#C4Q8" class="headerlink" title="C4Q8"></a>C4Q8</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><blockquote><p>Write a program that asks the user to enter the number of miles traveled and the number of gallons of gasoline consumed. It should then calculate and display the miles-per-gallon value, showing one place to the right of the decimal. Next, using the fact that one gallon is about 3.785 liters and one mile is about 1.609 kilometers, it should convert the miles-per-gallon value to a liters-per-100-km value, the usual European way of expressing fuel consumption, and display the result, showing one place to the right of the decimal. Note that the U. S. scheme measures the distance traveled per amount of fuel (higher is better), whereas the European scheme measures the amount of fuel per distance (lower is better). <br>Use symbolic constants (using <code>const</code> or <code>#define</code> ) for the two conversion factors.</p></blockquote><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C4Q8.c 燃油效率</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> GALLONTOLITER 3.785 <span class="comment">// no &#x27;;&#x27;</span></span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> MILETO100KM 1.609 / 100 <span class="comment">// no &#x27;;&#x27; &amp; &#x27;/&#x27; not &#x27;*&#x27;!</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> m_distance, g_fuel, km_distance, l_fuel;</span><br><span class="line"><span class="type">double</span> mpg, lp100km; <span class="comment">// miles-per-gallon, liters-per-100km</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter miles travelled and gallons of gasoline consumed: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;m_distance, &amp;g_fuel);</span><br><span class="line"></span><br><span class="line">km_distance = m_distance * MILETO100KM; <span class="comment">// distance in kilometers</span></span><br><span class="line">l_fuel = g_fuel * GALLONTOLITER; <span class="comment">// fuel in liters</span></span><br><span class="line"></span><br><span class="line">mpg = m_distance / g_fuel;</span><br><span class="line">lp100km = l_fuel / km_distance;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Miles-per-gallon: %.1f\n&quot;</span>, mpg);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Liters-per-100km: %.1f\n&quot;</span>, lp100km);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    output:</span></span><br><span class="line"><span class="comment">    -----------</span></span><br><span class="line"><span class="comment">    Please enter miles travelled and gallons of gasoline consumed: 10 10</span></span><br><span class="line"><span class="comment">    Miles-per-gallon: 1.0</span></span><br><span class="line"><span class="comment">    Liters-per-100km: 235.2</span></span><br><span class="line"><span class="comment">    -----------</span></span><br><span class="line"><span class="comment">    Please enter miles travelled and gallons of gasoline consumed: 10 5</span></span><br><span class="line"><span class="comment">    Miles-per-gallon: 2.0</span></span><br><span class="line"><span class="comment">    Liters-per-100km: 117.6</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h2><p>本节题目不难，关键是掌握 <code>printf()</code> 和 <code>scanf()</code> 的修饰符，以合乎期望地显示输出内容。</p><p>其中，第六题用到了 <code>%*d</code> 修饰符，可以动态地调整 field 的宽度，很有应用价值；<br>第七题对 <code>float</code> 和 <code>double</code> 类型的变量进行了不同小数位数的输出，结合 <code>floats.h</code> 头文件，可以对浮点型数据的存储有更深的理解；<br>第八题使用了 <code>#define</code> 定义 <em>symbolic constant</em> ，同时要求对数据进行有效处理，具有应用价值。</p><p>对于这些题目，有共同点需要注意：</p><ul><li>对于以数组类型存储的字符串，在 <code>scanf()</code> 中不需要在变量名前加 ‘&amp;’；</li><li>对于其他类型的变量，则需要加 ‘&amp;’。</li></ul>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git学习-2</title>
      <link href="//2024/02/learning-git-2/"/>
      <url>//2024/02/learning-git-2/</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>书接上回，上次我们说了 Git 在本地的一些命令，本次我们看看 Git 和 Github 是如何联结在一起的。<a href="https://docs.github.com/en/get-started/getting-started-with-git">学习链接</a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>请参见<a href="https://xialing233.github.io/2024/02/14/Learning-Git-1/">上一篇文章</a>，这里从略。</p><h2 id="设置-Git-的用户名"><a href="#设置-Git-的用户名" class="headerlink" title="设置 Git 的用户名"></a>设置 Git 的用户名</h2><p>这里在之前文章的基础上有了拓展，既可以设置全局用户名，也可以为每个仓库设置单独的用户名。命令分别如下：<br><code>$ git config --global user.name &quot;Mona Lisa&quot;</code><br><code>git config  user.name &quot;Mona Lisa&quot;</code></p><h2 id="缓存-Github-凭证"><a href="#缓存-Github-凭证" class="headerlink" title="缓存 Github 凭证"></a>缓存 Github 凭证</h2><p>下载Github CLI 即可，跟随文档无脑走。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fatal: <span class="title">unable</span> <span class="title">to</span> <span class="title">access</span> `&lt;<span class="title">link</span>&gt;`, <span class="title">Failure</span> <span class="title">when</span> <span class="title">receiving</span> <span class="title">data</span> <span class="title">from</span> <span class="title">the</span> <span class="title">peer</span>.</span></span><br></pre></td></tr></table></figure><p>这种报错和登录凭证关系不大，是代理设置的问题，参见:<a href="https://blog.csdn.net/qq_17229141/article/details/134484804">链接</a>。</p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>Git 用仓库名关联一个仓库的链接。默认的远程仓库名称通常为 <code>origin</code>。远程仓库仅仅是一个名字，不是本质，还不能起到远程仓库的效果，改成”张三”也成。如果要使用 <code>pull</code> 或者 <code>push</code> 等命令，则需要进行设置，如在 push 命令中设置：<code>git push --set-upstream origin main</code>，意思是，将要 track 的分支设置为 origin 这个地址中的 main 分支。<strong>upstream</strong> 上游，就是这个意思。</p><ul><li><p>创建远程仓库<br>创建一个远程仓库，在 <strong>项目的目录</strong> 用 <code>$ git remote add origin &lt;REMOTE_URL&gt;</code>，可以通过 <code>$ git remote -v</code> 查看 remote 的信息。</p></li><li><p>更改远程仓库的URL<br>具体的语法为，<code>$ git remote set-url &lt;name&gt; &lt;link&gt;</code></p></li><li><p>重命名仓库</p></li></ul><p><code>$ git remote rename &lt;origin&gt; &lt;destination&gt;</code></p><ul><li>删除仓库</li></ul><p><code>$ git remote rm &lt;repo name&gt;</code><br>只是删除了 repository 的引用。</p><h2 id="设置文本编辑器"><a href="#设置文本编辑器" class="headerlink" title="设置文本编辑器"></a>设置文本编辑器</h2><p>Git 默认的文本编辑器是 vim，一开始可能不太好上手，这里可以通过命令设置为 VS Code：<br><code>git config --global core.editor &quot;code --wait&quot;</code></p><h1 id="Git-大纲"><a href="#Git-大纲" class="headerlink" title="Git 大纲"></a>Git 大纲</h1><h2 id="概念理解"><a href="#概念理解" class="headerlink" title="概念理解"></a>概念理解</h2><ul><li>repository - 是存放代码的地方。是一个 Git 项目；</li><li>commit - 是文件按时间线的快照；</li><li>branch - commits 可以被分为许多开发的分支，叫 branch；</li><li>Github - 是 Git repositories 的托管平台，并提供方便的研发工具；</li><li>pull request - 简称 PR，一个合并分支的请求，通常发生在将研发完成的新功能分支合并到主分支的过程中。</li></ul><h2 id="主要命令"><a href="#主要命令" class="headerlink" title="主要命令"></a>主要命令</h2><ul><li><code>git init</code> 初始化一个 git repository；</li><li><code>git clone</code> 从URL或者本地克隆一个建成的 git repository；</li><li><code>git add</code> 将修改或新建的文件添加到 staging area，标志着项目进行到了一个阶段；</li><li><code>git commit</code> 保存快照，完成版本记录的进程；</li><li><code>git status</code> 显示文件的状态，如 untracked, modified, staged；</li><li><code>git branch</code>  和分支相关的命令，参见<a href="https://xialing233.github.io/2024/02/14/Learning-Git-1/">上一篇文章</a> <strong>管理分支</strong> ；</li><li><code>git merge</code> 将不同开发路线融合在一起；</li><li><code>git pull</code> 从 remote 更新内容；</li><li><code>git push</code> 向 remote 中更新内容。</li></ul><p>有几个例子，我照搬过来。注意上传到 Github 要用到什么命令。  </p><h2 id="Example-1-Contribute-to-an-existing-repository"><a href="#Example-1-Contribute-to-an-existing-repository" class="headerlink" title="Example 1: Contribute to an existing repository"></a>Example 1: Contribute to an existing repository</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># download a repository on GitHub to our machine</span><br><span class="line"># <span class="built_in">Replace</span> `owner/repo` with the owner and name of the repository to clone</span><br><span class="line">git clone https://github.com/owner/repo.git</span><br><span class="line"></span><br><span class="line"># change into the `repo` directory</span><br><span class="line"><span class="built_in">cd</span> repo</span><br><span class="line"></span><br><span class="line"># create a new branch to store any new changes</span><br><span class="line">git branch my-branch</span><br><span class="line"></span><br><span class="line"># switch to that branch (line of development)</span><br><span class="line">git checkout my-branch</span><br><span class="line"></span><br><span class="line"># make changes, <span class="keyword">for</span> example, edit `file1.<span class="built_in">md</span>` and `file2.<span class="built_in">md</span>` using the text editor</span><br><span class="line"></span><br><span class="line"># stage the changed files</span><br><span class="line">git add file1.<span class="built_in">md</span> file2.<span class="built_in">md</span></span><br><span class="line"></span><br><span class="line"># take a snapshot of the staging area (anything that&#x27;s been added), -m means using &quot;my snapshot&quot; as commit message</span><br><span class="line">git commit -m &quot;my snapshot&quot;</span><br><span class="line"></span><br><span class="line"># push changes to github</span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin my-branch</span><br></pre></td></tr></table></figure><h2 id="Example-2-Start-a-new-repository-and-publish-it-to-Github"><a href="#Example-2-Start-a-new-repository-and-publish-it-to-Github" class="headerlink" title="Example 2: Start a new repository and publish it to Github"></a>Example 2: Start a new repository and publish it to Github</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># create a new directory, and initialize it with git-specific functions</span><br><span class="line">git init my-repo</span><br><span class="line"></span><br><span class="line"># change into the `my-repo` directory</span><br><span class="line"><span class="built_in">cd</span> my-repo</span><br><span class="line"></span><br><span class="line"># create the first file <span class="keyword">in</span> the project</span><br><span class="line">touch README.<span class="built_in">md</span></span><br><span class="line"></span><br><span class="line"># git isn&#x27;t aware of the file, stage it</span><br><span class="line">git add README.<span class="built_in">md</span></span><br><span class="line"></span><br><span class="line"># take a snapshot of the staging area</span><br><span class="line">git commit -m &quot;add README to initial commit&quot;</span><br><span class="line"></span><br><span class="line"># provide the <span class="built_in">path</span> <span class="keyword">for</span> the repository you created on github</span><br><span class="line">git remote add origin https://github.com/YOUR-USERNAME/YOUR-REPOSITORY-NAME.git</span><br><span class="line"></span><br><span class="line"># push changes to github</span><br><span class="line">git push --<span class="built_in">set</span>-upstream origin main</span><br></pre></td></tr></table></figure><h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><ul><li>基本格式</li></ul><p><code>$ git push REMOTE-NAME BRANCH-NAME</code></p><ul><li>重命名分支</li></ul><p><code>$ git push REMOTE-NAME LOCAL-BRANCH-NAME:REMOTE-BRANCH-NAME</code><br>这样本地分支 <code>LOCAL-BRANCH-NAME</code> 被 push 到了 <code>REMOTE-NAME</code> 但是名字变成了 <code>REMOTE-BRANCH-NAME</code></p><p>如果本地副本的版本落后于 repository，则会在 push 时收到错误：<code>non-fast-forward updates were rejected</code>，此时需要从 repository 中 pull 更新的部分。</p><ul><li><p>Push tags(从略，照搬)<br>可以使用 <code>git push REMOTE-NAME TAG-NAME</code></p></li><li><p>删除分支</p></li></ul><p><code>git push REMOTE-NAME :BRANCH-NAME</code> 告诉 Git，向 &#96;&#96;&#96;BRANCH-NAME&#96; 中发送 <em>nothing</em> 。</p><h2 id="获得修改"><a href="#获得修改" class="headerlink" title="获得修改"></a>获得修改</h2><p>这里再次辨析 <code>pull</code> <code>fetch</code> <code>clone</code> 与 <code>merge</code>。什么都没有的时候，用 <code>clone</code>，直接获得一个拷贝；已经复制完了，用 <code>fetch</code> 可以先行查看修改，参见上一篇文章；之后，可以通过 <code>merge</code> 将修改进行合并。而 <code>pull</code> 可以同时完成 <code>fetch</code> 和 <code>merge</code> 两个步骤。</p><h1 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h1><p>作为小白，到此应该可以比较熟练地运用 Git 与 Github 了。在阅读本文的同时，应该<a href="https://docs.github.com/en/get-started/getting-started-with-git">尝试学习官方文档</a>，并亲自上手创建几个测试项目。祝大家学习顺利。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git学习-1</title>
      <link href="//2024/02/learning-git-1/"/>
      <url>//2024/02/learning-git-1/</url>
      
        <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>Git是一个使用普遍的版本控制工具，这是我<a href="https://www.git-scm.com/docs">根据Git在线文档</a>的学习笔记。有关 Github 的内容，请期待后续文章。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>直接点击<a href="https://git-scm.com/">官网</a>的Download按钮即可</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>设置用户名与邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name Comes Here&quot;</span><br><span class="line">$ git config --global user.email you@yourdomain.example.com</span><br></pre></td></tr></table></figure><h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><ol><li>如果有tar包，可以使用以下命令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzf project.tar.gz</span><br><span class="line">$ cd project</span><br><span class="line">$ git init  # 初始化一个git目录</span><br></pre></td></tr></table></figure><ol start="2"><li>记录最初的版本</li></ol><p>使用 <code>$ git add .</code> 可以记录当前目录下的所有内容，这些文件会被储存到一个临时的 staging area，Git 的术语叫 “index”。</p><ol start="3"><li>最终提交</li></ol><p>用<code>$ git commit</code> 语句，可以永久地将 index 中的内容存储到 repository 中。</p><h2 id="修改项目"><a href="#修改项目" class="headerlink" title="修改项目"></a>修改项目</h2><p>修改项目也是同理，总共分三步：</p><ol><li>用文本编辑器，或者 IDE 修改文件</li><li>用 <code>$ git add file1 file2 file3</code> 命令将修改的文件添加到 index 中</li><li>用 <code>$ git commit </code> 命令提交修改，并配上修改的信息</li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>在 <strong>步骤2.</strong> 后， <strong>步骤3.</strong> 前，可以使用 <code>$ git diff --cached</code> 查看 index 中要被上传的文件信息；</li></ul><p><img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/View%20Status%201.webp"></p><ul><li>当然也可以使用 <code>$ git status</code> 查看更简略的信息；</li></ul><p><img src="https://s2.loli.net/2024/02/14/ZmgPbtkyuO1G2a8.png" alt="status方法"></p><ul><li>可以使用更简略的 <code>$ git commit -a</code> 命令一次性地完成 stage 所有被修改的文件（不包含新文件），并 commit，一站式完成；</li><li>关于 commit 的信息，有两种方式。一种是短的，大约在50个字符以内，用一行完成描述；另一种是较长的，具体格式为，第一行为大标题，第二行为空行，第三行开始时较长的详细描述。</li></ul><h2 id="查询项目历史"><a href="#查询项目历史" class="headerlink" title="查询项目历史"></a>查询项目历史</h2><p>方法1，用 <code>$ git log</code> 查询，会按由近及远的顺序依次显示修改的简略信息；</p><p><img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/Log%20Method%201.webp"></p><p>方法2，用 <code>git log -p</code> 可以查询到具体的修改内容，如对文件内容的修改，增加、删除了哪些行等；</p><p><img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/Log%20Method%202.webp" alt="Log Method 2"></p><p>方法3，用<code>git log --stat --summary</code>，可以看到每次修改的大致内容，如每个文件增减了多少行等等。</p><p><img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/Log%20Method%203.webp" alt="Log Method 3"></p><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>浏览时，用上下方向键可以调整阅读的区域，要退出，依次输入 <strong>wq</strong> 即可（虽然不太确定，不过这似乎是 vim 的语法。在这里，冒号已经输入好了，所以我们只需要输入 wq 两个字符）。</p><h2 id="管理分支-branch"><a href="#管理分支-branch" class="headerlink" title="管理分支(branch)"></a>管理分支(branch)</h2><h3 id="创建并切换分支"><a href="#创建并切换分支" class="headerlink" title="创建并切换分支"></a>创建并切换分支</h3><p>可以通过 <code>$ git branch 分支名</code> 新建一个分支。</p><p>用 <code>$ git branch</code> 可以浏览现存的所有分支。</p><p>用 <code>$ git switch 分支名</code> 切换分支。（注意 <strong>不是</strong> <code>$ git branch switch 分支名</code>）</p><h4 id="注意-2"><a href="#注意-2" class="headerlink" title="注意"></a>注意</h4><p>在创建分支之前，务必确保曾经 commit 过一次。查询的方法，可以输入 <code>$ git branch</code> 查看有没有分支，如果列表是空的，则需要 commit。否则会报错：fatal: not a valid object name: ‘master’。<a href="https://blog.csdn.net/hengyunabc/article/details/6058145">参考链接</a></p><h3 id="修改分支"><a href="#修改分支" class="headerlink" title="修改分支"></a>修改分支</h3><p>修改分支和修改 master 是一样的流程，参见上文 <strong>修改项目</strong> 。</p><h3 id="融合分支"><a href="#融合分支" class="headerlink" title="融合分支"></a>融合分支</h3><p>融合分支，需要在 <strong>master branch</strong> 使用 <code>$ git merge 分支名</code> 命令，如果两个分支没有冲突，则融合结束。</p><p>如果二者有冲突，则需要通过 <code>$ git diff</code> 命令查看冲突，并直接修改文件夹中的文件。</p><p><img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/Conflict%20cmd.webp" alt="Conflict cmd"></p><p>此时要注意，不需要输入其他指令，切换分支，或者退出融合过程，直接修改文件夹中冲突的部分。见下图：</p><p> <img src="https://static.xialing.icu/img/2024-02-14-Learning-Git-1/Conflict%20Txt.webp" alt="Conflict Txt"><br>修改的时候，不只要修改冲突的内容，也要把类似 &lt;&lt;&lt;&lt;&lt;&lt;&lt;HEAD 的内容也删除，否则这些内容会保留下来。</p><p>可以使用 <code>$ gitk</code> 查看图形化的 merge 流程，更加直观。</p><p>之后就可以用 <code>git branch -d 分支名</code> 删除实验性的分支了。这种修改，可以保证被删除的分支里的内容完全被融合到 master 中。如果分支中有部分内容未被融合，会提示无法删除。若不顾融合强制删除，则将小写d改为大写，<code>git branch -D 分支名</code>。</p><h2 id="协作-clone-pull-fetch-merge"><a href="#协作-clone-pull-fetch-merge" class="headerlink" title="协作(clone, pull, fetch, merge)"></a>协作(clone, pull, fetch, merge)</h2><p>乙克隆了甲的项目，如果在本地，用 <code>$ git clone 地址 仓库名</code> ，内容与原仓库一模一样。<br>乙修改了文件，并且 commit 了修改。甲可以通过 <code>$ git pull 地址 master</code> fetch 并 merge 乙的修改，甲可能要处理一些冲突。</p><p>如果甲想先看看乙做了哪些修改，可以用 <code>$ git fetch 地址 master</code> 获取到更改，并用 <code>$ git log -p HEAD..FETCH_HEAD</code> 查看乙的修改。<code>HEAD..FETCH_HEAD</code> 意味展示所有 <code>FETCH_HEAD</code> 中的内容但是排除 <code>HEAD</code> 中的内容。<br>可视化，则可以用 <code>$ gitk HEAD..FETCH_HEAD</code>。<br>如果想看看他们两个人共同修改过的内容，则将两个点改成三个点：<code>$ gitk HEAD...FETCH_HEAD</code>，这样展示了排除相同文件后，甲乙所有的文件。  </p><p>甲还可以用 <code>$ git remote add 乙 地址</code> 来速写，这样就可以用 <code>$ git fetch 乙 </code> 来获取仓库了，而不需要输入一大串地址。相比之下，乙不需要进行这样的操作，因为甲的地址已经在克隆时自动记录了。<br>对比内容的命令则变为 <code> $ git log -p master..bob/master</code>，其他形式的可以类推。  </p><p>对于远程克隆，则将地址改为 ssh 协议或者其他协议的地址名即可，只是多了登录的操作。</p><h2 id="探索历史"><a href="#探索历史" class="headerlink" title="探索历史"></a>探索历史</h2><p>上文已经探讨过 <code>$ git log</code> 的用法，这里更进一步地讨论。</p><p>在 <code>$ git log</code>中，展示的第一行内容是某个  <code>commit</code> 的名字。如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit c82a22c39cbc32576f64f5c6b3f24b99ea8149c7</span><br><span class="line">Author: Junio C Hamano &lt;junkio@cox.net&gt;</span><br><span class="line">Date:   Tue May 16 17:18:22 2006 -0700</span><br><span class="line"></span><br><span class="line">    merge-base: Clarify the comments on post processing.</span><br></pre></td></tr></table></figure><p>中， <code>c82a22c39cbc32576f64f5c6b3f24b99ea8149c7</code> 就是这次 commit 的名字。</p><p>要查询这个 commit，只需要用 <code> $ git show c82a22c39c</code> 即可。用更长的名字也无妨，但这个长度已经足够分别出不同的 commit。除此之外，还有一些查询方法，如查询某个分支的修改，查询某个分支的 “parent” commit 等等。这里就不一一列出，可以参见<a href="https://git-scm.com/docs/gittutorial">教程</a>。</p><p>还可以通过 <code>$ git tag 标签名 commit名</code> 来给 commit 加标签，这个我认为比较有用。</p><p>除此以外的指令，大多比较细枝末节，不再一一列出。</p><h2 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h2><p>以上就是本文的全部内容。这些都是 Git 最基础的本地操作，还没有涉及到 Github 在线存储的环节。关于后者，请参见后续文章。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C Primer Plus 第三章编程练习笔记</title>
      <link href="//2024/02/cpp-c3-pe/"/>
      <url>//2024/02/cpp-c3-pe/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近假期重拾了C Primer Plus，做了做第三章的编程练习题。因为才是第三章，所以难度不是很大，不过有一些小地方还是值得注意的。因为中文版翻译的水平实在难以恭维，而且英文版确实上手不难，所以就用英文版的题目了。</p><h2 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h2><blockquote><p>Find out what your system does with integer overflow, floating-point overflow, andfloating-point underflow by using the experimental approach; that is, write programs having these problems. (You can check the discussion in Chapter 4 of <code>limits.h</code> and <code>float.h</code> to get guidance on the largest and smallest values.)</p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题比较简单，在于考察底层的知识。可以参考注释，找找自己电脑的 <code>limits.h</code> 头文件，找到相关的定义。像我这台64位的电脑，<code>int</code> 和 <code>long</code> 就都占了4个字节。还能获取到具体的数值。</p><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;C3Q1&gt; integer overflow and floating-point overflow / underflow</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// integer overflow</span></span><br><span class="line"><span class="type">int</span> max_int = <span class="number">2147483647</span>;</span><br><span class="line">max_int++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max_int);</span><br><span class="line">max_int++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, max_int);</span><br><span class="line"></span><br><span class="line"><span class="comment">// floating-point overflow</span></span><br><span class="line"><span class="type">float</span> max_float = <span class="number">3.402823466e+38</span>F;</span><br><span class="line"><span class="type">float</span> min_positive_float = <span class="number">1.401298464e-45</span>F;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, max_float + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, max_float - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, min_positive_float - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, min_positive_float / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS2022的输出结果为：</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">-2147483648</span></span><br><span class="line"><span class="comment">-2147483647</span></span><br><span class="line"><span class="comment">340282346638528859811704183484516925440.000000</span></span><br><span class="line"><span class="comment">340282346638528859811704183484516925440.000000</span></span><br><span class="line"><span class="comment">-1.000000</span></span><br><span class="line"><span class="comment">0.000000</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h2><blockquote><p>Write a program that asks you to enter an ASCII code value, such as 66, and then prints the character having that ASCII code.</p></blockquote><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>本题涉及到之前讲的，和转义字符有关的知识。注意事项有输入输出的类型等等，注释里写的很详尽。为了让代码更有整体性，注意的地方和疑难在注释中更全面，这是本文的一个约定。</p><h3 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;C3Q2.c&gt; print a character based on given ASCII code</span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ASCII_ch; <span class="comment">// char type will result in runtime debug error, however you can ignore it; an integer type is richer in type</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ASCII_ch); <span class="comment">// must be %d, %c will cause receiving only the first number as a character</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, ASCII_ch); <span class="comment">// must be %c to reach your goal, output binary code as a character type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h2><blockquote><p>Write a program that sounds an alert and then prints the following text:<br><code>Startled by the sudden sound, Sally shouted,</code><br><code>&quot;By the Great Pumpkin, what was that!&quot;</code></p></blockquote><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>还是转义字符的知识，如何打印出\a，以及如何打印出有特殊含义的转义字符，如 \、”等。</p><h3 id="源代码-2"><a href="#源代码-2" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;C3Q3.c&gt; using printf */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\aStartled by the sudden sound, Sally shouted,\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\&quot;By the Great Pumpkin, what was that!\&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS2022的输出结果为：</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">Startled by the sudden sound, Sally shouted,</span></span><br><span class="line"><span class="comment">&quot;By the Great Pumpkin, what was that!&quot;</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="题目4"><a href="#题目4" class="headerlink" title="题目4"></a>题目4</h2><blockquote><p>Write a program that reads in a floating-point number and prints it first in decimal-point notation, then in exponential notation, and then, if your system supports it, p notation.<br>Have the output use the following format (the actual number of digits displayed for the exponent depends on the system):<br><code>Enter a floating-point value: 64.25</code><br><code>fixed-point notation: 64.250000</code><br><code>exponential notation: 6.425000e+01</code><br><code>p notation: 0x1.01p+6</code></p></blockquote><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>浮点数的格式化输出，还挺有用的。之前不太喜欢 <code>%e</code> 格式的输出，用习惯了还觉得挺顺眼的。</p><h3 id="源代码-3"><a href="#源代码-3" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;C3Q4.c&gt; handle floats */</span></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> f_val;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter a floating-point value: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;f_val);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fixed-point notation: %f\n&quot;</span>, f_val);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;exponential notation: %e\n&quot;</span>, f_val);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p notation: %a\n&quot;</span>, f_val); <span class="comment">// Note the specifier for p notation is %a</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h2><blockquote><p>There are approximately 3.156 × 10<sup>7</sup> seconds in a year. Write a program that requests your age in years and then displays the equivalent number of seconds.</p></blockquote><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>下边几道题都是单位换算，比较简单。</p><h3 id="源代码-4"><a href="#源代码-4" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;C3Q5.c&gt; year to seconds</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> year_age;</span><br><span class="line"><span class="type">int</span> sec_age; <span class="comment">// Though the number is in a e notation, it&#x27;s a integer actually, so int type will be fine</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter your age: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year_age);</span><br><span class="line"></span><br><span class="line">sec_age = <span class="number">3.156e+7</span> * year_age; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s equivalent to %d seconds!\n&quot;</span>, sec_age);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目6"><a href="#题目6" class="headerlink" title="题目6"></a>题目6</h2><blockquote><p>The mass of a single molecule of water is about 3.0×10<sup>-23</sup> grams. A quart of water is about 950 grams.Write a program that requests an amount of water, in quarts, and displays the number of water molecules in that amount.</p></blockquote><h3 id="源代码-5"><a href="#源代码-5" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;C3Q6.c&gt; quarts to molecules */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> water_quarts, molecule_num;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter an amount of water in quart(s): &quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// to receive a double value in C, you MUST use &quot;%lf&quot;! </span></span><br><span class="line"><span class="comment">// In printf(), both &quot;%lf&quot; and &quot;%f&quot; will work, </span></span><br><span class="line"><span class="comment">// because float arguments in prinf() will be automatically transferred into double type.</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;water_quarts); </span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;water quarts: %f\n&quot;, water_quarts);</span></span><br><span class="line"></span><br><span class="line">molecule_num = water_quarts * <span class="number">950</span> / <span class="number">3.0e-23</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;There are about %.2e molecules.\n&quot;</span>, molecule_num); <span class="comment">// %d will result in trash values, and e notation is more clear</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目7"><a href="#题目7" class="headerlink" title="题目7"></a>题目7</h2><blockquote><p>There are 2.54 centimeters to the inch. Write a program that asks you to enter your height in inches and then displays your height in centimeters. Or, if you prefer, ask for the height in centimeters and convert that to inches.</p></blockquote><h3 id="源代码-6"><a href="#源代码-6" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;C3Q7.c&gt; centimeter to inch */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> cm_height, inch_height;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter your height in centimeters: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;cm_height);</span><br><span class="line"></span><br><span class="line">inch_height = cm_height / <span class="number">2.54</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;So you are %.2f in inch!\n&quot;</span>, inch_height);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h2><blockquote><p>In the U.S. system of volume measurements, a pint is 2 cups, a cup is 8 ounces, an ounce is 2 tablespoons, and a tablespoon is 3 teaspoons. Write a program that requests a volume in cups and that displays the equivalent volumes in pints, ounces, tablespoons, and teaspoons. Why does a floating-point type make more sense for this application than an integer type?</p></blockquote><h3 id="源代码-7"><a href="#源代码-7" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;C3Q8.c&gt; volume measurements */</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> vol;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Enter a volumn in cups: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;vol);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;== %.2f pint(s)\n&quot;</span>, vol / <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;== %.2f ounce(s)\n&quot;</span>, vol * <span class="number">8</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;== %.2f tablespoon(s)\n&quot;</span>, vol * <span class="number">8</span> * <span class="number">2</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;== %.2f teaspoon(s)\n&quot;</span>, vol * <span class="number">8</span> * <span class="number">2</span> * <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在VS2022的输出结果为：</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">Enter a volumn in cups: 2.3</span></span><br><span class="line"><span class="comment">== 1.15 pint(s)</span></span><br><span class="line"><span class="comment">== 18.40 ounce(s)</span></span><br><span class="line"><span class="comment">== 36.80 tablespoon(s)</span></span><br><span class="line"><span class="comment">== 110.40 teaspoon(s)</span></span><br><span class="line"><span class="comment">------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本章的题目大多和数据类型的转换有关。在把代码整合为文章的过程中，又习得了 MarkDown 的另一个语法，用左右各三个&#96;符号可以框住代码块。当然还有上标 <code>&lt;sup&gt;&lt;/sup&gt; </code> 以及下标 <code>&lt;sub&gt;&lt;/sub&gt;</code>。还能学到HTML，一举两得。</p>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章——Markdown学习笔记-1</title>
      <link href="//2024/02/learning-markdown-1/"/>
      <url>//2024/02/learning-markdown-1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在寒假无所事事，数学或者编程也学不进去，索性搞点自己感兴趣的，可能就是建自己的博客吧。<br>诚然，现在知乎啊，CSDN啊等等这些社区相对都比较成熟了，但是呢，我还是觉得，有一个自己的博客会更酷。因为以后在博客上写文章多少要用到 Markdown，所以就从学习 Markdown 开始吧。</p><h2 id="L1-斜体和加粗"><a href="#L1-斜体和加粗" class="headerlink" title="L1 斜体和加粗"></a>L1 斜体和加粗</h2><p>斜体，用左右各一个下划线(_)把中间的内容围起来，就是斜体。<br>形如 _italic_，效果是 <em>italic</em> 。</p><p>加粗，则是用左右各两个星号(**)把内容围起来，<br>比如说 **Bold**，效果是 <strong>Bold</strong> 。</p><h2 id="L2-各级标题"><a href="#L2-各级标题" class="headerlink" title="L2 各级标题"></a>L2 各级标题</h2><p>Markdown里边，标题一共有六个层级，分别用#来代表大小，#越多，大小越小。比如我这里的标题，都是以两个#开头的。</p><h2 id="L3-链接"><a href="#L3-链接" class="headerlink" title="L3 链接"></a>L3 链接</h2><p>在Markdown里，有两种类型的链接。第一种是包含在文本中，比如：<br>[Search for it.](<a href="https://www.google.com/">https://www.google.com</a>)<br>效果如下：<br><a href="https://www.google.com/">Search for it.</a></p><p>还有一种链接，叫 reference link，单独定义了链接这个变量，便于整体修改，如：<br>[哔哩哔哩大学][Bilibili University]<br>[BiliBili University]: <a href="http://www.bilibili.com/">www.bilibili.com</a></p><p>效果如下：<br><a href="https://www.bilibili.com/">哔哩哔哩大学</a><br>注意一定要在文章的末尾放置定义！还有，要加上https:&#x2F;&#x2F;，要不然就成了我这个网址下的子页面了。</p><h2 id="L4-图片"><a href="#L4-图片" class="headerlink" title="L4 图片"></a>L4 图片</h2><p>图片和链接是差不多的，只不过需要在代码前再加上一个感叹号(!)。不再赘述了。</p><h2 id="L5-引用块"><a href="#L5-引用块" class="headerlink" title="L5 引用块"></a>L5 引用块</h2><p>用 &gt; 在一段话的开头，可以让整段文字变成引用的形式。比如：</p><blockquote><p>寒蝉凄切，对长亭晚，骤雨初歇。都门帐饮无绪，留恋处，兰舟催发。执手相看泪眼，竟无语凝噎。念去去，千里烟波，暮霭沉沉楚天阔。<br>多情自古伤离别，更那堪，冷落清秋节！今宵酒醒何处？杨柳岸，晓风残月。此去经年，应是良辰好景虚设。便纵有千种风情，更与何人说？</p></blockquote><p>如果一大段文字中间有空行，为了使分隔开来的文字均被引用，需要在空行也加上 &gt;</p><h2 id="L6-列表"><a href="#L6-列表" class="headerlink" title="L6 列表"></a>L6 列表</h2><p>列表有两种，有序的和无序的。<br>在项前面加星号(*)以及<strong>一个空格</strong>可以构成一个列表，形如</p><ul><li>item 1</li><li>item 2</li></ul><p>有序的列表则是所见即所得，类似这种形式 1. item，注意句点后还是有空格</p><ol><li>item 1</li><li>item 2</li></ol><p>除此之外还可以和斜体、粗体、引用等混合使用</p><h2 id="L7-软间隔"><a href="#L7-软间隔" class="headerlink" title="L7 软间隔"></a>L7 软间隔</h2><p>按照教程的意思，在 Markdown 里，换行不会影响输出的格式，这和我之前接触的Latex是一样的。不过在 VSCode 里，似乎确实会影响排版，不知道是什么原因。<br>为了引入一个类似于换行的效果，我们采取了在前一句的末尾加两个空格的做法。<br>如：<br>轻轻地我走了，<br>正如我轻轻地来。<br>我挥一挥衣袖，<br>不带走一片云彩。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>有关 Markdown 的经典语法，到这里就结束了。Believe it or not, 至少<a href="https://www.markdowntutorial.com/">我随便Google到的一个网站</a>是这么说的。其实还有好多地方没能研究明白，说不定以后会出续集呢。今天就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
